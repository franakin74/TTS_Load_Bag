{
  "SaveName": "",
  "Date": "",
  "VersionNumber": "",
  "GameMode": "",
  "GameType": "",
  "GameComplexity": "",
  "Tags": [],
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Table": "",
  "Sky": "",
  "Note": "",
  "TabStates": {},
  "LuaScript": "",
  "LuaScriptState": "",
  "XmlUI": "",
  "ObjectStates": [
    {
      "GUID": "5c58c3",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "posX": -29.9999828,
        "posY": 1.76999891,
        "posZ": 29.5000172,
        "rotX": -4.87704938E-06,
        "rotY": 180.002914,
        "rotZ": -5.80995163E-07,
        "scaleX": 1.20052135,
        "scaleY": 0.249882281,
        "scaleZ": 1.3145982
      },
      "Nickname": "La Sororité des Secrets",
      "Description": "Scénario Indépendants",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj",
        "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089671904/37973808FD8469FE95B3EC17292A2209129F4D55/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "Bag": {
        "Order": 0
      },
      "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
      "LuaScriptState": "{\"ml\":{\"02ab52\":{\"lock\":false,\"pos\":{\"x\":-6.5,\"y\":1.5068,\"z\":15.5},\"rot\":{\"x\":-0.0012,\"y\":60,\"z\":359.9881},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"0578e6\":{\"lock\":false,\"pos\":{\"x\":-6.5,\"y\":1.5057,\"z\":10},\"rot\":{\"x\":0.0097,\"y\":120.0003,\"z\":359.993},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"073f6b\":{\"lock\":false,\"pos\":{\"x\":10.9994,\"y\":1.573,\"z\":7.4991},\"rot\":{\"x\":2.0932,\"y\":180.0005,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"0f3fd7\":{\"lock\":false,\"pos\":{\"x\":-19.5,\"y\":1.8006,\"z\":7.5},\"rot\":{\"x\":0,\"y\":180.0322,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"0f66c8\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.84,\"z\":21.5},\"rot\":{\"x\":0,\"y\":180.0046,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"1be688\":{\"lock\":false,\"pos\":{\"x\":-1.0001,\"y\":1.5754,\"z\":14.4997},\"rot\":{\"x\":2.0936,\"y\":180.006,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1de6db\":{\"lock\":false,\"pos\":{\"x\":-0.5,\"y\":1.5064,\"z\":16},\"rot\":{\"x\":0.005,\"y\":90.0071,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"1e4abc\":{\"lock\":false,\"pos\":{\"x\":-19.4999,\"y\":1.8124,\"z\":4.5003},\"rot\":{\"x\":4.7492,\"y\":0.0038,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"1f075d\":{\"lock\":false,\"pos\":{\"x\":-27.4996,\"y\":1.785,\"z\":4.5005},\"rot\":{\"x\":1.604,\"y\":359.9788,\"z\":-0.0009},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"1fe820\":{\"lock\":false,\"pos\":{\"x\":-33,\"y\":1.8075,\"z\":9.4995},\"rot\":{\"x\":4.1824,\"y\":0.0405,\"z\":0.0001},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"2f676c\":{\"lock\":false,\"pos\":{\"x\":-32.8487,\"y\":1.8323,\"z\":2.516},\"rot\":{\"x\":359.9745,\"y\":179.6459,\"z\":180.0583},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3382f5\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.4799,\"z\":-4.5001},\"rot\":{\"x\":0,\"y\":180.0002,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"39353a\":{\"lock\":false,\"pos\":{\"x\":-31.5,\"y\":1.84,\"z\":13.5},\"rot\":{\"x\":0,\"y\":180.0038,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"3b7319\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.8208,\"z\":2.5},\"rot\":{\"x\":0.0374,\"y\":179.9922,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"42c2b1\":{\"lock\":false,\"pos\":{\"x\":4.9994,\"y\":1.5748,\"z\":14.4992},\"rot\":{\"x\":2.0932,\"y\":180.0026,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"43d872\":{\"lock\":false,\"pos\":{\"x\":-27.5,\"y\":1.84,\"z\":7.5},\"rot\":{\"x\":0,\"y\":180.0257,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"441a6c\":{\"lock\":false,\"pos\":{\"x\":-26,\"y\":1.84,\"z\":21.5},\"rot\":{\"x\":0,\"y\":180.0011,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"4aa311\":{\"lock\":false,\"pos\":{\"x\":12.5012,\"y\":1.5412,\"z\":-6.0169},\"rot\":{\"x\":0.0109,\"y\":180.0005,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4d16a8\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.506,\"z\":12.5},\"rot\":{\"x\":0.0109,\"y\":179.9854,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"4e1541\":{\"lock\":false,\"pos\":{\"x\":-31.8488,\"y\":1.8807,\"z\":2.5221},\"rot\":{\"x\":359.8821,\"y\":179.6654,\"z\":180.0278},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4f0597\":{\"lock\":false,\"pos\":{\"x\":-27.5,\"y\":1.7836,\"z\":2.5},\"rot\":{\"x\":0.0003,\"y\":179.9989,\"z\":180.0021},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"526b96\":{\"lock\":false,\"pos\":{\"x\":-32.9995,\"y\":1.8346,\"z\":4.5017},\"rot\":{\"x\":7.2996,\"y\":-0.004,\"z\":0.0013},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"56719b\":{\"lock\":false,\"pos\":{\"x\":-20.4998,\"y\":1.771,\"z\":18},\"rot\":{\"x\":0,\"y\":-0.0016,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"5724c7\":{\"lock\":false,\"pos\":{\"x\":-19.4999,\"y\":1.8124,\"z\":13.0002},\"rot\":{\"x\":4.7495,\"y\":0.0032,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"5b3d13\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.771,\"z\":4.5},\"rot\":{\"x\":0,\"y\":359.9775,\"z\":0.0001},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"60ae59\":{\"lock\":false,\"pos\":{\"x\":-26.0002,\"y\":1.84,\"z\":16.5002},\"rot\":{\"x\":0,\"y\":180.0093,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"6167ac\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.6173,\"z\":-2.9971},\"rot\":{\"x\":-0.0006,\"y\":179.9964,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"67581c\":{\"lock\":false,\"pos\":{\"x\":-0.5,\"y\":1.505,\"z\":9},\"rot\":{\"x\":0.0049,\"y\":90.007,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"69eaa5\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5197,\"z\":16},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"70e565\":{\"lock\":false,\"pos\":{\"x\":-19.5001,\"y\":1.8102,\"z\":11.0002},\"rot\":{\"x\":0,\"y\":180.0218,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.5058,\"z\":16},\"rot\":{\"x\":0.005,\"y\":90.01,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"73788b\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5054,\"z\":12.5},\"rot\":{\"x\":0.0109,\"y\":179.9852,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"795808\":{\"lock\":false,\"pos\":{\"x\":-19.5002,\"y\":1.8102,\"z\":2.5001},\"rot\":{\"x\":0,\"y\":180.0413,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7cfdf7\":{\"lock\":false,\"pos\":{\"x\":-33,\"y\":1.8054,\"z\":7.4998},\"rot\":{\"x\":0,\"y\":180.0306,\"z\":180.0002},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"881a7d\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.771,\"z\":23},\"rot\":{\"x\":0,\"y\":0.0004,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"881ff8\":{\"lock\":false,\"pos\":{\"x\":-25.9998,\"y\":1.771,\"z\":18},\"rot\":{\"x\":0,\"y\":-0.0016,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"8ec98a\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.5179,\"z\":9},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"98a9a2\":{\"lock\":false,\"pos\":{\"x\":-24.4997,\"y\":1.8401,\"z\":11},\"rot\":{\"x\":0.0374,\"y\":180.0002,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"99fb3c\":{\"lock\":false,\"pos\":{\"x\":-24.4999,\"y\":1.771,\"z\":12.9941},\"rot\":{\"x\":0,\"y\":0.0112,\"z\":0.0001},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"9a5ecc\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.5045,\"z\":9},\"rot\":{\"x\":0.005,\"y\":90.0047,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"9cc3bc\":{\"lock\":false,\"pos\":{\"x\":-24.5052,\"y\":1.7836,\"z\":7.4813},\"rot\":{\"x\":0,\"y\":180.0001,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9d7725\":{\"lock\":false,\"pos\":{\"x\":4.9992,\"y\":1.5735,\"z\":7.4985},\"rot\":{\"x\":2.0928,\"y\":179.9936,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a2110f\":{\"lock\":false,\"pos\":{\"x\":-20.4771,\"y\":1.4799,\"z\":-4.5049},\"rot\":{\"x\":0,\"y\":180.0005,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"a81991\":{\"lock\":false,\"pos\":{\"x\":-26,\"y\":1.771,\"z\":23},\"rot\":{\"x\":0,\"y\":0.0005,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"a909b3\":{\"lock\":false,\"pos\":{\"x\":-33.9567,\"y\":1.7837,\"z\":2.5096},\"rot\":{\"x\":-0.0011,\"y\":179.6492,\"z\":179.9913},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b2f07e\":{\"lock\":false,\"pos\":{\"x\":-31.5,\"y\":1.771,\"z\":15},\"rot\":{\"x\":0,\"y\":0.0006,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"c177e4\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.84,\"z\":16.5},\"rot\":{\"x\":0,\"y\":179.9992,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"c4f005\":{\"lock\":false,\"pos\":{\"x\":-34.4999,\"y\":1.771,\"z\":15},\"rot\":{\"x\":0,\"y\":0.0006,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"c8c4b8\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.5049,\"z\":12.5},\"rot\":{\"x\":0.0109,\"y\":179.9998,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d7efd5\":{\"lock\":false,\"pos\":{\"x\":-27.4789,\"y\":1.9412,\"z\":11.0121},\"rot\":{\"x\":0.0376,\"y\":179.9926,\"z\":179.9999},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d81927\":{\"lock\":false,\"pos\":{\"x\":23.5012,\"y\":1.5138,\"z\":-5.523},\"rot\":{\"x\":0.0109,\"y\":180.0027,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"dd1c4f\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5184,\"z\":9},\"rot\":{\"x\":0.0109,\"y\":179.9707,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00007\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.5179,\"z\":9},\"rot\":{\"x\":0.0109,\"y\":180.0007,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00008\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5197,\"z\":16},\"rot\":{\"x\":0.0109,\"y\":179.9704,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00009\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.5192,\"z\":16},\"rot\":{\"x\":0.0109,\"y\":179.9795,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0000a\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5184,\"z\":9},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0000b\":{\"lock\":false,\"pos\":{\"x\":14.5159,\"y\":1.5173,\"z\":8.9797},\"rot\":{\"x\":0.0109,\"y\":179.9761,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0000c\":{\"lock\":false,\"pos\":{\"x\":-3.5001,\"y\":1.5202,\"z\":16},\"rot\":{\"x\":0.0109,\"y\":179.973,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0000d\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.5189,\"z\":9},\"rot\":{\"x\":0.0109,\"y\":179.9983,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0000e\":{\"lock\":false,\"pos\":{\"x\":-9.5,\"y\":1.5201,\"z\":12.5},\"rot\":{\"x\":0.0109,\"y\":179.9771,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e41dcd\":{\"lock\":false,\"pos\":{\"x\":12.501,\"y\":1.5412,\"z\":-6.0168},\"rot\":{\"x\":0.0109,\"y\":180.0002,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ebba44\":{\"lock\":false,\"pos\":{\"x\":11.5001,\"y\":1.504,\"z\":9},\"rot\":{\"x\":0.005,\"y\":90.0061,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"f00a53\":{\"lock\":false,\"pos\":{\"x\":-34.5,\"y\":1.84,\"z\":13.5},\"rot\":{\"x\":0,\"y\":180.0034,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"fa7d89\":{\"lock\":false,\"pos\":{\"x\":-23,\"y\":1.771,\"z\":24},\"rot\":{\"x\":0,\"y\":0.0007,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"fd4dd3\":{\"lock\":false,\"pos\":{\"x\":-27.4997,\"y\":1.771,\"z\":12.9593},\"rot\":{\"x\":-0.0001,\"y\":359.9676,\"z\":0.0003},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}}}}",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "02ab52",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -6.49999952,
            "posY": 1.50678742,
            "posZ": 15.5,
            "rotX": -0.00116114051,
            "rotY": 59.9999733,
            "rotZ": 359.9881,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://i.imgur.com/vppt2my.png",
            "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "States": {
            "2": {
              "GUID": "4d3553",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.11995,
                "posY": 1.60650957,
                "posZ": 3.85999179,
                "rotX": 359.9831,
                "rotY": 359.984558,
                "rotZ": 359.920074,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.1199474,
                "posY": 1.60650969,
                "posZ": 3.85999274,
                "rotX": 359.983124,
                "rotY": 359.984467,
                "rotZ": 359.9201,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          }
        },
        {
          "GUID": "0578e6",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -6.50000048,
            "posY": 1.50574183,
            "posZ": 10.0,
            "rotX": 0.009731163,
            "rotY": 120.000305,
            "rotZ": 359.993042,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://i.imgur.com/vppt2my.png",
            "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "States": {
            "2": {
              "GUID": "4d3553",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.11995,
                "posY": 1.60650957,
                "posZ": 3.85999179,
                "rotX": 359.9831,
                "rotY": 359.984558,
                "rotZ": 359.920074,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.1199474,
                "posY": 1.60650969,
                "posZ": 3.85999274,
                "rotX": 359.983124,
                "rotY": 359.984467,
                "rotZ": 359.9201,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          }
        },
        {
          "GUID": "073f6b",
          "Name": "Card",
          "Transform": {
            "posX": 10.9994,
            "posY": 1.57298815,
            "posZ": 7.49910069,
            "rotX": 2.093192,
            "rotY": 180.000519,
            "rotZ": 0.004942582,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Susan Matthews",
          "Description": "La Biblioth�caire",
          "GMNotes": "{\"id\":\"768c2c90-e2af-46dc-b2f4-5b4eb019d9e7\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"768c2c90-e2af-46dc-b2f4-5b4eb019d9e7\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 1118600,
          "SidewaysCard": false,
          "CustomDeck": {
            "11186": {
              "FaceURL": "https://i.imgur.com/2Cb92tn.jpeg",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "0f3fd7",
          "Name": "Deck",
          "Transform": {
            "posX": -19.5,
            "posY": 1.80055952,
            "posZ": 7.499999,
            "rotX": -5.017992E-06,
            "rotY": 180.03215,
            "rotZ": 9.130143E-08,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "SidewaysCard": false,
          "DeckIDs": [
            1113536,
            1113545
          ],
          "CustomDeck": {
            "11135": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "46ff84",
              "Name": "Card",
              "Transform": {
                "posX": -24.5001011,
                "posY": 1.7835778,
                "posZ": 6.99988031,
                "rotX": 0.000278637744,
                "rotY": 180.031418,
                "rotZ": -0.00185713056,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Clé Ouvragée",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 1113536,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "4cb171",
              "Name": "Card",
              "Transform": {
                "posX": -24.5000076,
                "posY": 1.81641245,
                "posZ": 6.999995,
                "rotX": 0.00637933565,
                "rotY": 180.031387,
                "rotZ": 359.9922,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "June Winters",
              "Description": "Vous Accompagne",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 1113545,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "0f66c8",
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": -20.4999962,
            "posY": 1.83999956,
            "posZ": 21.5000038,
            "rotX": -4.017043E-06,
            "rotY": 180.004562,
            "rotZ": -8.88020963E-07,
            "scaleX": 0.7,
            "scaleY": 0.7,
            "scaleZ": 0.7
          },
          "Nickname": "Cheryl vous fait confiance",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
            "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089707735/3BDBB92799B40E513508B0A1B7B8C959EFC67094/",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CustomShader": {
              "SpecularColor": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "SpecularIntensity": 0.0,
              "SpecularSharpness": 2.0,
              "FresnelStrength": 0.0
            },
            "CastShadows": true
          },
          "Bag": {
            "Order": 0
          },
          "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
          "LuaScriptState": "{\"ml\":{\"2bcde0\":{\"lock\":false,\"pos\":{\"x\":17.501,\"y\":1.5504,\"z\":-6.0196},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4e9a52\":{\"lock\":false,\"pos\":{\"x\":17.501,\"y\":1.5504,\"z\":-6.0196},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "2bcde0",
              "Name": "Deck",
              "Transform": {
                "posX": 17.501,
                "posY": 1.55043852,
                "posZ": -6.0196,
                "rotX": 0.0108919041,
                "rotY": 179.999954,
                "rotZ": 0.004948263,
                "scaleX": 0.714285731,
                "scaleY": 1.0,
                "scaleZ": 0.714285731
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                1124900,
                1124300,
                1125000,
                1124000,
                1124500,
                1124700
              ],
              "CustomDeck": {
                "11249": {
                  "FaceURL": "https://i.imgur.com/zsSooWW.jpeg",
                  "BackURL": "https://i.imgur.com/W8JMsl0.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11243": {
                  "FaceURL": "https://i.imgur.com/HYdqA5z.jpeg",
                  "BackURL": "https://i.imgur.com/0eDgHBL.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11250": {
                  "FaceURL": "https://i.imgur.com/wY37Mwu.jpeg",
                  "BackURL": "https://i.imgur.com/fps3cVe.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11240": {
                  "FaceURL": "https://i.imgur.com/tHhYcGs.jpeg",
                  "BackURL": "https://i.imgur.com/4SE8QxB.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11245": {
                  "FaceURL": "https://i.imgur.com/yyf1HY6.jpeg",
                  "BackURL": "https://i.imgur.com/xfyg5GV.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11247": {
                  "FaceURL": "https://i.imgur.com/fi2YbdY.jpeg",
                  "BackURL": "https://i.imgur.com/2W7uDjs.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "f56e7d",
                  "Name": "Card",
                  "Transform": {
                    "posX": 32.9999771,
                    "posY": 1.49345267,
                    "posZ": 15.0000286,
                    "rotX": 0.000167264181,
                    "rotY": 180.000168,
                    "rotZ": -0.0005619798,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Stopper le Culte",
                  "Description": "",
                  "GMNotes": "{\"id\":\"0e4aeb6e-4b45-4398-9668-70267f7f9605\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"0e4aeb6e-4b45-4398-9668-70267f7f9605\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1124900,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11249": {
                      "FaceURL": "https://i.imgur.com/zsSooWW.jpeg",
                      "BackURL": "https://i.imgur.com/W8JMsl0.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "f2c915",
                  "Name": "Card",
                  "Transform": {
                    "posX": 33.0,
                    "posY": 1.53369379,
                    "posZ": 15.0,
                    "rotX": 0.0011745037,
                    "rotY": 180.001465,
                    "rotZ": 0.0006186781,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Trouver la Cathédrale",
                  "Description": "",
                  "GMNotes": "{\"id\":\"45cf5fb1-682c-4a1d-b1be-41911ef93af3\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"45cf5fb1-682c-4a1d-b1be-41911ef93af3\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1124300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11243": {
                      "FaceURL": "https://i.imgur.com/HYdqA5z.jpeg",
                      "BackURL": "https://i.imgur.com/0eDgHBL.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "90ebc4",
                  "Name": "Card",
                  "Transform": {
                    "posX": 33.0,
                    "posY": 1.56765676,
                    "posZ": 15.0,
                    "rotX": -4.13098278E-05,
                    "rotY": 180.0,
                    "rotZ": -0.000110220033,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "L'Ombre dans les Arbres",
                  "Description": "",
                  "GMNotes": "{\"id\":\"cfdcc9fe-761f-4bc3-803d-0069ad3532bb\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"cfdcc9fe-761f-4bc3-803d-0069ad3532bb\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1125000,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11250": {
                      "FaceURL": "https://i.imgur.com/wY37Mwu.jpeg",
                      "BackURL": "https://i.imgur.com/fps3cVe.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00008",
                  "Name": "Card",
                  "Transform": {
                    "posX": 40.00014,
                    "posY": 1.51360822,
                    "posZ": 17.5000019,
                    "rotX": -1.83494558E-06,
                    "rotY": 180.002213,
                    "rotZ": -0.000325864559,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Le Plan de Cheryl, 3ème partie",
                  "Description": "",
                  "GMNotes": "{\"id\":\"f3c7b928-657a-437a-82e3-fc84b2f86146\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"f3c7b928-657a-437a-82e3-fc84b2f86146\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1124000,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11240": {
                      "FaceURL": "https://i.imgur.com/tHhYcGs.jpeg",
                      "BackURL": "https://i.imgur.com/4SE8QxB.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00007",
                  "Name": "Card",
                  "Transform": {
                    "posX": 40.0,
                    "posY": 1.57833791,
                    "posZ": 17.5,
                    "rotX": 0.651336849,
                    "rotY": 180.0017,
                    "rotZ": 359.549744,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Le Plan de Cheryl, 2ème partie",
                  "Description": "",
                  "GMNotes": "{\"id\":\"98d7c79a-f051-42e4-9562-f9e7d7f27520\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"98d7c79a-f051-42e4-9562-f9e7d7f27520\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1124500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11245": {
                      "FaceURL": "https://i.imgur.com/yyf1HY6.jpeg",
                      "BackURL": "https://i.imgur.com/xfyg5GV.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00006",
                  "Name": "Card",
                  "Transform": {
                    "posX": 40.0,
                    "posY": 1.59800327,
                    "posZ": 17.5,
                    "rotX": 2.837285E-05,
                    "rotY": 180.000443,
                    "rotZ": 359.61795,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Le Plan de Cheryl, 1ère partie",
                  "Description": "",
                  "GMNotes": "{\"id\":\"f418b008-7121-4ae8-b291-433e0797f6b3\",\"type\":\"Act\",\"class\":\"Mythos\",\"clueThresholdPerInvestigator\":3,\"TtsZoopGuid\":\"f418b008-7121-4ae8-b291-433e0797f6b3\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1124700,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11247": {
                      "FaceURL": "https://i.imgur.com/fi2YbdY.jpeg",
                      "BackURL": "https://i.imgur.com/2W7uDjs.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ]
        },
        {
          "GUID": "1be688",
          "Name": "Card",
          "Transform": {
            "posX": -1.00009978,
            "posY": 1.57536685,
            "posZ": 14.4997,
            "rotX": 2.09361982,
            "rotY": 180.006012,
            "rotZ": 0.00495123444,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "June Winters",
          "Description": "La Chauffeuse",
          "GMNotes": "{\"id\":\"5774ccc1-375d-4b40-9d7a-bd8ded1c2be3\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"5774ccc1-375d-4b40-9d7a-bd8ded1c2be3\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 1118500,
          "SidewaysCard": false,
          "CustomDeck": {
            "11185": {
              "FaceURL": "https://i.imgur.com/6T5t63W.jpeg",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "1de6db",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -0.499999642,
            "posY": 1.50636423,
            "posZ": 16.0,
            "rotX": 0.00495065143,
            "rotY": 90.00711,
            "rotZ": 359.989136,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://i.imgur.com/vppt2my.png",
            "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "States": {
            "2": {
              "GUID": "4d3553",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.11995,
                "posY": 1.60650957,
                "posZ": 3.85999179,
                "rotX": 359.9831,
                "rotY": 359.984558,
                "rotZ": 359.920074,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.1199474,
                "posY": 1.60650969,
                "posZ": 3.85999274,
                "rotX": 359.983124,
                "rotY": 359.984467,
                "rotZ": 359.9201,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          }
        },
        {
          "GUID": "1e4abc",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -19.4999046,
            "posY": 1.81239367,
            "posZ": 4.50029755,
            "rotX": 4.74912739,
            "rotY": 0.00383006688,
            "rotZ": -1.657442E-05,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Marque du Chasseur\"}",
          "XmlUI": ""
        },
        {
          "GUID": "1f075d",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -27.49961,
            "posY": 1.78498912,
            "posZ": 4.500491,
            "rotX": 1.60406268,
            "rotY": 359.97876,
            "rotZ": -0.0008833876,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Cathédrale\"}",
          "XmlUI": ""
        },
        {
          "GUID": "1fe820",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -33.00002,
            "posY": 1.80746257,
            "posZ": 9.499489,
            "rotX": 4.18222952,
            "rotY": 0.0406508446,
            "rotZ": 8.356843E-05,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Cultistes de la Sororité\"}",
          "XmlUI": ""
        },
        {
          "GUID": "2f676c",
          "Name": "Card",
          "Transform": {
            "posX": -32.8487434,
            "posY": 1.829395,
            "posZ": 2.513729,
            "rotX": 359.7743,
            "rotY": 179.676361,
            "rotZ": 181.5415,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Flore Rowe",
          "Description": "",
          "GMNotes": "{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"healthPerInv\": \"true\",\n  \"type\": \"Enemy\",\n  \"victory\": 0\n}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 1113533,
          "SidewaysCard": false,
          "CustomDeck": {
            "11135": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "3382f5",
          "Name": "Custom_PDF",
          "Transform": {
            "posX": -20.5,
            "posY": 1.47986,
            "posZ": -4.5001,
            "rotX": 1.55152655E-08,
            "rotY": 180.0002,
            "rotZ": -2.91371034E-08,
            "scaleX": 2.17822933,
            "scaleY": 1.0,
            "scaleZ": 2.17822933
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomPDF": {
            "PDFUrl": "https://steamusercontent-a.akamaihd.net/ugc/14182719605567566/BBA8DF896700C6AD0F53F4D31106F2BA98A6AA41/",
            "PDFPassword": "",
            "PDFPage": 0,
            "PDFPageOffset": 0
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "39353a",
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": -31.5000019,
            "posY": 1.84000039,
            "posZ": 13.4999981,
            "rotX": -5.4037464E-06,
            "rotY": 180.0038,
            "rotZ": -9.549965E-08,
            "scaleX": 0.7,
            "scaleY": 0.7,
            "scaleZ": 0.7
          },
          "Nickname": "Extérieur",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
            "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089690205/2909088E3DDE6C9DD98DB367092BBA4782F5A54F/",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CustomShader": {
              "SpecularColor": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "SpecularIntensity": 0.0,
              "SpecularSharpness": 2.0,
              "FresnelStrength": 0.0
            },
            "CastShadows": true
          },
          "Bag": {
            "Order": 0
          },
          "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
          "LuaScriptState": "{\"ml\":{\"8a7463\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.5176,\"z\":2},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9024d9\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.5046,\"z\":5.5},\"rot\":{\"x\":0.0109,\"y\":179.9933,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}}}}",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "9024d9",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -3.5,
                "posY": 1.50462735,
                "posZ": 5.5,
                "rotX": 0.01089221,
                "rotY": 179.993286,
                "rotZ": 0.004950408,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/vppt2my.png",
                "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "States": {
                "2": {
                  "GUID": "4d3553",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.11995,
                    "posY": 1.60650957,
                    "posZ": 3.85999179,
                    "rotX": 359.9831,
                    "rotY": 359.984558,
                    "rotZ": 359.920074,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                "3": {
                  "GUID": "5b38c6",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.1199474,
                    "posY": 1.60650969,
                    "posZ": 3.85999274,
                    "rotX": 359.983124,
                    "rotY": 359.984467,
                    "rotZ": 359.9201,
                    "scaleX": 0.8,
                    "scaleY": 1.0,
                    "scaleZ": 0.8
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              }
            },
            {
              "GUID": "8a7463",
              "Name": "Card",
              "Transform": {
                "posX": -3.49999738,
                "posY": 1.51755607,
                "posZ": 1.99999213,
                "rotX": 0.0110253142,
                "rotY": 180.0,
                "rotZ": 180.005692,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Extérieur du Manoir Rowe",
              "Description": "",
              "GMNotes": "{\"id\":\"eb23da58-eaba-4420-b272-c6e64e38a9c8\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Spade\",\"connections\":\"Clover|TriangleAlt\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Spade\",\"connections\":\"Clover|TriangleAlt\"},\"TtsZoopGuid\":\"eb23da58-eaba-4420-b272-c6e64e38a9c8\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1122600,
              "SidewaysCard": false,
              "CustomDeck": {
                "11226": {
                  "FaceURL": "https://i.imgur.com/4WTPbTO.jpeg",
                  "BackURL": "https://i.imgur.com/cqIa10O.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "3b7319",
          "Name": "Deck",
          "Transform": {
            "posX": -24.5000076,
            "posY": 1.82081687,
            "posZ": 2.49998927,
            "rotX": 0.0374200046,
            "rotY": 179.99231,
            "rotZ": 179.999969,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": false,
          "SidewaysCard": false,
          "DeckIDs": [
            1122900,
            1123000,
            1122800,
            1123100,
            1122700,
            1123200
          ],
          "CustomDeck": {
            "11229": {
              "FaceURL": "https://i.imgur.com/DaHx823.jpeg",
              "BackURL": "https://i.imgur.com/SfwObK9.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            },
            "11230": {
              "FaceURL": "https://i.imgur.com/4bOz9be.jpeg",
              "BackURL": "https://i.imgur.com/ZPHCQWM.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            },
            "11228": {
              "FaceURL": "https://i.imgur.com/c47lGk8.jpeg",
              "BackURL": "https://i.imgur.com/5fSErgT.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            },
            "11231": {
              "FaceURL": "https://i.imgur.com/l5SIsjN.jpeg",
              "BackURL": "https://i.imgur.com/4CITR2M.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            },
            "11227": {
              "FaceURL": "https://i.imgur.com/nyUdPiM.jpeg",
              "BackURL": "https://i.imgur.com/kDLhAR0.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            },
            "11232": {
              "FaceURL": "https://i.imgur.com/UVJ39RC.jpeg",
              "BackURL": "https://i.imgur.com/izkawD3.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "6a3d01",
              "Name": "Card",
              "Transform": {
                "posX": -28.0000038,
                "posY": 1.88349843,
                "posZ": 9.499995,
                "rotX": -4.961887E-06,
                "rotY": 180.00087,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Sombre Forêt",
              "Description": "Inquiétante",
              "GMNotes": "{\"id\":\"e43ee3de-cec2-45fb-a3d3-c5e31d9da634\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"For�t.\",\"locationFront\":{\"connections\":\"TriangleAlt\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"connections\":\"TriangleAlt\"},\"TtsZoopGuid\":\"e43ee3de-cec2-45fb-a3d3-c5e31d9da634\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1122900,
              "SidewaysCard": false,
              "CustomDeck": {
                "11229": {
                  "FaceURL": "https://i.imgur.com/DaHx823.jpeg",
                  "BackURL": "https://i.imgur.com/SfwObK9.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "8eef67",
              "Name": "Card",
              "Transform": {
                "posX": -19.5000076,
                "posY": 1.81641066,
                "posZ": 26.9999962,
                "rotX": 0.00638607051,
                "rotY": 180.000122,
                "rotZ": 359.9922,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Sombre Forêt",
              "Description": "Lugubre",
              "GMNotes": "{\"id\":\"db024a03-a755-43a5-9c82-c27af196bcd7\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"For�t.\",\"locationFront\":{\"connections\":\"TriangleAlt\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"connections\":\"TriangleAlt\"},\"TtsZoopGuid\":\"db024a03-a755-43a5-9c82-c27af196bcd7\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1123000,
              "SidewaysCard": false,
              "CustomDeck": {
                "1002": {
                  "FaceURL": "https://i.imgur.com/4bOz9be.jpeg",
                  "BackURL": "https://i.imgur.com/ZPHCQWM.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "32e7d5",
              "Name": "Card",
              "Transform": {
                "posX": -19.4999313,
                "posY": 1.8700105,
                "posZ": 26.9999886,
                "rotX": 0.00121073844,
                "rotY": 180.000717,
                "rotZ": 179.97966,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Maison de Campagne ",
              "Description": "Laissée à l'Abandon",
              "GMNotes": "{\"id\":\"b7fa5bc4-81ea-439d-8cd0-a272bb581260\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"For�t.\",\"locationFront\":{\"connections\":\"TriangleAlt\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"connections\":\"TriangleAlt\"},\"TtsZoopGuid\":\"b7fa5bc4-81ea-439d-8cd0-a272bb581260\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1122800,
              "SidewaysCard": false,
              "CustomDeck": {
                "11228": {
                  "FaceURL": "https://i.imgur.com/c47lGk8.jpeg",
                  "BackURL": "https://i.imgur.com/5fSErgT.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3b2129",
              "Name": "Card",
              "Transform": {
                "posX": -19.4999962,
                "posY": 1.86011779,
                "posZ": 27.0000038,
                "rotX": -0.000171115375,
                "rotY": 180.000092,
                "rotZ": 180.000916,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Sombre Forêt",
              "Description": "Sépulcrale",
              "GMNotes": "{\"id\":\"ffae3cf7-172a-4a68-8996-a0d047bdedc5\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"For�t.\",\"locationFront\":{\"connections\":\"TriangleAlt\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"connections\":\"TriangleAlt\"},\"TtsZoopGuid\":\"ffae3cf7-172a-4a68-8996-a0d047bdedc5\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1123100,
              "SidewaysCard": false,
              "CustomDeck": {
                "1003": {
                  "FaceURL": "https://i.imgur.com/l5SIsjN.jpeg",
                  "BackURL": "https://i.imgur.com/4CITR2M.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ad1bb3",
              "Name": "Card",
              "Transform": {
                "posX": -19.4999447,
                "posY": 1.87989485,
                "posZ": 27.0000172,
                "rotX": 0.00116040907,
                "rotY": 180.0009,
                "rotZ": 179.970169,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Cathédrale Profanée",
              "Description": "Extérieur",
              "GMNotes": "{\"id\":\"43a33c72-5659-4c44-8acf-c11c59baad3a\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"For�t. Cath�drale.\",\"locationFront\":{\"icons\":\"HeartAlt\",\"connections\":\"TriangleAlt|CrossAlt\",\"uses\":[{\"countPerInvestigator\":3,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"connections\":\"TriangleAlt\"},\"TtsZoopGuid\":\"43a33c72-5659-4c44-8acf-c11c59baad3a\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1122700,
              "SidewaysCard": false,
              "CustomDeck": {
                "11227": {
                  "FaceURL": "https://i.imgur.com/nyUdPiM.jpeg",
                  "BackURL": "https://i.imgur.com/kDLhAR0.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "32347d",
              "Name": "Card",
              "Transform": {
                "posX": -19.4999981,
                "posY": 1.860093,
                "posZ": 27.0000019,
                "rotX": -0.00100485852,
                "rotY": 180.000229,
                "rotZ": -0.000445888145,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Sombre Forêt",
              "Description": "Sinistre",
              "GMNotes": "{\"id\":\"f3585432-a3ec-4ae2-a6c3-d29e1efba60b\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"For�t.\",\"locationFront\":{\"connections\":\"TriangleAlt\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"connections\":\"TriangleAlt\"},\"TtsZoopGuid\":\"f3585432-a3ec-4ae2-a6c3-d29e1efba60b\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1123200,
              "SidewaysCard": false,
              "CustomDeck": {
                "1005": {
                  "FaceURL": "https://i.imgur.com/UVJ39RC.jpeg",
                  "BackURL": "https://i.imgur.com/izkawD3.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "42c2b1",
          "Name": "Card",
          "Transform": {
            "posX": 4.99940062,
            "posY": 1.57483852,
            "posZ": 14.4992,
            "rotX": 2.0932498,
            "rotY": 180.002609,
            "rotZ": 0.004939647,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Cheryl Moses",
          "Description": "La Conservatrice",
          "GMNotes": "{\"id\":\"09f573fe-7403-4a4d-84a7-cc38ac29a674\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"09f573fe-7403-4a4d-84a7-cc38ac29a674\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 1118700,
          "SidewaysCard": false,
          "CustomDeck": {
            "11187": {
              "FaceURL": "https://i.imgur.com/0gLtQuD.jpeg",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "43d872",
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": -27.5000019,
            "posY": 1.84000075,
            "posZ": 7.499998,
            "rotX": -5.317482E-06,
            "rotY": 180.025726,
            "rotZ": 6.75114848E-07,
            "scaleX": 0.7,
            "scaleY": 0.7,
            "scaleZ": 0.7
          },
          "Nickname": "Fin",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
            "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089688282/A4A694A3F44E6A43A7B762374323859468CC303B/",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CustomShader": {
              "SpecularColor": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "SpecularIntensity": 0.0,
              "SpecularSharpness": 2.0,
              "FresnelStrength": 0.0
            },
            "CastShadows": true
          },
          "Bag": {
            "Order": 2
          },
          "LuaScript": "function onCollisionEnter(collision_info)\r\n  self.shuffle() \r\n self.shuffle() \r\n self.shuffle() \r\nend",
          "LuaScriptState": "{\"ml\":[]}",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "085dfb",
              "Name": "Card",
              "Transform": {
                "posX": -28.0,
                "posY": 1.929391,
                "posZ": 17.9999981,
                "rotX": 0.0018324171,
                "rotY": 180.033386,
                "rotZ": -0.000401373545,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Lame de la Sororité",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 1113546,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "4d90d3",
              "Name": "Deck",
              "Transform": {
                "posX": -28.0000076,
                "posY": 1.96078718,
                "posZ": 15.4999847,
                "rotX": 0.00721072638,
                "rotY": 180.008453,
                "rotZ": -0.00215253513,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                1113500,
                1113502,
                1113502,
                1113502,
                1113502
              ],
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "66d7ac",
                  "Name": "Card",
                  "Transform": {
                    "posX": -32.9794,
                    "posY": 1.78363848,
                    "posZ": 3.49967861,
                    "rotX": -0.000307546317,
                    "rotY": 179.989609,
                    "rotZ": 0.0003683985,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Elizabeth Baxter",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "0ae840",
                  "Name": "Card",
                  "Transform": {
                    "posX": -27.0000076,
                    "posY": 1.7835778,
                    "posZ": 6.999992,
                    "rotX": 0.0002788174,
                    "rotY": 180.030716,
                    "rotZ": -0.00185738038,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Rituel de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113502,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "d39148",
                  "Name": "Card",
                  "Transform": {
                    "posX": -27.0000076,
                    "posY": 1.81641233,
                    "posZ": 6.999995,
                    "rotX": 0.006383242,
                    "rotY": 180.030792,
                    "rotZ": 359.9922,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Rituel de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113502,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "52a270",
                  "Name": "Card",
                  "Transform": {
                    "posX": -27.0000038,
                    "posY": 1.85046554,
                    "posZ": 6.999998,
                    "rotX": 0.00127226964,
                    "rotY": 180.030914,
                    "rotZ": -0.00150120037,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Rituel de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113502,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "734982",
                  "Name": "Card",
                  "Transform": {
                    "posX": -27.0000038,
                    "posY": 1.86009455,
                    "posZ": 6.999998,
                    "rotX": 0.00123738183,
                    "rotY": 180.030975,
                    "rotZ": -0.00145681971,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Rituel de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113502,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "309bc8",
              "Name": "Deck",
              "Transform": {
                "posX": -28.0000076,
                "posY": 1.95597279,
                "posZ": 15.4999857,
                "rotX": 0.00705538038,
                "rotY": 180.007629,
                "rotZ": -0.002062268,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                1113547,
                1113547,
                1113547,
                1113547
              ],
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "5f7e99",
                  "Name": "Card",
                  "Transform": {
                    "posX": -30.0000114,
                    "posY": 1.78357518,
                    "posZ": 6.9999876,
                    "rotX": 0.0003204624,
                    "rotY": 180.031067,
                    "rotZ": -0.002057118,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Appui de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113547,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "a3c1a5",
                  "Name": "Card",
                  "Transform": {
                    "posX": -30.0000057,
                    "posY": 1.816415,
                    "posZ": 7.000002,
                    "rotX": -0.004920561,
                    "rotY": 180.031021,
                    "rotZ": -0.00247699535,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Appui de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113547,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "32ea49",
                  "Name": "Card",
                  "Transform": {
                    "posX": -30.0000038,
                    "posY": 1.85046554,
                    "posZ": 6.99999762,
                    "rotX": 0.00126991852,
                    "rotY": 180.03096,
                    "rotZ": -0.00149992539,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Appui de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113547,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "04d33d",
                  "Name": "Card",
                  "Transform": {
                    "posX": -29.5000019,
                    "posY": 1.8600111,
                    "posZ": 6.999999,
                    "rotX": -0.001976582,
                    "rotY": 180.031036,
                    "rotZ": 0.00187566841,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Appui de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113547,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ]
        },
        {
          "GUID": "441a6c",
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": -25.9999981,
            "posY": 1.83999956,
            "posZ": 21.5000019,
            "rotX": -5.14632166E-06,
            "rotY": 180.001083,
            "rotZ": -4.733448E-07,
            "scaleX": 0.7,
            "scaleY": 0.7,
            "scaleZ": 0.7
          },
          "Nickname": "June vous fait confiance",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
            "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089708213/88EFA42DCCA290CE926906491D1FEBD4DD0D8C21/",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CustomShader": {
              "SpecularColor": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "SpecularIntensity": 0.0,
              "SpecularSharpness": 2.0,
              "FresnelStrength": 0.0
            },
            "CastShadows": true
          },
          "Bag": {
            "Order": 0
          },
          "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
          "LuaScriptState": "{\"ml\":{\"2e97ee\":{\"lock\":false,\"pos\":{\"x\":17.501,\"y\":1.5504,\"z\":-6.0196},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b4f42e\":{\"lock\":false,\"pos\":{\"x\":17.501,\"y\":1.5504,\"z\":-6.0196},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "2e97ee",
              "Name": "Deck",
              "Transform": {
                "posX": 17.501,
                "posY": 1.55043852,
                "posZ": -6.0196,
                "rotX": 0.0108918278,
                "rotY": 179.999954,
                "rotZ": 0.00494829938,
                "scaleX": 0.714285731,
                "scaleY": 1.0,
                "scaleZ": 0.714285731
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                1124900,
                1124300,
                1125000,
                1124600,
                1124800,
                100800
              ],
              "CustomDeck": {
                "11249": {
                  "FaceURL": "https://i.imgur.com/zsSooWW.jpeg",
                  "BackURL": "https://i.imgur.com/W8JMsl0.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11243": {
                  "FaceURL": "https://i.imgur.com/HYdqA5z.jpeg",
                  "BackURL": "https://i.imgur.com/0eDgHBL.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11250": {
                  "FaceURL": "https://i.imgur.com/wY37Mwu.jpeg",
                  "BackURL": "https://i.imgur.com/fps3cVe.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11246": {
                  "FaceURL": "https://i.imgur.com/Nrb5aVg.jpeg",
                  "BackURL": "https://i.imgur.com/QW5yR6V.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11248": {
                  "FaceURL": "https://i.imgur.com/3Tsv77a.jpeg",
                  "BackURL": "https://i.imgur.com/2rqGhy4.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "1008": {
                  "FaceURL": "https://i.imgur.com/TAfxZIU.jpeg",
                  "BackURL": "https://i.imgur.com/JBBbEt5.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "f56e7d",
                  "Name": "Card",
                  "Transform": {
                    "posX": 32.9999771,
                    "posY": 1.49345267,
                    "posZ": 15.0000286,
                    "rotX": 0.000167264181,
                    "rotY": 180.000168,
                    "rotZ": -0.0005619798,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Stopper le Culte",
                  "Description": "",
                  "GMNotes": "{\"id\":\"0e4aeb6e-4b45-4398-9668-70267f7f9605\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"0e4aeb6e-4b45-4398-9668-70267f7f9605\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1124900,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11249": {
                      "FaceURL": "https://i.imgur.com/zsSooWW.jpeg",
                      "BackURL": "https://i.imgur.com/W8JMsl0.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "f2c915",
                  "Name": "Card",
                  "Transform": {
                    "posX": 33.0,
                    "posY": 1.53369379,
                    "posZ": 15.0,
                    "rotX": 0.0011745037,
                    "rotY": 180.001465,
                    "rotZ": 0.0006186781,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Trouver la Cathédrale",
                  "Description": "",
                  "GMNotes": "{\"id\":\"45cf5fb1-682c-4a1d-b1be-41911ef93af3\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"45cf5fb1-682c-4a1d-b1be-41911ef93af3\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1124300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11243": {
                      "FaceURL": "https://i.imgur.com/HYdqA5z.jpeg",
                      "BackURL": "https://i.imgur.com/0eDgHBL.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "90ebc4",
                  "Name": "Card",
                  "Transform": {
                    "posX": 33.0,
                    "posY": 1.56765676,
                    "posZ": 15.0,
                    "rotX": -4.13098278E-05,
                    "rotY": 180.0,
                    "rotZ": -0.000110220033,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "L'Ombre dans les Arbres",
                  "Description": "",
                  "GMNotes": "{\"id\":\"cfdcc9fe-761f-4bc3-803d-0069ad3532bb\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"cfdcc9fe-761f-4bc3-803d-0069ad3532bb\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1125000,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11250": {
                      "FaceURL": "https://i.imgur.com/wY37Mwu.jpeg",
                      "BackURL": "https://i.imgur.com/fps3cVe.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "15e9bc",
                  "Name": "Card",
                  "Transform": {
                    "posX": 33.0,
                    "posY": 1.49346447,
                    "posZ": 20.5,
                    "rotX": 2.1447012E-07,
                    "rotY": 180.0,
                    "rotZ": -9.306644E-07,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Le Plan de June, 3ème partie ",
                  "Description": "",
                  "GMNotes": "{\"id\":\"b643a012-94f6-436f-9375-d7023e2af1e9\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"b643a012-94f6-436f-9375-d7023e2af1e9\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1124600,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11246": {
                      "FaceURL": "https://i.imgur.com/Nrb5aVg.jpeg",
                      "BackURL": "https://i.imgur.com/QW5yR6V.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "330395",
                  "Name": "Card",
                  "Transform": {
                    "posX": 33.0,
                    "posY": 1.54387414,
                    "posZ": 20.5,
                    "rotX": -4.80733752E-06,
                    "rotY": 179.998611,
                    "rotZ": 359.621216,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Le Plan de June, 2ème partie ",
                  "Description": "",
                  "GMNotes": "{\"id\":\"0205b8b9-750c-41bd-8253-5bf4d3dc522d\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"0205b8b9-750c-41bd-8253-5bf4d3dc522d\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1124800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11248": {
                      "FaceURL": "https://i.imgur.com/3Tsv77a.jpeg",
                      "BackURL": "https://i.imgur.com/2rqGhy4.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "a60c52",
                  "Name": "Card",
                  "Transform": {
                    "posX": 33.0,
                    "posY": 1.582298,
                    "posZ": 20.5,
                    "rotX": -3.3472993E-06,
                    "rotY": 179.987045,
                    "rotZ": 359.4522,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Le Plan de June, 1ère partie ",
                  "Description": "",
                  "GMNotes": "{\"id\":\"25d04133-1171-4f8f-8b44-c5d64506ab99\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"25d04133-1171-4f8f-8b44-c5d64506ab99\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 100800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1008": {
                      "FaceURL": "https://i.imgur.com/TAfxZIU.jpeg",
                      "BackURL": "https://i.imgur.com/JBBbEt5.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ]
        },
        {
          "GUID": "4d16a8",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -3.5,
            "posY": 1.505958,
            "posZ": 12.5,
            "rotX": 0.0108929351,
            "rotY": 179.985413,
            "rotZ": 0.00495117,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://i.imgur.com/vppt2my.png",
            "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "States": {
            "2": {
              "GUID": "4d3553",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.11995,
                "posY": 1.60650957,
                "posZ": 3.85999179,
                "rotX": 359.9831,
                "rotY": 359.984558,
                "rotZ": 359.920074,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.1199474,
                "posY": 1.60650969,
                "posZ": 3.85999274,
                "rotX": 359.983124,
                "rotY": 359.984467,
                "rotZ": 359.9201,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          }
        },
        {
          "GUID": "4e1541",
          "Name": "Card",
          "Transform": {
            "posX": -31.3104744,
            "posY": 1.8173393,
            "posZ": 3.32955551,
            "rotX": 359.632965,
            "rotY": 183.650711,
            "rotZ": 181.257858,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Mélissande Rowe",
          "Description": "",
          "GMNotes": "{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"healthPerInv\": \"true\",\n  \"type\": \"Enemy\",\n  \"victory\": 0\n}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 1113534,
          "SidewaysCard": false,
          "CustomDeck": {
            "11135": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "4f0597",
          "Name": "Card",
          "Transform": {
            "posX": -27.5000153,
            "posY": 1.78357542,
            "posZ": 2.49998546,
            "rotX": 0.0003156799,
            "rotY": 179.998917,
            "rotZ": 180.00206,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Cathédrale Profanée",
          "Description": "Intérieur",
          "GMNotes": "{\"id\":\"21f77aba-50f0-41d1-b25e-a897f3679035\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Cath�drale.\",\"locationFront\":{\"icons\":\"CrossAlt\",\"connections\":\"HeartAlt\",\"uses\":[{\"count\":0,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"CrossAlt\",\"connections\":\"HeartAlt\"},\"TtsZoopGuid\":\"21f77aba-50f0-41d1-b25e-a897f3679035\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 1123800,
          "SidewaysCard": false,
          "CustomDeck": {
            "11238": {
              "FaceURL": "https://i.imgur.com/lohnEmO.jpeg",
              "BackURL": "https://i.imgur.com/jZOl3oH.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "526b96",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -32.998764,
            "posY": 1.815923,
            "posZ": 4.49842358,
            "rotX": 3.7502737,
            "rotY": 359.9017,
            "rotZ": 358.5992,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Grand Ancien\"}",
          "XmlUI": ""
        },
        {
          "GUID": "56719b",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -20.4997978,
            "posY": 1.77099991,
            "posZ": 18.0000019,
            "rotX": 5.07113E-06,
            "rotY": -0.00159178372,
            "rotZ": -2.80591451E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Porte de Chambre\"}",
          "XmlUI": ""
        },
        {
          "GUID": "5724c7",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -19.4998989,
            "posY": 1.81239986,
            "posZ": 13.0002041,
            "rotX": 4.749864,
            "rotY": 0.0031022022,
            "rotZ": 3.4906825E-05,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Soutiens d'histoire\"}",
          "XmlUI": ""
        },
        {
          "GUID": "5b3d13",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -24.5000076,
            "posY": 1.7710017,
            "posZ": 4.499992,
            "rotX": -8.330617E-06,
            "rotY": 359.977539,
            "rotZ": 8.469423E-05,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Sombre Forêt\"}",
          "XmlUI": ""
        },
        {
          "GUID": "60ae59",
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": -26.0002,
            "posY": 1.84,
            "posZ": 16.5002,
            "rotX": -5.161016E-06,
            "rotY": 180.0093,
            "rotZ": 9.58829E-08,
            "scaleX": 0.7,
            "scaleY": 0.7,
            "scaleZ": 0.7
          },
          "Nickname": "Couloirs",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
            "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089688918/CEEFA5B521D8919F0534A5D97EAA11F2976204EB/",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CustomShader": {
              "SpecularColor": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "SpecularIntensity": 0.0,
              "SpecularSharpness": 2.0,
              "FresnelStrength": 0.0
            },
            "CastShadows": true
          },
          "Bag": {
            "Order": 0
          },
          "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
          "LuaScriptState": "{\"ml\":{\"04d7e2\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.5069,\"z\":21.5},\"rot\":{\"x\":0.0097,\"y\":120.0071,\"z\":359.993},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"20d435\":{\"lock\":false,\"pos\":{\"x\":-0.5,\"y\":1.5074,\"z\":21.5},\"rot\":{\"x\":0.0012,\"y\":239.9885,\"z\":0.0119},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"3381b1\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5068,\"z\":19.5},\"rot\":{\"x\":0.0109,\"y\":179.9799,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"35fc2b\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5081,\"z\":26.5},\"rot\":{\"x\":0.0109,\"y\":179.9816,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"7cecff\":{\"lock\":false,\"pos\":{\"x\":-0.5,\"y\":1.5079,\"z\":24},\"rot\":{\"x\":0.0097,\"y\":120.0068,\"z\":359.993},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"b38d57\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.5074,\"z\":24},\"rot\":{\"x\":0.0012,\"y\":240.0269,\"z\":0.0119},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e00001\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5224,\"z\":30},\"rot\":{\"x\":0.0109,\"y\":179.9778,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00002\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.521,\"z\":23},\"rot\":{\"x\":0.0109,\"y\":180.0149,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "04d7e2",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -26.0002,
                "posY": 1.84,
                "posZ": 16.5002,
                "rotX": 0.009731927,
                "rotY": 120.007111,
                "rotZ": 359.993042,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/vppt2my.png",
                "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "States": {
                "2": {
                  "GUID": "4d3553",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.11995,
                    "posY": 1.60650957,
                    "posZ": 3.85999179,
                    "rotX": 359.9831,
                    "rotY": 359.984558,
                    "rotZ": 359.920074,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                "3": {
                  "GUID": "5b38c6",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.1199474,
                    "posY": 1.60650969,
                    "posZ": 3.85999274,
                    "rotX": 359.983124,
                    "rotY": 359.984467,
                    "rotZ": 359.9201,
                    "scaleX": 0.8,
                    "scaleY": 1.0,
                    "scaleZ": 0.8
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              }
            },
            {
              "GUID": "20d435",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -26.0002,
                "posY": 1.84,
                "posZ": 16.5002,
                "rotX": 0.00116334576,
                "rotY": 239.988556,
                "rotZ": 0.0119114583,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/vppt2my.png",
                "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "States": {
                "2": {
                  "GUID": "4d3553",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.11995,
                    "posY": 1.60650957,
                    "posZ": 3.85999179,
                    "rotX": 359.9831,
                    "rotY": 359.984558,
                    "rotZ": 359.920074,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                "3": {
                  "GUID": "5b38c6",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.1199474,
                    "posY": 1.60650969,
                    "posZ": 3.85999274,
                    "rotX": 359.983124,
                    "rotY": 359.984467,
                    "rotZ": 359.9201,
                    "scaleX": 0.8,
                    "scaleY": 1.0,
                    "scaleZ": 0.8
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              }
            },
            {
              "GUID": "3381b1",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -26.0002,
                "posY": 1.84,
                "posZ": 16.5002,
                "rotX": 0.0108933132,
                "rotY": 179.9799,
                "rotZ": 0.0049482733,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/vppt2my.png",
                "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "States": {
                "2": {
                  "GUID": "4d3553",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.11995,
                    "posY": 1.60650957,
                    "posZ": 3.85999179,
                    "rotX": 359.9831,
                    "rotY": 359.984558,
                    "rotZ": 359.920074,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                "3": {
                  "GUID": "5b38c6",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.1199474,
                    "posY": 1.60650969,
                    "posZ": 3.85999274,
                    "rotX": 359.983124,
                    "rotY": 359.984467,
                    "rotZ": 359.9201,
                    "scaleX": 0.8,
                    "scaleY": 1.0,
                    "scaleZ": 0.8
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              }
            },
            {
              "GUID": "35fc2b",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -26.0002,
                "posY": 1.84,
                "posZ": 16.5002,
                "rotX": 0.0108932285,
                "rotY": 179.9816,
                "rotZ": 0.00494937459,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/vppt2my.png",
                "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "States": {
                "2": {
                  "GUID": "4d3553",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.11995,
                    "posY": 1.60650957,
                    "posZ": 3.85999179,
                    "rotX": 359.9831,
                    "rotY": 359.984558,
                    "rotZ": 359.920074,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                "3": {
                  "GUID": "5b38c6",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.1199474,
                    "posY": 1.60650969,
                    "posZ": 3.85999274,
                    "rotX": 359.983124,
                    "rotY": 359.984467,
                    "rotZ": 359.9201,
                    "scaleX": 0.8,
                    "scaleY": 1.0,
                    "scaleZ": 0.8
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              }
            },
            {
              "GUID": "7cecff",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -26.0002,
                "posY": 1.84,
                "posZ": 16.5002,
                "rotX": 0.009731885,
                "rotY": 120.00679,
                "rotZ": 359.993042,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/vppt2my.png",
                "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "States": {
                "2": {
                  "GUID": "4d3553",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.11995,
                    "posY": 1.60650957,
                    "posZ": 3.85999179,
                    "rotX": 359.9831,
                    "rotY": 359.984558,
                    "rotZ": 359.920074,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                "3": {
                  "GUID": "5b38c6",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.1199474,
                    "posY": 1.60650969,
                    "posZ": 3.85999274,
                    "rotX": 359.983124,
                    "rotY": 359.984467,
                    "rotZ": 359.9201,
                    "scaleX": 0.8,
                    "scaleY": 1.0,
                    "scaleZ": 0.8
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              }
            },
            {
              "GUID": "b38d57",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -26.0002,
                "posY": 1.84,
                "posZ": 16.5002,
                "rotX": 0.00115551928,
                "rotY": 240.026886,
                "rotZ": 0.0119114341,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/vppt2my.png",
                "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "States": {
                "2": {
                  "GUID": "4d3553",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.11995,
                    "posY": 1.60650957,
                    "posZ": 3.85999179,
                    "rotX": 359.9831,
                    "rotY": 359.984558,
                    "rotZ": 359.920074,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                "3": {
                  "GUID": "5b38c6",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.1199474,
                    "posY": 1.60650969,
                    "posZ": 3.85999274,
                    "rotX": 359.983124,
                    "rotY": 359.984467,
                    "rotZ": 359.9201,
                    "scaleX": 0.8,
                    "scaleY": 1.0,
                    "scaleZ": 0.8
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              }
            },
            {
              "GUID": "e00001",
              "Name": "Card",
              "Transform": {
                "posX": 2.49997449,
                "posY": 1.52237117,
                "posZ": 29.9999676,
                "rotX": 0.0108934548,
                "rotY": 179.977783,
                "rotZ": 180.004944,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Bureau",
              "Description": "",
              "GMNotes": "{\"id\":\"1c255a84-db39-431f-9438-6f44a2fdae69\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Cross\",\"connections\":\"Circle\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Cross\",\"connections\":\"Circle\"},\"TtsZoopGuid\":\"1c255a84-db39-431f-9438-6f44a2fdae69\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1114100,
              "SidewaysCard": false,
              "CustomDeck": {
                "11141": {
                  "FaceURL": "https://i.imgur.com/PxUQVP5.jpeg",
                  "BackURL": "https://i.imgur.com/WFBIXmz.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "d56d8d",
              "Name": "Card",
              "Transform": {
                "posX": -26.5,
                "posY": 1.93675709,
                "posZ": 16.4999981,
                "rotX": 0.00217534648,
                "rotY": 180.015518,
                "rotZ": 180.000778,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Long Couloir",
              "Description": "",
              "GMNotes": "{\"id\":\"85f6f15d-88d3-4260-a193-848b2e3b8919\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Circle\",\"connections\":\"Triangle|Cross|Square\",\"uses\":[{\"count\":0,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Circle\",\"connections\":\"Triangle|Cross|Square\"},\"TtsZoopGuid\":\"85f6f15d-88d3-4260-a193-848b2e3b8919\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1114000,
              "SidewaysCard": false,
              "CustomDeck": {
                "11140": {
                  "FaceURL": "https://i.imgur.com/wrRMbxq.jpeg",
                  "BackURL": "https://i.imgur.com/oitDkgE.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "6167ac",
          "Name": "Deck",
          "Transform": {
            "posX": 30.5,
            "posY": 1.61727989,
            "posZ": -2.9971,
            "rotX": -0.0005910389,
            "rotY": 179.9964,
            "rotZ": 180.001068,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": false,
          "SidewaysCard": false,
          "DeckIDs": [
            1113503,
            1114600,
            1113507,
            1113509,
            1113504,
            1113503,
            1113510,
            1113506,
            1113504,
            1113507,
            1113511,
            1113511,
            1113505,
            1113509,
            1113512,
            1114600,
            1113505,
            1113506,
            1113510,
            1113512
          ],
          "CustomDeck": {
            "11135": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            },
            "11146": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081380298/050D1F1439C7CA8E319D3B9F171C9735729157E8/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081380659/DC874CC7730BC2F4B0F3C4EECAFD6AD6155DC610/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "67e0a9",
              "Name": "Card",
              "Transform": {
                "posX": 13.5944519,
                "posY": 1.52029526,
                "posZ": 23.9998932,
                "rotX": 0.0107071372,
                "rotY": 179.999649,
                "rotZ": 180.00351,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "La Proie d'une Ombre",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113503,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ae0d3f",
              "Name": "CardCustom",
              "Transform": {
                "posX": 8.089256,
                "posY": 1.76462364,
                "posZ": 23.9995136,
                "rotX": 0.005170027,
                "rotY": 179.9934,
                "rotZ": 180.722839,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Jusqu'en Enfer",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1114600,
              "SidewaysCard": false,
              "CustomDeck": {
                "11146": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081380298/050D1F1439C7CA8E319D3B9F171C9735729157E8/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081380659/DC874CC7730BC2F4B0F3C4EECAFD6AD6155DC610/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "2c8c42",
              "Name": "Card",
              "Transform": {
                "posX": 6.861105,
                "posY": 1.55525792,
                "posZ": 23.99979,
                "rotX": 359.982483,
                "rotY": 180.000244,
                "rotZ": 179.980484,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "30 Jours de Nuits",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113507,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "2ad174",
              "Name": "Card",
              "Transform": {
                "posX": 12.3707857,
                "posY": 1.64940166,
                "posZ": 23.9997253,
                "rotX": 359.984131,
                "rotY": 179.996353,
                "rotZ": 181.0354,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Le Jeu de la Dame",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113509,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "48a802",
              "Name": "Card",
              "Transform": {
                "posX": 4.41638,
                "posY": 1.63721371,
                "posZ": 23.9991131,
                "rotX": 0.07432357,
                "rotY": 180.004456,
                "rotZ": 180.46489,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Le Bal des Vampires",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113504,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ac531a",
              "Name": "Card",
              "Transform": {
                "posX": 3.18860555,
                "posY": 1.53287768,
                "posZ": 23.9998245,
                "rotX": 0.03799305,
                "rotY": 180.002213,
                "rotZ": 179.429489,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "La Proie d'une Ombre",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113503,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "af7f6b",
              "Name": "Card",
              "Transform": {
                "posX": 6.24966,
                "posY": 1.63085186,
                "posZ": 23.9995842,
                "rotX": 0.08091548,
                "rotY": 180.01,
                "rotZ": 181.929749,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Liaisons Dangeureuses",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113510,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "feabb6",
              "Name": "Card",
              "Transform": {
                "posX": 7.472673,
                "posY": 1.6295259,
                "posZ": 23.9995785,
                "rotX": 359.957428,
                "rotY": 179.984818,
                "rotZ": 180.916336,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Melancholia",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113506,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3f0e38",
              "Name": "Card",
              "Transform": {
                "posX": 8.69856548,
                "posY": 1.69647431,
                "posZ": 23.999651,
                "rotX": 0.00527220825,
                "rotY": 179.996277,
                "rotZ": 180.748169,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Le Bal des Vampires",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113504,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "543727",
              "Name": "Card",
              "Transform": {
                "posX": 12.9852486,
                "posY": 1.69408846,
                "posZ": 23.9999046,
                "rotX": 359.983856,
                "rotY": 179.9878,
                "rotZ": 181.056076,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "30 Jours de Nuits",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113507,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "94ad80",
              "Name": "Card",
              "Transform": {
                "posX": 3.80215216,
                "posY": 1.59883034,
                "posZ": 23.9993744,
                "rotX": 0.0238885749,
                "rotY": 179.995056,
                "rotZ": 178.896179,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Sans un Bruit",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113511,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ec5216",
              "Name": "Card",
              "Transform": {
                "posX": 9.919761,
                "posY": 1.56675029,
                "posZ": 23.9997921,
                "rotX": 0.01989832,
                "rotY": 179.995743,
                "rotZ": 180.791885,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Sans un Bruit",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113511,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "5c241a",
              "Name": "Card",
              "Transform": {
                "posX": 10.5318689,
                "posY": 1.53245652,
                "posZ": 23.9997883,
                "rotX": 0.00200645439,
                "rotY": 179.995026,
                "rotZ": 180.616943,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Détour Mortel",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113505,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "7f754a",
              "Name": "Card",
              "Transform": {
                "posX": 9.30896,
                "posY": 1.62852728,
                "posZ": 23.9997616,
                "rotX": 359.977478,
                "rotY": 179.999069,
                "rotZ": 180.848511,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Le Jeu de la Dame",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113509,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e23f63",
              "Name": "Card",
              "Transform": {
                "posX": 5.643735,
                "posY": 1.58129489,
                "posZ": 23.99887,
                "rotX": 0.00689220568,
                "rotY": 180.012665,
                "rotZ": 179.922012,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "L'Associée du Diable",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113512,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "deaa60",
              "Name": "CardCustom",
              "Transform": {
                "posX": 5.03150558,
                "posY": 1.549668,
                "posZ": 23.9989357,
                "rotX": -0.004679016,
                "rotY": 179.997055,
                "rotZ": 181.485657,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Jusqu'en Enfer",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1114600,
              "SidewaysCard": false,
              "CustomDeck": {
                "11146": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081380298/050D1F1439C7CA8E319D3B9F171C9735729157E8/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081380659/DC874CC7730BC2F4B0F3C4EECAFD6AD6155DC610/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "c4f091",
              "Name": "Card",
              "Transform": {
                "posX": 11.1457329,
                "posY": 1.57315457,
                "posZ": 23.9997749,
                "rotX": 359.985718,
                "rotY": 179.997,
                "rotZ": 180.88678,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Détour Mortel",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113505,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "26c902",
              "Name": "Card",
              "Transform": {
                "posX": 8.5,
                "posY": 2.18900132,
                "posZ": 24.0,
                "rotX": 359.98996,
                "rotY": 179.995789,
                "rotZ": 202.780823,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Melancholia",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113506,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "f0a587",
              "Name": "Card",
              "Transform": {
                "posX": 11.7599649,
                "posY": 1.60770559,
                "posZ": 23.99977,
                "rotX": 359.984131,
                "rotY": 179.996323,
                "rotZ": 181.0354,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Liaisons Dangeureuses",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113510,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "6c7e72",
              "Name": "Card",
              "Transform": {
                "posX": 14.2041817,
                "posY": 1.57347834,
                "posZ": 23.999855,
                "rotX": 0.0106915,
                "rotY": 179.9996,
                "rotZ": 180.017075,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "L'Associée du Diable",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113512,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "67581c",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": -0.500000536,
            "posY": 1.50503361,
            "posZ": 9.0,
            "rotX": 0.00494908961,
            "rotY": 90.007,
            "rotZ": 359.9891,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://i.imgur.com/vppt2my.png",
            "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "States": {
            "2": {
              "GUID": "4d3553",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.11995,
                "posY": 1.60650957,
                "posZ": 3.85999179,
                "rotX": 359.9831,
                "rotY": 359.984558,
                "rotZ": 359.920074,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.1199474,
                "posY": 1.60650969,
                "posZ": 3.85999274,
                "rotX": 359.983124,
                "rotY": 359.984467,
                "rotZ": 359.9201,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          }
        },
        {
          "GUID": "69eaa5",
          "Name": "Card",
          "Transform": {
            "posX": 2.49999928,
            "posY": 1.51970983,
            "posZ": 16.0,
            "rotX": 0.0108915586,
            "rotY": 180.0,
            "rotZ": 180.004959,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Salle à Manger",
          "Description": "",
          "GMNotes": "{\"id\":\"5d75ca74-5097-4522-8400-54343c484cbb\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Square\",\"connections\":\"Diamond|Circle|Slash|DoubleSlash\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Square\",\"connections\":\"Diamond|Circle|Slash|DoubleSlash\"},\"TtsZoopGuid\":\"5d75ca74-5097-4522-8400-54343c484cbb\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 100700,
          "SidewaysCard": false,
          "CustomDeck": {
            "1007": {
              "FaceURL": "https://i.imgur.com/GbEk7cY.jpeg",
              "BackURL": "https://i.imgur.com/DRR6yEk.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "70e565",
          "Name": "Deck",
          "Transform": {
            "posX": -19.5000935,
            "posY": 1.81018519,
            "posZ": 11.0002031,
            "rotX": 2.46750515E-05,
            "rotY": 180.021851,
            "rotZ": -0.000140086384,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": false,
          "SidewaysCard": false,
          "DeckIDs": [
            1118800,
            1123900,
            1118900,
            1119000
          ],
          "CustomDeck": {
            "11188": {
              "FaceURL": "https://i.imgur.com/Cqr0wMD.jpeg",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "11239": {
              "FaceURL": "https://i.imgur.com/ORFDhCH.jpeg",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "11189": {
              "FaceURL": "https://i.imgur.com/vckADcU.jpeg",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            },
            "11190": {
              "FaceURL": "https://i.imgur.com/ShT0703.jpeg",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "e00006",
              "Name": "Card",
              "Transform": {
                "posX": -22.0,
                "posY": 1.81641352,
                "posZ": 24.5000057,
                "rotX": -0.00490917452,
                "rotY": 180.024826,
                "rotZ": -0.00248915656,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Carolyn Clay",
              "Description": "L'Artiste",
              "GMNotes": "{\"id\":\"f15be23c-bfd6-4162-af89-2095ce0cdfe2\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"f15be23c-bfd6-4162-af89-2095ce0cdfe2\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1118800,
              "SidewaysCard": false,
              "CustomDeck": {
                "11188": {
                  "FaceURL": "https://i.imgur.com/Cqr0wMD.jpeg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00002",
              "Name": "Card",
              "Transform": {
                "posX": -22.0,
                "posY": 1.8504895,
                "posZ": 24.5000019,
                "rotX": -0.000180661242,
                "rotY": 180.0339,
                "rotZ": -0.0009768999,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Eileen Shepherd",
              "Description": "La Banqui�re",
              "GMNotes": "{\"id\":\"bdf63f80-b7e8-4544-9688-a941d8a3da9e\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"bdf63f80-b7e8-4544-9688-a941d8a3da9e\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1123900,
              "SidewaysCard": false,
              "CustomDeck": {
                "1001": {
                  "FaceURL": "https://i.imgur.com/ORFDhCH.jpeg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00005",
              "Name": "Card",
              "Transform": {
                "posX": -21.9999981,
                "posY": 1.86009324,
                "posZ": 24.5000019,
                "rotX": -0.00100304186,
                "rotY": 180.024887,
                "rotZ": -0.000446697319,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Linda Wolf",
              "Description": "L'�tudiante",
              "GMNotes": "{\"id\":\"22bfa679-274b-47e3-8ee1-1408c23c4516\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"22bfa679-274b-47e3-8ee1-1408c23c4516\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1118900,
              "SidewaysCard": false,
              "CustomDeck": {
                "11189": {
                  "FaceURL": "https://i.imgur.com/vckADcU.jpeg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00004",
              "Name": "Card",
              "Transform": {
                "posX": -21.999773,
                "posY": 1.78357375,
                "posZ": 24.5000439,
                "rotX": 0.000321991771,
                "rotY": 180.025543,
                "rotZ": -0.00205634441,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Diane Parrish",
              "Description": "La Journaliste",
              "GMNotes": "{\"id\":\"e16841cf-c002-4cdd-9b11-e5b6e46f5065\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"e16841cf-c002-4cdd-9b11-e5b6e46f5065\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1119000,
              "SidewaysCard": false,
              "CustomDeck": {
                "11190": {
                  "FaceURL": "https://i.imgur.com/ShT0703.jpeg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "7234af",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": 5.5,
            "posY": 1.5058459,
            "posZ": 16.0,
            "rotX": 0.00495278556,
            "rotY": 90.00996,
            "rotZ": 359.989136,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://i.imgur.com/vppt2my.png",
            "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "States": {
            "2": {
              "GUID": "4d3553",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.11995,
                "posY": 1.60650957,
                "posZ": 3.85999179,
                "rotX": 359.9831,
                "rotY": 359.984558,
                "rotZ": 359.920074,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.1199474,
                "posY": 1.60650969,
                "posZ": 3.85999274,
                "rotX": 359.983124,
                "rotY": 359.984467,
                "rotZ": 359.9201,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          }
        },
        {
          "GUID": "73788b",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": 2.5,
            "posY": 1.50543988,
            "posZ": 12.5,
            "rotX": 0.0108927749,
            "rotY": 179.985214,
            "rotZ": 0.004947835,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://i.imgur.com/vppt2my.png",
            "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "States": {
            "2": {
              "GUID": "4d3553",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.11995,
                "posY": 1.60650957,
                "posZ": 3.85999179,
                "rotX": 359.9831,
                "rotY": 359.984558,
                "rotZ": 359.920074,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.1199474,
                "posY": 1.60650969,
                "posZ": 3.85999274,
                "rotX": 359.983124,
                "rotY": 359.984467,
                "rotZ": 359.9201,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          }
        },
        {
          "GUID": "795808",
          "Name": "Deck",
          "Transform": {
            "posX": -19.5002041,
            "posY": 1.81018662,
            "posZ": 2.50009441,
            "rotX": 1.50552614E-05,
            "rotY": 180.0412,
            "rotZ": -8.938016E-05,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "SidewaysCard": false,
          "DeckIDs": [
            1113501,
            1113501,
            1113501,
            1113501
          ],
          "CustomDeck": {
            "11135": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "016e17",
              "Name": "Card",
              "Transform": {
                "posX": -27.00001,
                "posY": 1.81535923,
                "posZ": 10.4999943,
                "rotX": 0.009127817,
                "rotY": 180.030823,
                "rotZ": 359.988647,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Marque du Chasseur",
              "Description": "Vous êtes marqué",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 1113501,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "11dffd",
              "Name": "Card",
              "Transform": {
                "posX": -27.0000038,
                "posY": 1.85046518,
                "posZ": 10.4999981,
                "rotX": 0.00127327058,
                "rotY": 180.030716,
                "rotZ": -0.00150537747,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Marque du Chasseur",
              "Description": "Vous êtes marqué",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 1113501,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a77d14",
              "Name": "Card",
              "Transform": {
                "posX": -27.0000153,
                "posY": 1.78357017,
                "posZ": 10.49999,
                "rotX": 0.000353756681,
                "rotY": 180.030945,
                "rotZ": -0.00234723231,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Marque du Chasseur",
              "Description": "Vous êtes marqué",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 1113501,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a77d14",
              "Name": "Card",
              "Transform": {
                "posX": -27.0000038,
                "posY": 1.86009443,
                "posZ": 10.4999981,
                "rotX": 0.00124038651,
                "rotY": 180.030777,
                "rotZ": -0.00146128668,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Marque du Chasseur",
              "Description": "Vous êtes marqué",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 1113501,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "7cfdf7",
          "Name": "Deck",
          "Transform": {
            "posX": -33.00002,
            "posY": 1.80537081,
            "posZ": 7.49979,
            "rotX": 3.034374E-05,
            "rotY": 180.0308,
            "rotZ": 180.000168,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": false,
          "SidewaysCard": false,
          "DeckIDs": [
            1113550,
            1113549,
            1113548
          ],
          "CustomDeck": {
            "11135": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "1b5cbf",
              "Name": "Card",
              "Transform": {
                "posX": -23.0,
                "posY": 1.83353162,
                "posZ": 2.99998832,
                "rotX": 0.000473960536,
                "rotY": 180.0014,
                "rotZ": 179.999512,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "June Winters",
              "Description": "Loyale au Culte",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113550,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "651fc4",
              "Name": "Card",
              "Transform": {
                "posX": -23.5005455,
                "posY": 1.78357267,
                "posZ": 2.99945378,
                "rotX": 0.000325963338,
                "rotY": 179.999985,
                "rotZ": 180.002213,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Cheryl Moses",
              "Description": "Loyale au Culte",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113549,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "29923b",
              "Name": "Card",
              "Transform": {
                "posX": -24.0001411,
                "posY": 1.888625,
                "posZ": 3.00002241,
                "rotX": 0.0006828426,
                "rotY": 180.000046,
                "rotZ": 179.98761,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Eileen Shepherd",
              "Description": "Loyale au Culte",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113548,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "881a7d",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -20.4999962,
            "posY": 1.77099943,
            "posZ": 23.0000019,
            "rotX": 4.93281141E-06,
            "rotY": 0.000294216647,
            "rotZ": 1.72135358E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Si Cheryl vous fait confiance\"}",
          "XmlUI": ""
        },
        {
          "GUID": "881ff8",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -25.9998,
            "posY": 1.77099991,
            "posZ": 18.0,
            "rotX": 4.555153E-06,
            "rotY": -0.00160003477,
            "rotZ": 1.58468822E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Long Couloir\"}",
          "XmlUI": ""
        },
        {
          "GUID": "8ec98a",
          "Name": "Card",
          "Transform": {
            "posX": 8.5,
            "posY": 1.517861,
            "posZ": 9.0,
            "rotX": 0.0108915735,
            "rotY": 180.000015,
            "rotZ": 180.004959,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Cuisine",
          "Description": "",
          "GMNotes": "{\"id\":\"0d1ffb70-eee1-44e0-8440-fb9604ee9717\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Heart\",\"connections\":\"DoubleSlash|Slash|Moon\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Heart\",\"connections\":\"DoubleSlash|Slash|Moon\"},\"TtsZoopGuid\":\"0d1ffb70-eee1-44e0-8440-fb9604ee9717\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 100600,
          "SidewaysCard": false,
          "CustomDeck": {
            "1006": {
              "FaceURL": "https://i.imgur.com/SqVLJIM.jpeg",
              "BackURL": "https://i.imgur.com/R0klsNs.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "98a9a2",
          "Name": "Deck",
          "Transform": {
            "posX": -24.4997025,
            "posY": 1.84007275,
            "posZ": 10.9999971,
            "rotX": 0.0374327339,
            "rotY": 180.000092,
            "rotZ": 179.999969,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Sororité Delta",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": false,
          "SidewaysCard": false,
          "DeckIDs": [
            1113515,
            1113513,
            1113517,
            1113515,
            1113514,
            1113514,
            1113516,
            1113517,
            1113516,
            1113513
          ],
          "CustomDeck": {
            "11135": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "080d4c",
              "Name": "Card",
              "Transform": {
                "posX": -1.00068021,
                "posY": 1.521913,
                "posZ": 26.0000076,
                "rotX": 0.010892313,
                "rotY": 179.998352,
                "rotZ": 180.004944,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Escrimeuse de la Sororité",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113515,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "521716",
              "Name": "Card",
              "Transform": {
                "posX": -4.94490957,
                "posY": 1.58205152,
                "posZ": 25.9988632,
                "rotX": 0.0112259174,
                "rotY": 179.993988,
                "rotZ": 180.0092,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Tireuse de la Sororité",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113513,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "03d685",
              "Name": "Card",
              "Transform": {
                "posX": -4.33195066,
                "posY": 1.54799926,
                "posZ": 25.9987278,
                "rotX": 0.0125307795,
                "rotY": 179.992172,
                "rotZ": 180.3777,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Sentinelle de la Sororité",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113517,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "7e4141",
              "Name": "Card",
              "Transform": {
                "posX": -7.38946724,
                "posY": 1.57209957,
                "posZ": 25.99984,
                "rotX": 0.010323979,
                "rotY": 180.001129,
                "rotZ": 180.098328,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Escrimeuse de la Sororité",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113515,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "348999",
              "Name": "Card",
              "Transform": {
                "posX": -5.549405,
                "posY": 1.52235425,
                "posZ": 25.9991055,
                "rotX": 0.0104752472,
                "rotY": 179.995056,
                "rotZ": 180.001816,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Assassin de la Sororité",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113514,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "df2adf",
              "Name": "Card",
              "Transform": {
                "posX": 1.49911022,
                "posY": 1.52169716,
                "posZ": 25.9999866,
                "rotX": 0.0108917961,
                "rotY": 179.995773,
                "rotZ": 180.004959,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Assassin de la Sororité",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113514,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "1dc2b3",
              "Name": "Card",
              "Transform": {
                "posX": -6.16136265,
                "posY": 1.6669271,
                "posZ": 25.99905,
                "rotX": 0.0104771089,
                "rotY": 179.998047,
                "rotZ": 180.12648,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Pisteuse de la Sororité",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113516,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a2235a",
              "Name": "Card",
              "Transform": {
                "posX": -24.99998,
                "posY": 1.9181962,
                "posZ": 10.5000706,
                "rotX": -0.000825362164,
                "rotY": 179.999817,
                "rotZ": 0.004314848,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Sentinelle de la Sororité",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113517,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "88273a",
              "Name": "Card",
              "Transform": {
                "posX": -6.77526236,
                "posY": 1.62147152,
                "posZ": 25.9995365,
                "rotX": 0.010326121,
                "rotY": 179.999023,
                "rotZ": 180.098328,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Pisteuse de la Sororité",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113516,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "fd11b2",
              "Name": "Card",
              "Transform": {
                "posX": -8.003305,
                "posY": 1.52261245,
                "posZ": 26.0000343,
                "rotX": 0.0100774905,
                "rotY": 180.000259,
                "rotZ": 179.998856,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Tireuse de la Sororité",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113513,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "99fb3c",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -24.4999,
            "posY": 1.7710011,
            "posZ": 12.9941,
            "rotX": -1.36087592E-05,
            "rotY": 0.0110955182,
            "rotZ": 0.000110265333,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Sororité Delta\"}",
          "XmlUI": ""
        },
        {
          "GUID": "9a5ecc",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": 5.500001,
            "posY": 1.50451529,
            "posZ": 9.0,
            "rotX": 0.004950794,
            "rotY": 90.0047455,
            "rotZ": 359.989136,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://i.imgur.com/vppt2my.png",
            "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "States": {
            "2": {
              "GUID": "4d3553",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.11995,
                "posY": 1.60650957,
                "posZ": 3.85999179,
                "rotX": 359.9831,
                "rotY": 359.984558,
                "rotZ": 359.920074,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.1199474,
                "posY": 1.60650969,
                "posZ": 3.85999274,
                "rotX": 359.983124,
                "rotY": 359.984467,
                "rotZ": 359.9201,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          }
        },
        {
          "GUID": "9cc3bc",
          "Name": "CardCustom",
          "Transform": {
            "posX": -24.9999981,
            "posY": 1.78360474,
            "posZ": 7.49999666,
            "rotX": -5.097567E-06,
            "rotY": 180.000015,
            "rotZ": 180.0,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Elizabeth Baxter",
          "Description": "",
          "GMNotes": "{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"healthPerInv\": \"true\",\n  \"id\": \"99999\",\n  \"traits\": \"Avatar. Sororite. Elite.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 1164900,
          "SidewaysCard": false,
          "CustomDeck": {
            "11649": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/9450058643502699861/371DEDAE79590FC5A3C8F352EFD3167291235C75/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/13277738114665983763/DC874CC7730BC2F4B0F3C4EECAFD6AD6155DC610/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "9d7725",
          "Name": "Card",
          "Transform": {
            "posX": 4.99920034,
            "posY": 1.573495,
            "posZ": 7.498501,
            "rotX": 2.09277749,
            "rotY": 179.993622,
            "rotZ": 0.004934714,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Mary Rowe ",
          "Description": "Matriarche",
          "GMNotes": "{\"id\":\"c8bd418a-0b1f-43fc-87f2-7aef12fe210a\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"c8bd418a-0b1f-43fc-87f2-7aef12fe210a\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Asset",
            "PlayerCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 1118400,
          "SidewaysCard": false,
          "CustomDeck": {
            "11184": {
              "FaceURL": "https://i.imgur.com/vf3PEhn.jpeg",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "a81991",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -25.9999981,
            "posY": 1.77099943,
            "posZ": 23.0000019,
            "rotX": 4.867212E-06,
            "rotY": 0.000545055664,
            "rotZ": -1.334065E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Si June vous fait confiance\"}",
          "XmlUI": ""
        },
        {
          "GUID": "a909b3",
          "Name": "Card",
          "Transform": {
            "posX": -33.9566727,
            "posY": 1.809712,
            "posZ": 2.5087328,
            "rotX": 359.9836,
            "rotY": 179.671127,
            "rotZ": 181.342422,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Zae'hielle",
          "Description": "",
          "GMNotes": "{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 8,\n  \"healthPerInv\": \"true\",\n  \"type\": \"Enemy\",\n  \"victory\": 0\n}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 1113535,
          "SidewaysCard": false,
          "CustomDeck": {
            "11135": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "b2f07e",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -31.5000038,
            "posY": 1.77100015,
            "posZ": 14.9999981,
            "rotX": 4.84307475E-06,
            "rotY": 0.000707542,
            "rotZ": 1.89955529E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Acte 3\"}",
          "XmlUI": ""
        },
        {
          "GUID": "c177e4",
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": -20.4999981,
            "posY": 1.84,
            "posZ": 16.5000019,
            "rotX": -4.983586E-06,
            "rotY": 179.999161,
            "rotZ": -9.823442E-08,
            "scaleX": 0.7,
            "scaleY": 0.7,
            "scaleZ": 0.7
          },
          "Nickname": "Chambres",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.614982545,
            "g": 0.0,
            "b": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
            "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089689365/F5B537745B3529B117E7190C40BDD224E443EED9/",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CustomShader": {
              "SpecularColor": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "SpecularIntensity": 0.0,
              "SpecularSharpness": 2.0,
              "FresnelStrength": 0.0
            },
            "CastShadows": true
          },
          "Bag": {
            "Order": 0
          },
          "LuaScript": "-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
          "LuaScriptState": "{\"ml\":{\"e00003\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.52,\"z\":20},\"rot\":{\"x\":0.0109,\"y\":179.9758,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00004\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.522,\"z\":25.5},\"rot\":{\"x\":0.0109,\"y\":179.9745,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00005\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.521,\"z\":25.5},\"rot\":{\"x\":0.0109,\"y\":179.9751,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00006\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.521,\"z\":20},\"rot\":{\"x\":0.0109,\"y\":179.9759,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "e00003",
              "Name": "Card",
              "Transform": {
                "posX": -3.500047,
                "posY": 1.52203393,
                "posZ": 25.500021,
                "rotX": 0.0108936746,
                "rotY": 179.9747,
                "rotZ": 180.004944,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Chambre de Linda",
              "Description": "",
              "GMNotes": "{\"id\":\"8b990471-6879-4e2a-8c8b-ae0a2fe18cf2\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe. Chambre.\",\"locationFront\":{\"icons\":\"Triangle\",\"connections\":\"Circle\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Triangle\",\"connections\":\"Circle\"},\"TtsZoopGuid\":\"8b990471-6879-4e2a-8c8b-ae0a2fe18cf2\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1114200,
              "SidewaysCard": false,
              "CustomDeck": {
                "11142": {
                  "FaceURL": "https://i.imgur.com/DQxjDtW.jpeg",
                  "BackURL": "https://i.imgur.com/3jqdDYC.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00004",
              "Name": "Card",
              "Transform": {
                "posX": -3.50000477,
                "posY": 1.52098835,
                "posZ": 20.00006,
                "rotX": 0.0108936271,
                "rotY": 179.975937,
                "rotZ": 180.004944,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Chambre de Carolyn",
              "Description": "",
              "GMNotes": "{\"id\":\"113bdd1c-b067-4d3d-b3f9-6b07394aacf3\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe. Chambre.\",\"locationFront\":{\"icons\":\"Triangle\",\"connections\":\"Circle\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Triangle\",\"connections\":\"Circle\"},\"TtsZoopGuid\":\"113bdd1c-b067-4d3d-b3f9-6b07394aacf3\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1114300,
              "SidewaysCard": false,
              "CustomDeck": {
                "11143": {
                  "FaceURL": "https://i.imgur.com/OkWP9yE.jpeg",
                  "BackURL": "https://i.imgur.com/Ys82xi3.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00005",
              "Name": "Card",
              "Transform": {
                "posX": 8.5,
                "posY": 1.519952,
                "posZ": 20.0000477,
                "rotX": 0.01089357,
                "rotY": 179.976669,
                "rotZ": 180.004944,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Chambre de Diane",
              "Description": "",
              "GMNotes": "{\"id\":\"829d0790-b049-40db-939a-f3901e3873c3\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe. Chambre.\",\"locationFront\":{\"icons\":\"Triangle\",\"connections\":\"Circle\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Triangle\",\"connections\":\"Circle\"},\"TtsZoopGuid\":\"829d0790-b049-40db-939a-f3901e3873c3\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1114400,
              "SidewaysCard": false,
              "CustomDeck": {
                "11144": {
                  "FaceURL": "https://i.imgur.com/k2TqXJD.jpeg",
                  "BackURL": "https://i.imgur.com/5I4Wucf.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00006",
              "Name": "Card",
              "Transform": {
                "posX": 8.5,
                "posY": 1.52099752,
                "posZ": 25.50003,
                "rotX": 0.0108935172,
                "rotY": 179.976532,
                "rotZ": 180.004944,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Chambre d'Eileen",
              "Description": "",
              "GMNotes": "{\"id\":\"649e6fdc-ad92-40f6-8668-ebc664b32eb6\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe. Chambre.\",\"locationFront\":{\"icons\":\"Triangle\",\"connections\":\"Circle\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Triangle\",\"connections\":\"Circle\"},\"TtsZoopGuid\":\"649e6fdc-ad92-40f6-8668-ebc664b32eb6\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1114500,
              "SidewaysCard": false,
              "CustomDeck": {
                "11145": {
                  "FaceURL": "https://i.imgur.com/3Dbt50L.jpeg",
                  "BackURL": "https://i.imgur.com/TsL8uNe.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "c4f005",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -34.4999046,
            "posY": 1.77100015,
            "posZ": 14.9999971,
            "rotX": 4.87688339E-06,
            "rotY": 0.000793669547,
            "rotZ": 1.0488251E-07,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Acte 4\"}",
          "XmlUI": ""
        },
        {
          "GUID": "c8c4b8",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": 8.5,
            "posY": 1.50492167,
            "posZ": 12.5,
            "rotX": 0.0108916787,
            "rotY": 179.999786,
            "rotZ": 0.004951666,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://i.imgur.com/vppt2my.png",
            "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "States": {
            "2": {
              "GUID": "4d3553",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.11995,
                "posY": 1.60650957,
                "posZ": 3.85999179,
                "rotX": 359.9831,
                "rotY": 359.984558,
                "rotZ": 359.920074,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.1199474,
                "posY": 1.60650969,
                "posZ": 3.85999274,
                "rotX": 359.983124,
                "rotY": 359.984467,
                "rotZ": 359.9201,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          }
        },
        {
          "GUID": "d7efd5",
          "Name": "Deck",
          "Transform": {
            "posX": -27.4789066,
            "posY": 1.94117141,
            "posZ": 11.0120945,
            "rotX": 0.03755629,
            "rotY": 179.992569,
            "rotZ": 179.999924,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Sororité Omega",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": false,
          "SidewaysCard": false,
          "DeckIDs": [
            1113531,
            1113532,
            1113522,
            1113521,
            1113527,
            1113524,
            1113528,
            1113519,
            1113526,
            1113519,
            1113523,
            1113532,
            1113525,
            1113520,
            1113522,
            1113530,
            1113528,
            1113523,
            1113527,
            1113529,
            1113524,
            1113532,
            1113529,
            1113520,
            1113532,
            1113521,
            1113530,
            1113525,
            1113526,
            1113530,
            1113531
          ],
          "CustomDeck": {
            "11135": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "256196",
              "Name": "Card",
              "Transform": {
                "posX": -59.5000076,
                "posY": 0.9936078,
                "posZ": -11.0000076,
                "rotX": -5.08564E-06,
                "rotY": 179.999969,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Championne de la Sororité",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113531,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "f6a528",
              "Name": "Card",
              "Transform": {
                "posX": -62.0000076,
                "posY": 0.9936069,
                "posZ": -0.5000039,
                "rotX": -4.9137484E-06,
                "rotY": 179.9999,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rejeton de Zae",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113532,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "12e080",
              "Name": "Card",
              "Transform": {
                "posX": -52.0,
                "posY": 0.993607461,
                "posZ": -7.49999952,
                "rotX": -4.9516475E-06,
                "rotY": 180.00029,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Accords Discordants",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113522,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3f8cc0",
              "Name": "Card",
              "Transform": {
                "posX": -59.5000038,
                "posY": 0.993606865,
                "posZ": -0.500006,
                "rotX": -4.98950658E-06,
                "rotY": 180.0,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Lune Sanglante",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113521,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "60a3a0",
              "Name": "Card",
              "Transform": {
                "posX": -59.5,
                "posY": 0.9936075,
                "posZ": -7.499999,
                "rotX": -5.001074E-06,
                "rotY": 180.00029,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Lypémanie",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113527,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "4f5d78",
              "Name": "Card",
              "Transform": {
                "posX": -47.0000076,
                "posY": 0.9936071,
                "posZ": -4.00000143,
                "rotX": -4.9715195E-06,
                "rotY": 180.00029,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Barrière de Roses",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113524,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3e8750",
              "Name": "Card",
              "Transform": {
                "posX": -64.50002,
                "posY": 0.9936069,
                "posZ": -0.5000063,
                "rotX": -4.681757E-06,
                "rotY": 180.00029,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Torpeur Écarlate",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113528,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "6ad069",
              "Name": "Card",
              "Transform": {
                "posX": -61.9824066,
                "posY": 0.9936072,
                "posZ": -3.98317719,
                "rotX": -5.09432857E-06,
                "rotY": 180.000092,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Le Sang Appelle le Sang",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113519,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "dce375",
              "Name": "Card",
              "Transform": {
                "posX": -64.49999,
                "posY": 0.9936075,
                "posZ": -7.49999857,
                "rotX": -5.25115547E-06,
                "rotY": 180.000336,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Désir Brûlant",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113526,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "7b6f9b",
              "Name": "Card",
              "Transform": {
                "posX": -52.0,
                "posY": 0.9936068,
                "posZ": -0.5000012,
                "rotX": -4.96192251E-06,
                "rotY": 180.000092,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Le Sang Appelle le Sang",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113519,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e969d2",
              "Name": "Card",
              "Transform": {
                "posX": -47.0,
                "posY": 0.9936074,
                "posZ": -7.500008,
                "rotX": -5.094686E-06,
                "rotY": 180.0001,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Pensées Impures",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113523,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "b5774b",
              "Name": "Card",
              "Transform": {
                "posX": -62.0000038,
                "posY": 0.9936078,
                "posZ": -10.9999981,
                "rotX": -4.995386E-06,
                "rotY": 180.000259,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rejeton de Zae",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113532,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "93ba78",
              "Name": "Card",
              "Transform": {
                "posX": -57.0,
                "posY": 0.993607163,
                "posZ": -4.00000048,
                "rotX": -5.083278E-06,
                "rotY": 180.00029,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Lueur Sororale",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113525,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "f44202",
              "Name": "Card",
              "Transform": {
                "posX": -49.5,
                "posY": 0.9936077,
                "posZ": -11.0000029,
                "rotX": -4.99430962E-06,
                "rotY": 180.000061,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Danse de la Reine Rouge",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113520,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "b23344",
              "Name": "Card",
              "Transform": {
                "posX": -47.0000038,
                "posY": 0.9936077,
                "posZ": -11.0000029,
                "rotX": -5.06005063E-06,
                "rotY": 180.000259,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Accords Discordants",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113522,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "2cdf27",
              "Name": "Card",
              "Transform": {
                "posX": -54.5,
                "posY": 0.993606865,
                "posZ": -0.500001,
                "rotX": -4.90569846E-06,
                "rotY": 180.000092,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Paladine Résolue",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113530,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "ae67ee",
              "Name": "Card",
              "Transform": {
                "posX": -52.0000153,
                "posY": 0.9936071,
                "posZ": -4.000009,
                "rotX": -5.05548633E-06,
                "rotY": 180.000687,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Torpeur Écarlate",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113528,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "301ff9",
              "Name": "Card",
              "Transform": {
                "posX": -57.0000153,
                "posY": 0.993607461,
                "posZ": -7.50001144,
                "rotX": -4.90586854E-06,
                "rotY": 180.0001,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Pensées Impures",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113523,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "b8f8c8",
              "Name": "Card",
              "Transform": {
                "posX": -54.50002,
                "posY": 0.993607461,
                "posZ": -7.500008,
                "rotX": -5.092552E-06,
                "rotY": 180.000519,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Lypémanie",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113527,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "b92569",
              "Name": "Card",
              "Transform": {
                "posX": -49.5000076,
                "posY": 0.9936074,
                "posZ": -7.5,
                "rotX": -5.07905861E-06,
                "rotY": 180.0007,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Émissaire",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113529,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "b1efb9",
              "Name": "Card",
              "Transform": {
                "posX": -49.5,
                "posY": 0.9936068,
                "posZ": -0.5000035,
                "rotX": -5.0194335E-06,
                "rotY": 180.0002,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Barrière de Roses",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113524,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "f53dca",
              "Name": "Card",
              "Transform": {
                "posX": -57.0,
                "posY": 0.9936078,
                "posZ": -10.9999943,
                "rotX": -5.00885653E-06,
                "rotY": 180.00029,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rejeton de Zae",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113532,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "986ec9",
              "Name": "Card",
              "Transform": {
                "posX": -54.5000038,
                "posY": 0.993607759,
                "posZ": -11.0000057,
                "rotX": -5.07216E-06,
                "rotY": 180.000137,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Émissaire",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113529,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "1c8750",
              "Name": "Card",
              "Transform": {
                "posX": -62.0,
                "posY": 0.9936075,
                "posZ": -7.499999,
                "rotX": -5.110051E-06,
                "rotY": 180.0003,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Danse de la Reine Rouge",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113520,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "91ada9",
              "Name": "Card",
              "Transform": {
                "posX": -54.5000076,
                "posY": 0.993607163,
                "posZ": -4.000003,
                "rotX": -4.942063E-06,
                "rotY": 180.000229,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Rejeton de Zae",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113532,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "6cbbdc",
              "Name": "Card",
              "Transform": {
                "posX": -59.5000153,
                "posY": 0.9936072,
                "posZ": -4.000014,
                "rotX": -4.9975547E-06,
                "rotY": 180.000381,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Lune Sanglante",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113521,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "551947",
              "Name": "Card",
              "Transform": {
                "posX": -64.5,
                "posY": 0.9936072,
                "posZ": -3.99999976,
                "rotX": -5.140649E-06,
                "rotY": 180.000046,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Paladine Résolue",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113530,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "50fc5d",
              "Name": "Card",
              "Transform": {
                "posX": -47.0000038,
                "posY": 0.9936068,
                "posZ": -0.5000058,
                "rotX": -4.896277E-06,
                "rotY": 179.9999,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Lueur Sororale",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113525,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a0ee49",
              "Name": "Card",
              "Transform": {
                "posX": -52.0,
                "posY": 0.993607759,
                "posZ": -11.0000019,
                "rotX": -5.03337333E-06,
                "rotY": 180.000351,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Désir Brûlant",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113526,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a14ea5",
              "Name": "Card",
              "Transform": {
                "posX": -49.5,
                "posY": 0.9936071,
                "posZ": -4.00000048,
                "rotX": -5.01998329E-06,
                "rotY": 180.0003,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Paladine Résolue",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113530,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "eaadfa",
              "Name": "Card",
              "Transform": {
                "posX": -57.0000076,
                "posY": 0.993606865,
                "posZ": -0.5000046,
                "rotX": -4.91180253E-06,
                "rotY": 179.9999,
                "rotZ": 180.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Championne de la Sororité",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113531,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "d81927",
          "Name": "CardCustom",
          "Transform": {
            "posX": 23.5012,
            "posY": 1.51380479,
            "posZ": -5.523002,
            "rotX": 0.0108912075,
            "rotY": 180.002747,
            "rotZ": 0.004948826,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Référence",
          "Description": "La Sororité des Secrets",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 1113600,
          "SidewaysCard": false,
          "CustomDeck": {
            "11136": {
              "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081311176/66972D39948CF966DC8358784E1F9158C0EF0752/",
              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081311270/4C1AF894CA8A5E75937117387D7C98BAB61D4AF4/",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": false,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e00009",
          "Name": "Card",
          "Transform": {
            "posX": 8.5,
            "posY": 1.51919162,
            "posZ": 15.999999,
            "rotX": 0.0108933309,
            "rotY": 179.979553,
            "rotZ": 180.004944,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Salle de Bain",
          "Description": "",
          "GMNotes": "{\"id\":\"e286c685-09c2-479a-9d6d-91a8847954b9\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Slash\",\"connections\":\"Square|Heart\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Slash\",\"connections\":\"Square|Heart\"},\"TtsZoopGuid\":\"e286c685-09c2-479a-9d6d-91a8847954b9\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 1113900,
          "SidewaysCard": false,
          "CustomDeck": {
            "11139": {
              "FaceURL": "https://i.imgur.com/9oydexq.jpeg",
              "BackURL": "https://i.imgur.com/yM9wxFB.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e0000a",
          "Name": "Card",
          "Transform": {
            "posX": 2.5,
            "posY": 1.51837921,
            "posZ": 9.0,
            "rotX": 0.0108914841,
            "rotY": 180.0,
            "rotZ": 180.004959,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Salon",
          "Description": "",
          "GMNotes": "{\"id\":\"25d7dfeb-0c44-4109-abc0-647d765e2125\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"DoubleSlash\",\"connections\":\"Clover|Square|Heart\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"DoubleSlash\",\"connections\":\"Clover|Square|Heart\"},\"TtsZoopGuid\":\"25d7dfeb-0c44-4109-abc0-647d765e2125\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 100900,
          "SidewaysCard": false,
          "CustomDeck": {
            "1009": {
              "FaceURL": "https://i.imgur.com/GvyXgwt.jpeg",
              "BackURL": "https://i.imgur.com/JK2KEYB.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e0000b",
          "Name": "Card",
          "Transform": {
            "posX": 14.5159006,
            "posY": 1.51733756,
            "posZ": 8.9797,
            "rotX": 0.0108935237,
            "rotY": 179.976135,
            "rotZ": 180.004944,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Cave",
          "Description": "",
          "GMNotes": "{\"id\":\"e2320dae-f246-4c7c-b044-a1f87d2ef31e\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Moon\",\"connections\":\"Heart\",\"uses\":[{\"countPerInvestigator\":3,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Moon\",\"connections\":\"Heart\"},\"TtsZoopGuid\":\"e2320dae-f246-4c7c-b044-a1f87d2ef31e\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 101000,
          "SidewaysCard": false,
          "CustomDeck": {
            "1010": {
              "FaceURL": "https://i.imgur.com/GrQIirN.jpeg",
              "BackURL": "https://i.imgur.com/Qs5BuI8.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e0000c",
          "Name": "Card",
          "Transform": {
            "posX": -3.5001018,
            "posY": 1.520228,
            "posZ": 16.0,
            "rotX": 0.0108937966,
            "rotY": 179.973,
            "rotZ": 180.004944,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Jardin Nord",
          "Description": "",
          "GMNotes": "{\"id\":\"8ab270e8-60a0-40f2-ac3d-95acddfd0152\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Diamond\",\"connections\":\"T|Square|Clover\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Diamond\",\"connections\":\"T|Square|Clover\"},\"TtsZoopGuid\":\"8ab270e8-60a0-40f2-ac3d-95acddfd0152\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 101100,
          "SidewaysCard": false,
          "CustomDeck": {
            "1011": {
              "FaceURL": "https://i.imgur.com/5SPKYHl.jpeg",
              "BackURL": "https://i.imgur.com/iFOZotX.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e0000d",
          "Name": "Card",
          "Transform": {
            "posX": -3.50000024,
            "posY": 1.51889741,
            "posZ": 9.0,
            "rotX": 0.010891716,
            "rotY": 179.9983,
            "rotZ": 180.004959,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Jardin Sud",
          "Description": "",
          "GMNotes": "{\"id\":\"887ee088-0bc4-4910-854e-6e236ea63e32\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Clover\",\"connections\":\"T|Diamond|DoubleSlash|Spade\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Clover\",\"connections\":\"T|Diamond|DoubleSlash|Spade\"},\"TtsZoopGuid\":\"887ee088-0bc4-4910-854e-6e236ea63e32\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 101200,
          "SidewaysCard": false,
          "CustomDeck": {
            "1012": {
              "FaceURL": "https://i.imgur.com/29VgnT3.jpeg",
              "BackURL": "https://i.imgur.com/EPUuuJp.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e0000e",
          "Name": "Card",
          "Transform": {
            "posX": -9.500001,
            "posY": 1.52008092,
            "posZ": 12.5,
            "rotX": 0.0108935814,
            "rotY": 179.9771,
            "rotZ": 180.004944,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Dépendance",
          "Description": "",
          "GMNotes": "{\"id\":\"76546ac8-34ab-4546-97fb-dd09cba7fe1b\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"T\",\"connections\":\"Diamond|Clover\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"T\",\"connections\":\"Diamond|Clover\"},\"TtsZoopGuid\":\"76546ac8-34ab-4546-97fb-dd09cba7fe1b\"}",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "Location",
            "ScenarioCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": true,
          "CardID": 101300,
          "SidewaysCard": false,
          "CustomDeck": {
            "1013": {
              "FaceURL": "https://i.imgur.com/NvU7Wce.jpeg",
              "BackURL": "https://i.imgur.com/87PFtIJ.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e41dcd",
          "Name": "Deck",
          "Transform": {
            "posX": 12.5010033,
            "posY": 1.54124284,
            "posZ": -6.01679945,
            "rotX": 0.0108917244,
            "rotY": 180.000229,
            "rotZ": 0.004948237,
            "scaleX": 0.714285731,
            "scaleY": 1.0,
            "scaleZ": 0.714285731
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Tags": [
            "ScenarioCard"
          ],
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": true,
          "Hands": false,
          "SidewaysCard": false,
          "DeckIDs": [
            1124100,
            1124400,
            1124200,
            1125100
          ],
          "CustomDeck": {
            "11241": {
              "FaceURL": "https://i.imgur.com/0NhQlni.jpeg",
              "BackURL": "https://i.imgur.com/3Bi2ZnR.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            },
            "11244": {
              "FaceURL": "https://i.imgur.com/ThNUBcM.jpeg",
              "BackURL": "https://i.imgur.com/af3EkFN.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            },
            "11242": {
              "FaceURL": "https://i.imgur.com/gWOpuKT.jpeg",
              "BackURL": "https://i.imgur.com/ErNGdZY.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            },
            "11251": {
              "FaceURL": "https://i.imgur.com/Zo1IC8h.jpeg",
              "BackURL": "https://i.imgur.com/CnWGB6t.jpeg",
              "NumWidth": 1,
              "NumHeight": 1,
              "BackIsHidden": true,
              "UniqueBack": true,
              "Type": 0
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "e00005",
              "Name": "Card",
              "Transform": {
                "posX": 31.0000076,
                "posY": 1.49346447,
                "posZ": 13.0000372,
                "rotX": -2.95377532E-07,
                "rotY": 180.0002,
                "rotZ": 9.922385E-07,
                "scaleX": 0.714285731,
                "scaleY": 1.0,
                "scaleZ": 0.714285731
              },
              "Nickname": "Heure Fatidique",
              "Description": "",
              "GMNotes": "{\"id\":\"3b03fc8b-a3df-4859-b8d8-82961e524a03\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":6,\"TtsZoopGuid\":\"3b03fc8b-a3df-4859-b8d8-82961e524a03\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1124100,
              "SidewaysCard": false,
              "CustomDeck": {
                "11241": {
                  "FaceURL": "https://i.imgur.com/0NhQlni.jpeg",
                  "BackURL": "https://i.imgur.com/3Bi2ZnR.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00004",
              "Name": "Card",
              "Transform": {
                "posX": 31.0,
                "posY": 1.5562135,
                "posZ": 13.0,
                "rotX": 0.006924083,
                "rotY": 180.001434,
                "rotZ": 0.8356511,
                "scaleX": 0.714285731,
                "scaleY": 1.0,
                "scaleZ": 0.714285731
              },
              "Nickname": "Lune Écarlate",
              "Description": "",
              "GMNotes": "{\"id\":\"2982e60a-afc1-48c6-96bd-3e1483098241\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":7,\"TtsZoopGuid\":\"2982e60a-afc1-48c6-96bd-3e1483098241\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1124400,
              "SidewaysCard": false,
              "CustomDeck": {
                "11244": {
                  "FaceURL": "https://i.imgur.com/ThNUBcM.jpeg",
                  "BackURL": "https://i.imgur.com/af3EkFN.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00003",
              "Name": "Card",
              "Transform": {
                "posX": 31.0,
                "posY": 1.56765342,
                "posZ": 13.0,
                "rotX": -0.000225508862,
                "rotY": 180.000061,
                "rotZ": -7.81074E-05,
                "scaleX": 0.714285731,
                "scaleY": 1.0,
                "scaleZ": 0.714285731
              },
              "Nickname": "Les Soupçons de Baxter",
              "Description": "",
              "GMNotes": "{\"id\":\"b77cf7f3-42e7-40b9-8b80-6cfd2dd2acbb\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":12,\"TtsZoopGuid\":\"b77cf7f3-42e7-40b9-8b80-6cfd2dd2acbb\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1124200,
              "SidewaysCard": false,
              "CustomDeck": {
                "11242": {
                  "FaceURL": "https://i.imgur.com/gWOpuKT.jpeg",
                  "BackURL": "https://i.imgur.com/ErNGdZY.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00002",
              "Name": "Card",
              "Transform": {
                "posX": 31.0,
                "posY": 1.5772754,
                "posZ": 13.0,
                "rotX": -8.92444441E-05,
                "rotY": 180.001175,
                "rotZ": 0.000128415137,
                "scaleX": 0.714285731,
                "scaleY": 1.0,
                "scaleZ": 0.714285731
              },
              "Nickname": "Une Fête Mystérieuse",
              "Description": "",
              "GMNotes": "{\"id\":\"a11eb23d-a3fc-4d7c-863c-e382748b352a\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":6,\"TtsZoopGuid\":\"a11eb23d-a3fc-4d7c-863c-e382748b352a\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1125100,
              "SidewaysCard": false,
              "CustomDeck": {
                "11251": {
                  "FaceURL": "https://i.imgur.com/Zo1IC8h.jpeg",
                  "BackURL": "https://i.imgur.com/CnWGB6t.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "ebba44",
          "Name": "Custom_Tile",
          "Transform": {
            "posX": 11.5001,
            "posY": 1.50399709,
            "posZ": 9.0,
            "rotX": 0.0049506533,
            "rotY": 90.0060654,
            "rotZ": 359.989136,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.6045295,
            "g": 0.6045295,
            "b": 0.6045295
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomImage": {
            "ImageURL": "https://i.imgur.com/vppt2my.png",
            "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
            "ImageScalar": 1.0,
            "WidthScale": 0.0,
            "CustomTile": {
              "Type": 3,
              "Thickness": 0.1,
              "Stackable": false,
              "Stretch": true
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "States": {
            "2": {
              "GUID": "4d3553",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.11995,
                "posY": 1.60650957,
                "posZ": 3.85999179,
                "rotX": 359.9831,
                "rotY": 359.984558,
                "rotZ": 359.920074,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            "3": {
              "GUID": "5b38c6",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -17.1199474,
                "posY": 1.60650969,
                "posZ": 3.85999274,
                "rotX": 359.983124,
                "rotY": 359.984467,
                "rotZ": 359.9201,
                "scaleX": 0.8,
                "scaleY": 1.0,
                "scaleZ": 0.8
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          }
        },
        {
          "GUID": "f00a53",
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": -34.5000038,
            "posY": 1.84000027,
            "posZ": 13.4999971,
            "rotX": -3.93382152E-06,
            "rotY": 180.003372,
            "rotZ": 5.248519E-07,
            "scaleX": 0.7,
            "scaleY": 0.7,
            "scaleZ": 0.7
          },
          "Nickname": "Chemin Écarlate",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
            "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089690860/3BD852E6582370EFBCC59EA31C032920713A5C33/",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CustomShader": {
              "SpecularColor": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "SpecularIntensity": 0.0,
              "SpecularSharpness": 2.0,
              "FresnelStrength": 0.0
            },
            "CastShadows": true
          },
          "Bag": {
            "Order": 0
          },
          "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
          "LuaScriptState": "{\"ml\":{\"1d2ed2\":{\"lock\":false,\"pos\":{\"x\":3.5,\"y\":1.5034,\"z\":2},\"rot\":{\"x\":0.005,\"y\":90.027,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"2841af\":{\"lock\":false,\"pos\":{\"x\":-0.0006,\"y\":1.5037,\"z\":2},\"rot\":{\"x\":0.005,\"y\":90.0336,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d549b8\":{\"lock\":false,\"pos\":{\"x\":7.5,\"y\":1.5166,\"z\":2},\"rot\":{\"x\":0.0109,\"y\":180.0003,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "2841af",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": -0.000600039435,
                "posY": 1.50365984,
                "posZ": 1.9999994,
                "rotX": 0.00495410524,
                "rotY": 90.03363,
                "rotZ": 359.9891,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/vppt2my.png",
                "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "States": {
                "2": {
                  "GUID": "4d3553",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.11995,
                    "posY": 1.60650957,
                    "posZ": 3.85999179,
                    "rotX": 359.9831,
                    "rotY": 359.984558,
                    "rotZ": 359.920074,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                "3": {
                  "GUID": "5b38c6",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.1199474,
                    "posY": 1.60650969,
                    "posZ": 3.85999274,
                    "rotX": 359.983124,
                    "rotY": 359.984467,
                    "rotZ": 359.9201,
                    "scaleX": 0.8,
                    "scaleY": 1.0,
                    "scaleZ": 0.8
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              }
            },
            {
              "GUID": "1d2ed2",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": 3.5,
                "posY": 1.50335753,
                "posZ": 1.99999952,
                "rotX": 0.004952804,
                "rotY": 90.02704,
                "rotZ": 359.9891,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.6045295,
                "g": 0.6045295,
                "b": 0.6045295
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://i.imgur.com/vppt2my.png",
                "ImageSecondaryURL": "https://i.imgur.com/vppt2my.png",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "States": {
                "2": {
                  "GUID": "4d3553",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.11995,
                    "posY": 1.60650957,
                    "posZ": 3.85999179,
                    "rotX": 359.9831,
                    "rotY": 359.984558,
                    "rotZ": 359.920074,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                "3": {
                  "GUID": "5b38c6",
                  "Name": "Custom_Tile",
                  "Transform": {
                    "posX": -17.1199474,
                    "posY": 1.60650969,
                    "posZ": 3.85999274,
                    "rotX": 359.983124,
                    "rotY": 359.984467,
                    "rotZ": 359.9201,
                    "scaleX": 0.8,
                    "scaleY": 1.0,
                    "scaleZ": 0.8
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.6045295,
                    "g": 0.6045295,
                    "b": 0.6045295
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "CustomImage": {
                    "ImageURL": "https://i.imgur.com/dHKBLoD.png",
                    "ImageSecondaryURL": "https://i.imgur.com/HyfE8m8.png",
                    "ImageScalar": 1.0,
                    "WidthScale": 0.0,
                    "CustomTile": {
                      "Type": 3,
                      "Thickness": 0.1,
                      "Stackable": false,
                      "Stretch": true
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              }
            },
            {
              "GUID": "d549b8",
              "Name": "Card",
              "Transform": {
                "posX": 7.50000238,
                "posY": 1.51660931,
                "posZ": 1.99999452,
                "rotX": 0.0109829428,
                "rotY": 180.0,
                "rotZ": 180.005478,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Chemin Écarlate",
              "Description": "",
              "GMNotes": "{\"id\":\"e9d6aec3-3c03-440b-8777-9472af9a33ae\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Chemin.\",\"locationFront\":{\"icons\":\"TriangleAlt\",\"connections\":\"Spade\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"TriangleAlt\",\"connections\":\"Spade\"},\"TtsZoopGuid\":\"e9d6aec3-3c03-440b-8777-9472af9a33ae\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1122500,
              "SidewaysCard": false,
              "CustomDeck": {
                "11225": {
                  "FaceURL": "https://i.imgur.com/vYsI8eX.jpeg",
                  "BackURL": "https://i.imgur.com/zYUJhnT.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ]
        },
        {
          "GUID": "fa7d89",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -22.9999962,
            "posY": 1.77099943,
            "posZ": 24.0000038,
            "rotX": 4.89856257E-06,
            "rotY": 0.000589675561,
            "rotZ": -4.81602633E-08,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":300,\"text\":\"Mise en place\"}",
          "XmlUI": ""
        },
        {
          "GUID": "fd4dd3",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -27.4997063,
            "posY": 1.77100265,
            "posZ": 12.9592953,
            "rotX": -5.35207255E-05,
            "rotY": 359.967651,
            "rotZ": 0.000325243,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Text Tool",
          "Description": "",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 0.0,
            "g": 0.0,
            "b": 0.0,
            "a": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": false,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
          "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Sororité Omega\"}",
          "XmlUI": ""
        }
      ],
      "AttachedDecals": [
        {
          "Transform": {
            "posX": -0.0021877822,
            "posY": -0.08963572,
            "posZ": -0.00288731651,
            "rotX": 270.0,
            "rotY": 359.869568,
            "rotZ": 0.0,
            "scaleX": 2.00000215,
            "scaleY": 2.00000238,
            "scaleZ": 2.00000262
          },
          "CustomDecal": {
            "Name": "dunwich_back",
            "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
            "Size": 7.4
          }
        }
      ]
    }
  ]
}