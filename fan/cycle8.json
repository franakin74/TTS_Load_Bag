{
  "SaveName": "",
  "Date": "",
  "VersionNumber": "",
  "GameMode": "",
  "GameType": "",
  "GameComplexity": "",
  "Tags": [],
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Table": "",
  "Sky": "",
  "Note": "",
  "TabStates": {},
  "LuaScript": "",
  "LuaScriptState": "",
  "XmlUI": "",
  "ObjectStates": [
    {
      "GUID": "6d65fd",
      "Name": "Custom_Model_Bag",
      "Transform": {
        "posX": -71.0000153,
        "posY": 0.97999835,
        "posZ": 41.0000076,
        "rotX": -4.055034E-06,
        "rotY": 180.001709,
        "rotZ": 9.855555E-07,
        "scaleX": 0.6144237,
        "scaleY": 0.08580595,
        "scaleZ": 0.6144237
      },
      "Nickname": "Cycle 8",
      "Description": "Compliation",
      "GMNotes": "fan/cycle8.json",
      "AltLookAngle": {
        "x": 0.0,
        "y": 0.0,
        "z": 0.0
      },
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "CustomMesh": {
        "MeshURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/core_h_MSH.obj",
        "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/17831894696948569013/8333CE66BA277565C91CAF4917A658C9114392B6/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 6,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "Bag": {
        "Order": 0
      },
      "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,5}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 4\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-1.25,0.1,6}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.25,0.3,7}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.25,0.3,6}, rotation={0,0,0}, height=500, width=1200,\r\n          font_size=300, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.25,0.3,8}, rotation={0,0,0}, height=500, width=1200,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n          if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={1.25,0.3,8}, rotation={0,0,0}, height=500, width=1200,\r\n                    font_size=230, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={1.25,0.3,7}, rotation={0,0,0}, height=500, width=1200,\r\n                    font_size=300, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-6}, rotation={0,0,0}, height=500, width=1200,\r\n            font_size=300, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={1.4,1,5.85}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-1.4,1,5.85}, rotation={0,0,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={5.85,0.1,0}, rotation={0,270,0}, height=500, width=1200,\r\n        font_size=300, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
      "LuaScriptState": "{\"ml\":{\"01469d\":{\"lock\":true,\"pos\":{\"x\":15,\"y\":1.51989996433258,\"z\":22.5},\"rot\":{\"x\":0.0109000001102686,\"y\":179.997894287109,\"z\":0.00490000005811453},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"03e3f8\":{\"lock\":false,\"pos\":{\"x\":-25.5,\"y\":1.49140667915344,\"z\":-5.00000047683716},\"rot\":{\"x\":0.176100328564644,\"y\":180.02848815918,\"z\":1.94640542758862E-05},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"05d692\":{\"lock\":false,\"pos\":{\"x\":-21.9403991699219,\"y\":1.49346446990967,\"z\":-11.9173002243042},\"rot\":{\"x\":7.95888226434727E-08,\"y\":179.999404907227,\"z\":6.77363090062499E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"061b0f\":{\"lock\":true,\"pos\":{\"x\":-31.5020999908447,\"y\":1.83529996871948,\"z\":13.5051002502441},\"rot\":{\"x\":0,\"y\":180.002700805664,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"08a5a0\":{\"lock\":false,\"pos\":{\"x\":25,\"y\":1.5137,\"z\":-5.5013},\"rot\":{\"x\":0.0109,\"y\":179.9998,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"098203\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.5419,\"z\":-5.9999},\"rot\":{\"x\":-0.0001,\"y\":90.0013,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"0ae88f\":{\"lock\":true,\"pos\":{\"x\":6,\"y\":1.51610004901886,\"z\":-1.5},\"rot\":{\"x\":0.0109000001102686,\"y\":179.997894287109,\"z\":0.00490000005811453},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"12037e\":{\"lock\":false,\"pos\":{\"x\":-19,\"y\":1.4799,\"z\":-5},\"rot\":{\"x\":0,\"y\":180,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"192e57\":{\"lock\":false,\"pos\":{\"x\":33.5,\"y\":1.5799,\"z\":12.5},\"rot\":{\"x\":0,\"y\":179.9818,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"216e39\":{\"lock\":false,\"pos\":{\"x\":-19,\"y\":1.4799,\"z\":-5},\"rot\":{\"x\":0,\"y\":180,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2b4096\":{\"lock\":false,\"pos\":{\"x\":-32,\"y\":1.7836,\"z\":27.5},\"rot\":{\"x\":0,\"y\":180.0336,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2b78cf\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.50314152240753,\"z\":1.99999856948853},\"rot\":{\"x\":0.010892340913415,\"y\":179.99153137207,\"z\":0.00495003536343575},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"2c8d02\":{\"lock\":false,\"pos\":{\"x\":-26.4365062713623,\"y\":1.83360481262207,\"z\":2.97429275512695},\"rot\":{\"x\":7.96769381850027E-06,\"y\":180.417251586914,\"z\":-1.20574859465705E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"2cf647\":{\"lock\":true,\"pos\":{\"x\":-21,\"y\":1.83529996871948,\"z\":13.5},\"rot\":{\"x\":0,\"y\":179.996597290039,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"2ede05\":{\"lock\":false,\"pos\":{\"x\":5,\"y\":3.9999,\"z\":53.8929},\"rot\":{\"x\":0,\"y\":179.9776,\"z\":0.0011},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"2eee61\":{\"lock\":true,\"pos\":{\"x\":6,\"y\":1.52219998836517,\"z\":30.5},\"rot\":{\"x\":0.0109000001102686,\"y\":179.997604370117,\"z\":0.00489999912679195},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"30c19e\":{\"lock\":false,\"pos\":{\"x\":-4,\"y\":1.4935,\"z\":-12},\"rot\":{\"x\":0,\"y\":180.0217,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"32a399\":{\"lock\":false,\"pos\":{\"x\":17.5,\"y\":1.5419,\"z\":-5.9999},\"rot\":{\"x\":-0.0001,\"y\":89.9997,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"32c650\":{\"lock\":true,\"pos\":{\"x\":-3,\"y\":1.521399974823,\"z\":22.5},\"rot\":{\"x\":0.0109000001102686,\"y\":179.997894287109,\"z\":0.00490000005811453},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"35e0d5\":{\"lock\":false,\"pos\":{\"x\":-26,\"y\":1.49346446990967,\"z\":-12},\"rot\":{\"x\":2.37014301518457E-08,\"y\":179.999496459961,\"z\":-1.81572037405431E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"37eed5\":{\"lock\":false,\"pos\":{\"x\":3,\"y\":1.502,\"z\":-5.5},\"rot\":{\"x\":0.0109,\"y\":180.0129,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.701960802078247,\"g\":0.800000011920929,\"r\":0.874509811401367}},\"3989a8\":{\"lock\":true,\"pos\":{\"x\":-20.5,\"y\":1.76629996299744,\"z\":17},\"rot\":{\"x\":0,\"y\":-0.000300000014249235,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"3a0ea3\":{\"lock\":false,\"pos\":{\"x\":-1.5007,\"y\":1.4935,\"z\":-12},\"rot\":{\"x\":0,\"y\":90.0038,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3a6bb8\":{\"lock\":false,\"pos\":{\"x\":10.5,\"y\":1.50664985179901,\"z\":22.5},\"rot\":{\"x\":0.00494618667289615,\"y\":89.9915542602539,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"3b768d\":{\"lock\":false,\"pos\":{\"x\":0,\"y\":4,\"z\":54},\"rot\":{\"x\":0,\"y\":179.9741,\"z\":0.0011},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"413ac2\":{\"lock\":false,\"pos\":{\"x\":-19,\"y\":1.49346446990967,\"z\":-11.9998998641968},\"rot\":{\"x\":5.71330218690491E-08,\"y\":179.999496459961,\"z\":9.00908236900477E-10},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"43b75f\":{\"lock\":false,\"pos\":{\"x\":-26.4913,\"y\":1.8336,\"z\":19.4804},\"rot\":{\"x\":0.0121,\"y\":180.0303,\"z\":2.0998},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"46f500\":{\"lock\":false,\"pos\":{\"x\":10.4999990463257,\"y\":1.5036084651947,\"z\":6.49999904632568},\"rot\":{\"x\":0.00494609167799354,\"y\":89.9917144775391,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"480756\":{\"lock\":false,\"pos\":{\"x\":-20,\"y\":1.4799,\"z\":-5},\"rot\":{\"x\":0,\"y\":180.0004,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"483110\":{\"lock\":false,\"pos\":{\"x\":-27.0741100311279,\"y\":1.78360557556152,\"z\":2.97148847579956},\"rot\":{\"x\":-1.53615701492527E-07,\"y\":180.41731262207,\"z\":-3.36466073349584E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"49ac45\":{\"lock\":false,\"pos\":{\"x\":-32.3928,\"y\":1.8433,\"z\":19.4844},\"rot\":{\"x\":0.026,\"y\":180.0147,\"z\":2.8163},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4a63ca\":{\"lock\":true,\"pos\":{\"x\":-20,\"y\":1.85780000686646,\"z\":7},\"rot\":{\"x\":0,\"y\":180.001098632813,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"4e84af\":{\"lock\":false,\"pos\":{\"x\":-2.49999690055847,\"y\":0.979997277259827,\"z\":47.0000038146973},\"rot\":{\"x\":-4.69595534013934E-06,\"y\":179.997573852539,\"z\":1.20938500458578E-06},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"4ff304\":{\"lock\":false,\"pos\":{\"x\":1.49999916553497,\"y\":1.50590634346008,\"z\":14.5},\"rot\":{\"x\":0.00494631053879857,\"y\":89.9914703369141,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"5239e6\":{\"lock\":false,\"pos\":{\"x\":-20.6066,\"y\":1.855,\"z\":19.4908},\"rot\":{\"x\":0.0139,\"y\":181.1025,\"z\":0.1112},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5359e8\":{\"lock\":true,\"pos\":{\"x\":6,\"y\":1.52059996128082,\"z\":22.5},\"rot\":{\"x\":0.0109000001102686,\"y\":179.997695922852,\"z\":0.00490000005811453},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"538522\":{\"lock\":true,\"pos\":{\"x\":-3,\"y\":1.51839995384216,\"z\":6.5},\"rot\":{\"x\":0.0109000001102686,\"y\":179.997497558594,\"z\":0.00490000005811453},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"53f345\":{\"lock\":true,\"pos\":{\"x\":-27.3011,\"y\":1.77,\"z\":25.4104},\"rot\":{\"x\":90,\"y\":0,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"548427\":{\"lock\":false,\"pos\":{\"x\":-32.9897003173828,\"y\":1.83360362052917,\"z\":19.4868011474609},\"rot\":{\"x\":5.88901639275718E-06,\"y\":180.159927368164,\"z\":-1.31482383949333E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"5c58c3\":{\"lock\":false,\"pos\":{\"x\":13.0000009536743,\"y\":0.979997277259827,\"z\":47.0000038146973},\"rot\":{\"x\":-5.28993632542552E-06,\"y\":179.972549438477,\"z\":-1.79718391279948E-08},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"5d8be3\":{\"lock\":false,\"pos\":{\"x\":1.50000023841858,\"y\":1.50742721557617,\"z\":22.5},\"rot\":{\"x\":0.00494563858956099,\"y\":89.9916076660156,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"61ae50\":{\"lock\":true,\"pos\":{\"x\":15,\"y\":1.51830005645752,\"z\":14.5},\"rot\":{\"x\":0.0109000001102686,\"y\":179.997695922852,\"z\":0.00490000005811453},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"61e0b2\":{\"lock\":false,\"pos\":{\"x\":-26.5,\"y\":1.8343,\"z\":7},\"rot\":{\"x\":0,\"y\":180.0291,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"62ced0\":{\"lock\":true,\"pos\":{\"x\":-28.0023994445801,\"y\":1.83529996871948,\"z\":13.503999710083},\"rot\":{\"x\":0,\"y\":180.002502441406,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"6345b1\":{\"lock\":false,\"pos\":{\"x\":5.99999856948853,\"y\":1.50627815723419,\"z\":18.5000038146973},\"rot\":{\"x\":0.0108932685106993,\"y\":179.980361938477,\"z\":0.00494896015152335},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"6572d8\":{\"lock\":false,\"pos\":{\"x\":-19.7366,\"y\":1.891,\"z\":19.4904},\"rot\":{\"x\":0.0732,\"y\":180.044,\"z\":3.3462},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"682bb0\":{\"lock\":false,\"pos\":{\"x\":-5,\"y\":4.0001,\"z\":53.8819},\"rot\":{\"x\":0,\"y\":180,\"z\":0.0011},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"6978c3\":{\"lock\":false,\"pos\":{\"x\":-23.0000038146973,\"y\":1.80537354946136,\"z\":6.9999942779541},\"rot\":{\"x\":-5.05912476000958E-06,\"y\":180.00114440918,\"z\":2.06654626744296E-09},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"69fd89\":{\"lock\":false,\"pos\":{\"x\":15,\"y\":1.50550079345703,\"z\":18.5},\"rot\":{\"x\":0.0108923772349954,\"y\":179.991577148438,\"z\":0.00495042698457837},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"6fffbd\":{\"lock\":true,\"pos\":{\"x\":-24.5,\"y\":1.76629996299744,\"z\":12.5},\"rot\":{\"x\":0,\"y\":-9.99999974737875E-05,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"700c1f\":{\"lock\":true,\"pos\":{\"x\":-3,\"y\":1.51989996433258,\"z\":14.5},\"rot\":{\"x\":0.0109000019729137,\"y\":180.015701293945,\"z\":0.00500000081956387},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"703535\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.51912248134613,\"z\":14.5},\"rot\":{\"x\":0.0108888959512115,\"y\":180.029754638672,\"z\":0.00495394878089428},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"71210c\":{\"lock\":false,\"pos\":{\"x\":19.5000019073486,\"y\":1.50435185432434,\"z\":14.5},\"rot\":{\"x\":0.00494633335620165,\"y\":89.9917907714844,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.50475740432739,\"z\":10.5},\"rot\":{\"x\":0.0108927441760898,\"y\":179.985794067383,\"z\":0.00494948867708445},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"764377\":{\"lock\":false,\"pos\":{\"x\":-18.7202,\"y\":1.8468,\"z\":19.4776},\"rot\":{\"x\":0.0561,\"y\":180.084,\"z\":3.3528},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"77e1a7\":{\"lock\":false,\"pos\":{\"x\":2.99999976158142,\"y\":1.5019748210907,\"z\":-5.49999952316284},\"rot\":{\"x\":0.0108909122645855,\"y\":180.006500244141,\"z\":0.00494967820122838},\"tint\":{\"a\":1,\"b\":0.701960802078247,\"g\":0.800000011920929,\"r\":0.874509811401367}},\"7e350d\":{\"lock\":false,\"pos\":{\"x\":17.5039,\"y\":1.536,\"z\":-6.0055},\"rot\":{\"x\":0.0049,\"y\":89.9244,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7e3931\":{\"lock\":false,\"pos\":{\"x\":-25.4859,\"y\":1.8241,\"z\":19.4448},\"rot\":{\"x\":-0.0013,\"y\":180.2373,\"z\":2.2036},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"81cac9\":{\"lock\":true,\"pos\":{\"x\":15,\"y\":1.51670002937317,\"z\":6},\"rot\":{\"x\":0.0109000001102686,\"y\":180.010604858398,\"z\":0.00499999988824129},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"8431e1\":{\"lock\":true,\"pos\":{\"x\":24,\"y\":1.51760005950928,\"z\":14.5},\"rot\":{\"x\":0.0109000001102686,\"y\":179.997299194336,\"z\":0.00490000005811453},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"88e8cf\":{\"lock\":false,\"pos\":{\"x\":-3,\"y\":1.50705540180206,\"z\":18.5},\"rot\":{\"x\":0.0108919385820627,\"y\":179.99560546875,\"z\":0.00495108356699348},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"89ac42\":{\"lock\":true,\"pos\":{\"x\":-32.5,\"y\":1.76629996299744,\"z\":17},\"rot\":{\"x\":0,\"y\":0.000500000023748726,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"8ca380\":{\"lock\":false,\"pos\":{\"x\":-25,\"y\":1.7836,\"z\":3},\"rot\":{\"x\":0,\"y\":180.0098,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"8fefa0\":{\"lock\":true,\"pos\":{\"x\":-0.2504,\"y\":4,\"z\":58.4},\"rot\":{\"x\":90,\"y\":0,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"92575b\":{\"lock\":false,\"pos\":{\"x\":35,\"y\":1.558,\"z\":1.5},\"rot\":{\"x\":0.0011,\"y\":90.0005,\"z\":0.0006},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"997e6e\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.53643202781677,\"z\":-6.00000286102295},\"rot\":{\"x\":0.00494891172274947,\"y\":90.0044555664063,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9a7f5b\":{\"lock\":false,\"pos\":{\"x\":-21.9999,\"y\":1.7836,\"z\":3},\"rot\":{\"x\":0,\"y\":180.0116,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9ab76d\":{\"lock\":false,\"pos\":{\"x\":-33.5800018310547,\"y\":1.78360426425934,\"z\":19.4883995056152},\"rot\":{\"x\":-1.1329574363117E-06,\"y\":180.160202026367,\"z\":-2.76017999567557E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9cae28\":{\"lock\":false,\"pos\":{\"x\":22.3267402648926,\"y\":1.51391160488129,\"z\":-5.49481821060181},\"rot\":{\"x\":0.0108895227313042,\"y\":180.023315429688,\"z\":0.00495283445343375},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9d2e11\":{\"lock\":true,\"pos\":{\"x\":-28.0004005432129,\"y\":1.76629996299744,\"z\":11.0193996429443},\"rot\":{\"x\":0,\"y\":-0.00039999998989515,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"a1af1f\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.50779891014099,\"z\":26.5},\"rot\":{\"x\":0.0108923148363829,\"y\":179.991470336914,\"z\":0.0049505908973515},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"a72fdf\":{\"lock\":false,\"pos\":{\"x\":5,\"y\":1.5297,\"z\":-12},\"rot\":{\"x\":0,\"y\":179.9999,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a762fe\":{\"lock\":false,\"pos\":{\"x\":-21.5004,\"y\":1.7834,\"z\":19.5003},\"rot\":{\"x\":0.0024,\"y\":180.0226,\"z\":359.9872},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a7fb18\":{\"lock\":false,\"pos\":{\"x\":-24.4953,\"y\":1.8704,\"z\":19.4993},\"rot\":{\"x\":0.0002,\"y\":180.5032,\"z\":2.1984},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b76184\":{\"lock\":false,\"pos\":{\"x\":-3,\"y\":1.50553464889526,\"z\":10.5},\"rot\":{\"x\":0.0108927804976702,\"y\":179.986282348633,\"z\":0.00495040277019143},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"bcee25\":{\"lock\":true,\"pos\":{\"x\":-21,\"y\":1.76629996299744,\"z\":11},\"rot\":{\"x\":0,\"y\":0.000699999975040555,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"bd9417\":{\"lock\":true,\"pos\":{\"x\":0,\"y\":4,\"z\":54.5},\"rot\":{\"x\":0,\"y\":179.9735,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.345806419849396,\"g\":0.246825397014618,\"r\":0.817645847797394}},\"c05dd6\":{\"lock\":false,\"pos\":{\"x\":30.4999008178711,\"y\":1.66542017459869,\"z\":-3},\"rot\":{\"x\":-0.000591265270486474,\"y\":179.999893188477,\"z\":180.001068115234},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c13319\":{\"lock\":true,\"pos\":{\"x\":-12,\"y\":1.52069997787476,\"z\":14.5},\"rot\":{\"x\":0.0109000001102686,\"y\":179.997695922852,\"z\":0.00490000005811453},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c1334a\":{\"lock\":false,\"pos\":{\"x\":-23.0001029968262,\"y\":1.8005598783493,\"z\":2.99989604949951},\"rot\":{\"x\":-5.12777660333086E-06,\"y\":180.00456237793,\"z\":1.4125554059774E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c38458\":{\"lock\":false,\"pos\":{\"x\":8.00000095367432,\"y\":0.979997396469116,\"z\":47},\"rot\":{\"x\":-4.79412392451195E-06,\"y\":179.997055053711,\"z\":5.54098740224163E-08},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"c425b7\":{\"lock\":false,\"pos\":{\"x\":10.4999990463257,\"y\":1.50512909889221,\"z\":14.5},\"rot\":{\"x\":0.00494623929262161,\"y\":89.9916000366211,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"c76ae2\":{\"lock\":false,\"pos\":{\"x\":-26.9098968505859,\"y\":1.78360462188721,\"z\":19.4997024536133},\"rot\":{\"x\":-4.98122562930803E-06,\"y\":180.026290893555,\"z\":1.52894419347405E-09},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"c91fef\":{\"lock\":true,\"pos\":{\"x\":-26.5,\"y\":1.76629996299744,\"z\":17},\"rot\":{\"x\":0,\"y\":-9.99999974737875E-05,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"c92093\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.7836,\"z\":27.5},\"rot\":{\"x\":0,\"y\":180.0025,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d03c7b\":{\"lock\":false,\"pos\":{\"x\":35,\"y\":1.558,\"z\":1.5},\"rot\":{\"x\":0.0011,\"y\":90,\"z\":0.0006},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d24a4a\":{\"lock\":true,\"pos\":{\"x\":6,\"y\":4,\"z\":18.58},\"rot\":{\"x\":90,\"y\":0.4397,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"d33e52\":{\"lock\":false,\"pos\":{\"x\":-27,\"y\":1.7836,\"z\":27.5},\"rot\":{\"x\":0,\"y\":179.9967,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d3deeb\":{\"lock\":true,\"pos\":{\"x\":6,\"y\":1.51760005950928,\"z\":6.5},\"rot\":{\"x\":0.0109000001102686,\"y\":179.999801635742,\"z\":0.00490000005811453},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d5023c\":{\"lock\":false,\"pos\":{\"x\":-30.9984,\"y\":1.8184,\"z\":19.4998},\"rot\":{\"x\":0.0014,\"y\":179.9555,\"z\":1.8934},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d7e54e\":{\"lock\":false,\"pos\":{\"x\":15,\"y\":1.50398015975952,\"z\":10.5},\"rot\":{\"x\":0.0108905965462327,\"y\":180.011138916016,\"z\":0.0049492591060698},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e13703\":{\"lock\":false,\"pos\":{\"x\":-28,\"y\":1.8006,\"z\":3},\"rot\":{\"x\":0,\"y\":180.0088,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"eca409\":{\"lock\":false,\"pos\":{\"x\":-29.5,\"y\":1.7836,\"z\":27.5},\"rot\":{\"x\":0,\"y\":180.0034,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ed4821\":{\"lock\":true,\"pos\":{\"x\":-31.3040008544922,\"y\":1.76629996299744,\"z\":10.9652004241943},\"rot\":{\"x\":0,\"y\":9.99999974737875E-05,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"eee3f0\":{\"lock\":false,\"pos\":{\"x\":5,\"y\":1.52967441082001,\"z\":-12},\"rot\":{\"x\":-4.47817463111733E-08,\"y\":180,\"z\":1.28283685896236E-08},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f2a81d\":{\"lock\":false,\"pos\":{\"x\":17.501,\"y\":1.536,\"z\":-6.0196},\"rot\":{\"x\":0.0049,\"y\":89.981,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f319a5\":{\"lock\":false,\"pos\":{\"x\":3.00000286102295,\"y\":0.979997277259827,\"z\":47.0000038146973},\"rot\":{\"x\":-4.98292638440034E-06,\"y\":179.996810913086,\"z\":4.12869866295296E-07},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"f519d9\":{\"lock\":false,\"pos\":{\"x\":-22,\"y\":1.7836,\"z\":27.5},\"rot\":{\"x\":0,\"y\":179.9939,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f7c30c\":{\"lock\":false,\"pos\":{\"x\":-32.5,\"y\":1.84,\"z\":3.5},\"rot\":{\"x\":0,\"y\":180.0002,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"f8420e\":{\"lock\":false,\"pos\":{\"x\":2,\"y\":1.4935,\"z\":-12},\"rot\":{\"x\":0,\"y\":180,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f8961e\":{\"lock\":false,\"pos\":{\"x\":23.5,\"y\":1.5506796836853,\"z\":-3},\"rot\":{\"x\":0.0109243802726269,\"y\":180.004409790039,\"z\":0.00495033524930477},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"f9947f\":{\"lock\":false,\"pos\":{\"x\":2,\"y\":1.50434243679047,\"z\":6.49999904632568},\"rot\":{\"x\":0.00494616385549307,\"y\":89.9916305541992,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"fad34b\":{\"lock\":false,\"pos\":{\"x\":-20.0001010894775,\"y\":1.78360652923584,\"z\":2.99989628791809},\"rot\":{\"x\":-7.56111649025115E-06,\"y\":180.005523681641,\"z\":2.54251190199284E-05},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"fb5176\":{\"lock\":false,\"pos\":{\"x\":-7.5,\"y\":1.50668370723724,\"z\":14.5},\"rot\":{\"x\":0.00494619226083159,\"y\":89.9914016723633,\"z\":359.989105224609},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"fe0c46\":{\"lock\":true,\"pos\":{\"x\":-34,\"y\":1.76629996299744,\"z\":12.5},\"rot\":{\"x\":0,\"y\":9.99999974737875E-05,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}}}}",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "4e84af",
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": -2.49999,
            "posY": 0.9799974,
            "posZ": 47.00001,
            "rotX": -5.005282E-06,
            "rotY": 179.99762,
            "rotZ": 3.62924851E-07,
            "scaleX": 1.20052135,
            "scaleY": 0.249882281,
            "scaleZ": 1.3145982
          },
          "Nickname": "La Guerre des Mondes",
          "Description": "Mini-Campagne Fan Made",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj",
            "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/11924678146362266/68D87E1FA88CB83A4BC10EB9219AC7D94B2282F6/",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CustomShader": {
              "SpecularColor": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "SpecularIntensity": 0.0,
              "SpecularSharpness": 2.0,
              "FresnelStrength": 0.0
            },
            "CastShadows": true
          },
          "Bag": {
            "Order": 0
          },
          "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
          "LuaScriptState": "{\"ml\":{\"05e736\":{\"lock\":true,\"pos\":{\"x\":6,\"y\":1.5208,\"z\":23.5},\"rot\":{\"x\":0.0109,\"y\":180.0053,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"0ca621\":{\"lock\":false,\"pos\":{\"x\":-21.5,\"y\":1.84,\"z\":4.499},\"rot\":{\"x\":0,\"y\":180.0309,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"103400\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.5038,\"z\":8.5},\"rot\":{\"x\":359.9881,\"y\":330,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"192e57\":{\"lock\":false,\"pos\":{\"x\":33.5,\"y\":1.5799,\"z\":12.5},\"rot\":{\"x\":0,\"y\":179.9818,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"199c59\":{\"lock\":false,\"pos\":{\"x\":0.5,\"y\":1.5061,\"z\":15},\"rot\":{\"x\":359.993,\"y\":30.0085,\"z\":359.9903},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"20e5c7\":{\"lock\":false,\"pos\":{\"x\":13.5,\"y\":1.505,\"z\":15},\"rot\":{\"x\":-0.0042,\"y\":45,\"z\":359.9888},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"2ede05\":{\"lock\":false,\"pos\":{\"x\":5,\"y\":3.9999,\"z\":53.8929},\"rot\":{\"x\":0,\"y\":179.9776,\"z\":0.0011},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"36c1d7\":{\"lock\":false,\"pos\":{\"x\":17.744,\"y\":1.536,\"z\":-6.0792},\"rot\":{\"x\":0.0109,\"y\":180.0043,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"37eed5\":{\"lock\":false,\"pos\":{\"x\":3,\"y\":1.502,\"z\":-5.5},\"rot\":{\"x\":0.0109,\"y\":180.0129,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.701960802078247,\"g\":0.800000011920929,\"r\":0.874509811401367}},\"3b532c\":{\"lock\":false,\"pos\":{\"x\":-25.5012,\"y\":1.84,\"z\":10.5005},\"rot\":{\"x\":0,\"y\":179.9715,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"3b768d\":{\"lock\":false,\"pos\":{\"x\":0,\"y\":4,\"z\":54},\"rot\":{\"x\":0,\"y\":179.9741,\"z\":0.0011},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"3f2140\":{\"lock\":false,\"pos\":{\"x\":8,\"y\":1.5061,\"z\":18.5},\"rot\":{\"x\":359.9881,\"y\":330.0001,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"3fd8d3\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.6943,\"z\":-2.9971},\"rot\":{\"x\":-0.0006,\"y\":180,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"41d415\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.84,\"z\":12.5},\"rot\":{\"x\":0,\"y\":180.0313,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"43f45a\":{\"lock\":false,\"pos\":{\"x\":-2,\"y\":1.5037,\"z\":1.5},\"rot\":{\"x\":0.0049,\"y\":90.0112,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"480756\":{\"lock\":false,\"pos\":{\"x\":-20,\"y\":1.4799,\"z\":-5},\"rot\":{\"x\":0,\"y\":180.0004,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"483c4b\":{\"lock\":false,\"pos\":{\"x\":0,\"y\":1.5044,\"z\":6},\"rot\":{\"x\":359.9881,\"y\":330,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"4e8b58\":{\"lock\":false,\"pos\":{\"x\":5,\"y\":1.5057,\"z\":15},\"rot\":{\"x\":359.9881,\"y\":330,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"51f9ee\":{\"lock\":false,\"pos\":{\"x\":-30.0015,\"y\":1.84,\"z\":10.5009},\"rot\":{\"x\":0,\"y\":179.9715,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"5478b2\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.84,\"z\":7},\"rot\":{\"x\":0,\"y\":180.0303,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"556ef0\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.5052,\"z\":13},\"rot\":{\"x\":-0.0049,\"y\":270.0034,\"z\":0.0109},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"58790f\":{\"lock\":false,\"pos\":{\"x\":13.5,\"y\":1.5041,\"z\":10.5},\"rot\":{\"x\":-0.0049,\"y\":270,\"z\":0.0109},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"58ba5f\":{\"lock\":false,\"pos\":{\"x\":-32.5005,\"y\":1.8006,\"z\":5.9996},\"rot\":{\"x\":0,\"y\":180.0307,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"59897e\":{\"lock\":false,\"pos\":{\"x\":10.5,\"y\":1.503,\"z\":3.5},\"rot\":{\"x\":-0.0049,\"y\":270.0033,\"z\":0.0109},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"64b76f\":{\"lock\":false,\"pos\":{\"x\":-25.5008,\"y\":1.84,\"z\":4.4991},\"rot\":{\"x\":0,\"y\":180.0311,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"682bb0\":{\"lock\":false,\"pos\":{\"x\":-5,\"y\":4.0001,\"z\":53.8819},\"rot\":{\"x\":0,\"y\":180,\"z\":0.0011},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"6c1683\":{\"lock\":false,\"pos\":{\"x\":12.7077,\"y\":1.5364,\"z\":-6.0794},\"rot\":{\"x\":0.0109,\"y\":179.9972,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":1.5,\"y\":1.5038,\"z\":3.5},\"rot\":{\"x\":-0.0049,\"y\":270.0034,\"z\":0.0109},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"78ebf8\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.84,\"z\":7},\"rot\":{\"x\":0,\"y\":180.0312,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"7f4702\":{\"lock\":false,\"pos\":{\"x\":5,\"y\":1.504,\"z\":6},\"rot\":{\"x\":359.993,\"y\":30,\"z\":359.9903},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"825882\":{\"lock\":false,\"pos\":{\"x\":4,\"y\":1.5065,\"z\":18.5},\"rot\":{\"x\":0.007,\"y\":209.9788,\"z\":0.0097},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"8bb30f\":{\"lock\":false,\"pos\":{\"x\":17.744,\"y\":1.536,\"z\":-6.0792},\"rot\":{\"x\":0.0109,\"y\":180.0043,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"8c5ee4\":{\"lock\":false,\"pos\":{\"x\":9.5,\"y\":1.5053,\"z\":15},\"rot\":{\"x\":359.993,\"y\":30,\"z\":359.9903},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"8fefa0\":{\"lock\":true,\"pos\":{\"x\":-0.2504,\"y\":4,\"z\":58.4},\"rot\":{\"x\":90,\"y\":0,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"909f0c\":{\"lock\":false,\"pos\":{\"x\":12.7077,\"y\":1.5364,\"z\":-6.0793},\"rot\":{\"x\":0.0109,\"y\":180.0008,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"93819d\":{\"lock\":false,\"pos\":{\"x\":-4,\"y\":1.5048,\"z\":6},\"rot\":{\"x\":359.993,\"y\":30,\"z\":359.9903},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"9540d3\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.5042,\"z\":8.5},\"rot\":{\"x\":0.007,\"y\":209.9999,\"z\":0.0097},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"96b568\":{\"lock\":false,\"pos\":{\"x\":-22,\"y\":1.84,\"z\":6.5},\"rot\":{\"x\":0,\"y\":180.0309,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"9d69b9\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.6558,\"z\":-2.9971},\"rot\":{\"x\":-0.0006,\"y\":180,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a37a19\":{\"lock\":false,\"pos\":{\"x\":3.5,\"y\":1.5046,\"z\":8.5},\"rot\":{\"x\":359.9881,\"y\":330,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"a68696\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.5032,\"z\":1.5},\"rot\":{\"x\":0.0049,\"y\":90.0001,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"a7b69e\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.7039,\"z\":-2.9971},\"rot\":{\"x\":-0.0006,\"y\":180,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"bb7fa3\":{\"lock\":false,\"pos\":{\"x\":2,\"y\":1.506,\"z\":15},\"rot\":{\"x\":359.993,\"y\":30,\"z\":359.9903},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"bd9417\":{\"lock\":true,\"pos\":{\"x\":0,\"y\":4,\"z\":54.5},\"rot\":{\"x\":0,\"y\":179.9735,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.345806419849396,\"g\":0.246825397014618,\"r\":0.817645847797394}},\"c715ec\":{\"lock\":false,\"pos\":{\"x\":-27.5013,\"y\":1.84,\"z\":16.0016},\"rot\":{\"x\":0,\"y\":180.0313,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"c93e72\":{\"lock\":false,\"pos\":{\"x\":12.7077,\"y\":1.5364,\"z\":-6.0793},\"rot\":{\"x\":0.0109,\"y\":179.9983,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"cfbaca\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.5075,\"z\":24},\"rot\":{\"x\":359.9891,\"y\":0.011,\"z\":-0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d10233\":{\"lock\":false,\"pos\":{\"x\":10,\"y\":1.5036,\"z\":6},\"rot\":{\"x\":359.9881,\"y\":330,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d3a55c\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.5049,\"z\":10.5001},\"rot\":{\"x\":0.005,\"y\":89.9981,\"z\":359.9883},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d55ba7\":{\"lock\":false,\"pos\":{\"x\":7.5,\"y\":1.5072,\"z\":24},\"rot\":{\"x\":-0.0042,\"y\":45,\"z\":359.9888},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d8ca33\":{\"lock\":false,\"pos\":{\"x\":-23.0013,\"y\":1.84,\"z\":16.0007},\"rot\":{\"x\":0,\"y\":180.0312,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"d9022b\":{\"lock\":false,\"pos\":{\"x\":7,\"y\":1.5055,\"z\":15},\"rot\":{\"x\":359.9881,\"y\":330,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"dbaada\":{\"lock\":false,\"pos\":{\"x\":-28,\"y\":1.84,\"z\":6.5},\"rot\":{\"x\":0,\"y\":180.0311,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"dfa0d7\":{\"lock\":false,\"pos\":{\"x\":7.5,\"y\":1.5029,\"z\":1.5},\"rot\":{\"x\":0.0049,\"y\":90,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e00033\":{\"lock\":false,\"pos\":{\"x\":-3,\"y\":1.5178,\"z\":3.5},\"rot\":{\"x\":0.0109,\"y\":179.9975,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00034\":{\"lock\":false,\"pos\":{\"x\":1.5,\"y\":1.5193,\"z\":13.5},\"rot\":{\"x\":0.0109,\"y\":180.0023,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00035\":{\"lock\":false,\"pos\":{\"x\":10.5,\"y\":1.5185,\"z\":13.5},\"rot\":{\"x\":0.0109,\"y\":180.003,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00036\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.517,\"z\":3.5},\"rot\":{\"x\":0.0109,\"y\":180.0002,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00037\":{\"lock\":false,\"pos\":{\"x\":15,\"y\":1.5163,\"z\":3.5},\"rot\":{\"x\":0.0109,\"y\":180.0001,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00038\":{\"lock\":false,\"pos\":{\"x\":-28.5003,\"y\":1.7836,\"z\":5.9997},\"rot\":{\"x\":0,\"y\":179.9995,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0003b\":{\"lock\":false,\"pos\":{\"x\":23.5013,\"y\":1.5138,\"z\":-5.523},\"rot\":{\"x\":0.0109,\"y\":180.0025,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00047\":{\"lock\":false,\"pos\":{\"x\":20.5,\"y\":1.519,\"z\":20.5},\"rot\":{\"x\":0.0109,\"y\":179.9747,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00048\":{\"lock\":false,\"pos\":{\"x\":-29.5001,\"y\":1.7836,\"z\":3.9999},\"rot\":{\"x\":0,\"y\":179.9961,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0005f\":{\"lock\":false,\"pos\":{\"x\":9,\"y\":1.5181,\"z\":10.5},\"rot\":{\"x\":0.0109,\"y\":180.0026,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00060\":{\"lock\":false,\"pos\":{\"x\":0,\"y\":1.5189,\"z\":10.5},\"rot\":{\"x\":0.0109,\"y\":179.9998,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00061\":{\"lock\":false,\"pos\":{\"x\":18,\"y\":1.5173,\"z\":10.5},\"rot\":{\"x\":0.0109,\"y\":180.0021,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00062\":{\"lock\":false,\"pos\":{\"x\":9,\"y\":1.5164,\"z\":1.5},\"rot\":{\"x\":0.0109,\"y\":180.0001,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00063\":{\"lock\":false,\"pos\":{\"x\":0,\"y\":1.5172,\"z\":1.5},\"rot\":{\"x\":0.0109,\"y\":180.0004,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00064\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.5202,\"z\":19.5},\"rot\":{\"x\":0.0109,\"y\":180.0007,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00065\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.5219,\"z\":28.5},\"rot\":{\"x\":0.0109,\"y\":180.0006,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00066\":{\"lock\":false,\"pos\":{\"x\":18.0005,\"y\":1.5189,\"z\":19.0002},\"rot\":{\"x\":0.0109,\"y\":179.997,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00069\":{\"lock\":false,\"pos\":{\"x\":23.5013,\"y\":1.5138,\"z\":-5.523},\"rot\":{\"x\":0.0109,\"y\":180.0023,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0006a\":{\"lock\":false,\"pos\":{\"x\":2.5002,\"y\":1.5711,\"z\":12},\"rot\":{\"x\":0.0108,\"y\":180.0069,\"z\":357.2691},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00087\":{\"lock\":false,\"pos\":{\"x\":-30,\"y\":1.7836,\"z\":4},\"rot\":{\"x\":0,\"y\":179.9923,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0008b\":{\"lock\":false,\"pos\":{\"x\":12,\"y\":1.5196,\"z\":19.5},\"rot\":{\"x\":0.0109,\"y\":179.9936,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0008c\":{\"lock\":false,\"pos\":{\"x\":12,\"y\":1.5213,\"z\":28.5},\"rot\":{\"x\":0.0109,\"y\":179.9997,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0008d\":{\"lock\":false,\"pos\":{\"x\":-2,\"y\":1.5191,\"z\":10.5},\"rot\":{\"x\":0.0109,\"y\":180.0006,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0008e\":{\"lock\":false,\"pos\":{\"x\":-6.5,\"y\":1.5177,\"z\":1.5},\"rot\":{\"x\":0.0109,\"y\":180.0019,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00099\":{\"lock\":false,\"pos\":{\"x\":23.5013,\"y\":1.5138,\"z\":-5.523},\"rot\":{\"x\":0.0109,\"y\":180.0025,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e36f29\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.4799,\"z\":-5},\"rot\":{\"x\":0,\"y\":179.9998,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"eaecf4\":{\"lock\":false,\"pos\":{\"x\":-0.5,\"y\":1.5049,\"z\":8.5},\"rot\":{\"x\":0.007,\"y\":210,\"z\":0.0097},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"ed1a26\":{\"lock\":false,\"pos\":{\"x\":-21.5013,\"y\":1.84,\"z\":10.5004},\"rot\":{\"x\":0,\"y\":180.0161,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"f43359\":{\"lock\":false,\"pos\":{\"x\":9,\"y\":1.5036,\"z\":6},\"rot\":{\"x\":359.9891,\"y\":0.011,\"z\":-0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}}}}",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "192e57",
              "Name": "Custom_Token",
              "Transform": {
                "posX": 33.5,
                "posY": 1.5814991,
                "posZ": 12.5,
                "rotX": -3.04579828E-08,
                "rotY": 179.9818,
                "rotZ": -1.27708439E-08,
                "scaleX": 3.11679578,
                "scaleY": 1.0,
                "scaleZ": 3.11679578
              },
              "Nickname": "La Guerre des Mondes",
              "Description": "Carnet de Campagne",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/1284038003228560814/EE1E81BDE15C402CE89ED222A620CDEFA3ECEC79/",
                "ImageSecondaryURL": "",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomToken": {
                  "Thickness": 0.2,
                  "MergeDistancePixels": 15.0,
                  "StandUp": false,
                  "Stackable": false
                }
              },
              "LuaScript": "--[[    Character Sheet Template    by: MrStump\r\n\r\nYou can set up your own character sheet if you follow these steps.\r\n\r\nStep 1) Change the character sheet image\r\n    -Right click on the character sheet, click Custom\r\n    -Replace the image URL with one for your character sheet\r\n    -Click import, make sure your sheet loads\r\n    -SAVE THE GAME (the table setup)\r\n    -LOAD FROM THAT SAVE YOU JUST MADE\r\n\r\nStep 2) Edit script to fit your character sheet\r\n    -Below you will see some general options, and then the big data table\r\n    -The data table is what determines how many of which buttons are made\r\n        -Checkboxes\r\n        -Counters\r\n        -Textboxes\r\n    -By default, there are 3 of each. You can add more or remove entries\r\n    -If you intend to add/remove, be sure only to add/remove ENTRIES\r\n        -This is what an entry looks like:\r\n            {\r\n                pos   = {-0.977,0.1,-0.589},\r\n                size  = 800,\r\n                state = false\r\n            },\r\n        -Deleting the whole thing would remove that specific item on the sheet\r\n        -Copy and pasting it after another entry would create another\r\n    -Each entry type has unique data points (pos, size, state, etc)\r\n        -Do not try to add in your own data points or remove them individually\r\n        -There is a summary of what each point does at the top of its category\r\n\r\nStep 3) Save and check script changes\r\n    -Hit Save & Apply in the script window to save your code\r\n    -You can edit your code as needed and Save+Apply as often as needed\r\n    -When you are finished, make disableSave = false below then Save+apply\r\n        -This enables saving, so your sheet will remember whats on it.\r\n\r\nBonus) Finding/Editing Positions for elements\r\n    I have included a tool to get positions for buttons in {x,y,z} form\r\n    Place it where you want the center of your element to be\r\n    Then copy the table from the notes (lower right of screen)\r\n        You can highlight it and CTRL+C\r\n    Paste it into the data table where needed (pos=)\r\n    If you want to manually tweek the values:\r\n        {0,0,0} is the center of the character sheet\r\n        {1,0,0} is right, {-1,0,0} is left\r\n        {0,0,-1} is up, {0,0,1} is down\r\n        0.1 for Y is the height off of the page.\r\n            If it was 0, it would be down inside the model of the sheet\r\n\r\nBegin editing below:    ]]\r\n\r\n--Set this to true while editing and false when you have finished\r\ndisableSave = false\r\n--Remember to set this to false once you are done making changes\r\n--Then, after you save & apply it, save your game too\r\n\r\n--Color information for button text (r,g,b, values of 0-1)\r\nbuttonFontColor = {0,0,0,200}\r\n--Color information for button background\r\nbuttonColor = {1,1,1,0}\r\n--Change scale of button (Avoid changing if possible)\r\nbuttonScale = {0.1,0.1,0.1}\r\n\r\n--This is the button placement information\r\ndefaultButtonData = {\r\n    --Add checkboxes\r\n    checkbox = {\r\n        --[[\r\n        pos   = the position (pasted from the helper tool)\r\n        size  = height/width/font_size for checkbox\r\n        state = default starting value for checkbox (true=checked, false=not)\r\n        ]]\r\n        --First Contact\r\n        {\r\n            pos   = {-1.730,0.1,1.140},\r\n            size  = 500,\r\n            state = false\r\n        },\r\n        --Phobos and Deimos\r\n        {\r\n            pos   = {-0.968,0.1,1.355},\r\n            size  = 500,\r\n            state = false\r\n        },\r\n        --The Stillness\r\n        {\r\n            pos   = {-1.683,0.1,1.560},\r\n            size  = 500,\r\n            state = false\r\n        },\r\n        --The Thirsting Void\r\n        {\r\n            pos   = {-0.888,0.1,1.746},\r\n            size  = 500,\r\n            state = false\r\n        },\r\n        --End of checkboxes\r\n    },\r\n    --Add counters that have a + and - button\r\n    counter = {\r\n        --[[\r\n        pos    = the position (pasted from the helper tool)\r\n        size   = height/width/font_size for counter\r\n        value  = default starting value for counter\r\n        hideBG = if background of counter is hidden (true=hidden, false=not)\r\n        ]]\r\n        --1st Player Experience\r\n        {\r\n            pos    = {-1.080,0.1,-1.010},\r\n            size   = 800,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --1st Player Physical Trauma\r\n        {\r\n            pos    = {-1.270,0.1,-0.790},\r\n            size   = 600,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --1st Player Mental Trauma\r\n        {\r\n            pos    = {-1.000,0.1,-0.790},\r\n            size   = 600,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --2nd Player Experience\r\n        {\r\n            pos    = {-0.251,0.1,-1.010},\r\n            size   = 800,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --2nd Player Physical Trauma\r\n        {\r\n            pos    = {-0.441,0.1,-0.790},\r\n            size   = 600,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --2nd Player Mental Trauma\r\n        {\r\n            pos    = {-0.171,0.1,-0.790},\r\n            size   = 600,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --3rd Player Experience\r\n        {\r\n            pos    = {0.579,0.1,-1.010},\r\n            size   = 800,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --3rd Player Physical Trauma\r\n        {\r\n            pos    = {0.389,0.1,-0.790},\r\n            size   = 600,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --3rd Player Mental Trauma\r\n        {\r\n            pos    = {0.659,0.1,-0.790},\r\n            size   = 600,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --4th Player Experience\r\n        {\r\n            pos    = {1.407,0.1,-1.010},\r\n            size   = 800,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --4th Player Physical Trauma\r\n        {\r\n            pos    = {1.217,0.1,-0.790},\r\n            size   = 600,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --4th Player Mental Trauma\r\n        {\r\n            pos    = {1.487,0.1,-0.790},\r\n            size   = 600,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --Sacrifices to Nodens\r\n        {\r\n            pos    = {0.890,0.1,1.150},\r\n            size   = 1000,\r\n            value  = 0,\r\n            hideBG = true\r\n        },\r\n        --End of counters\r\n    },\r\n    --Add editable text boxes\r\n    textbox = {\r\n        --[[\r\n        pos       = the position (pasted from the helper tool)\r\n        rows      = how many lines of text you want for this box\r\n        width     = how wide the text box is\r\n        font_size = size of text. This and \"rows\" effect overall height\r\n        label     = what is shown when there is no text. \"\" = nothing\r\n        value     = text entered into box. \"\" = nothing\r\n        alignment = Number to indicate how you want text aligned\r\n                    (1=Automatic, 2=Left, 3=Center, 4=Right, 5=Justified)\r\n        ]]\r\n        --1st Player Name\r\n        {\r\n            pos       = {-1.265,0.1,-1.390},\r\n            rows      = 1,\r\n            width     = 3800,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --1st Player Investigator\r\n        {\r\n            pos       = {-1.265,0.1,-1.195},\r\n            rows      = 1,\r\n            width     = 3800,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --1st Player Story Assets/Weaknesses\r\n        {\r\n            pos       = {-1.265,0.1,-0.420},\r\n            rows      = 7,\r\n            width     = 3800,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --2nd Player Name\r\n        {\r\n            pos       = {-0.436,0.1,-1.390},\r\n            rows      = 1,\r\n            width     = 3800,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --2nd Player Investigator\r\n        {\r\n            pos       = {-0.436,0.1,-1.195},\r\n            rows      = 1,\r\n            width     = 3800,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --2nd Player Story Assets/Weaknesses\r\n        {\r\n            pos       = {-0.436,0.1,-0.420},\r\n            rows      = 7,\r\n            width     = 3800,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --3rd Player Name\r\n        {\r\n            pos       = {0.394,0.1,-1.390},\r\n            rows      = 1,\r\n            width     = 3800,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --3rd Player Investigator\r\n        {\r\n            pos       = {0.394,0.1,-1.195},\r\n            rows      = 1,\r\n            width     = 3800,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --3rd Player Story Assets/Weaknesses\r\n        {\r\n            pos       = {0.394,0.1,-0.420},\r\n            rows      = 7,\r\n            width     = 3800,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --4th Player Name\r\n        {\r\n            pos       = {1.222,0.1,-1.390},\r\n            rows      = 1,\r\n            width     = 3800,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --4th Player Investigator\r\n        {\r\n            pos       = {1.222,0.1,-1.195},\r\n            rows      = 1,\r\n            width     = 3800,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --4th Player Story Assets/Weaknesses\r\n        {\r\n            pos       = {1.222,0.1,-0.420},\r\n            rows      = 7,\r\n            width     = 3800,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2\r\n        },\r\n        --Campaign Notes\r\n        {\r\n            pos       = {-0.930,0.1,0.620},\r\n            rows      = 12,\r\n            width     = 7800,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2,\r\n\t    rot       = { x=0, y=-4, z=0 }\r\n        },\r\n        --Evacuated Locations\r\n        {\r\n            pos       = {0.820,0.1,0.500},\r\n            rows      = 10,\r\n            width     = 7800,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2,\r\n\t    rot       = { x=0, y=-4, z=0 }\r\n        },\r\n        --Killed and Insane Investigators\r\n        {\r\n            pos       = {1.010,0.1,1.700},\r\n            rows      = 5,\r\n            width     = 7400,\r\n            font_size = 300,\r\n            label     = \"Empty\",\r\n            value     = \"\",\r\n            alignment = 2,\r\n\t    rot       = { x=0, y=-4, z=0 }\r\n        },\r\n        --End of textboxes\r\n    }\r\n}\r\n\r\n\r\n\r\n--Lua beyond this point, I recommend doing something more fun with your life\r\n\r\n\r\n\r\n--Save function\r\nlocal alreadySaving = false -- Copy this too!\r\nfunction updateSave()\r\n\r\n    function string.replaceText(text, old, new)\r\n      local b,e = text:find(old,1,true)\r\n      if b==nil then\r\n         return text\r\n      else\r\n         return text:sub(1,b-1) .. new .. text:sub(e+1)\r\n      end\r\n    end\r\n\r\n    function wait(time)\r\n      local start = os.time()\r\n      repeat coroutine.yield(0) until os.time() > start + time\r\n    end\r\n\r\n    function deepcopy(orig)\r\n      local orig_type = type(orig)\r\n      local copy\r\n      if orig_type == 'table' then\r\n          copy = {}\r\n          for orig_key, orig_value in next, orig, nil do\r\n              copy[deepcopy(orig_key)] = deepcopy(orig_value)\r\n          end\r\n          setmetatable(copy, deepcopy(getmetatable(orig)))\r\n      else -- number, string, boolean, etc\r\n          copy = orig\r\n      end\r\n      return copy\r\n    end\r\n\r\n    function startSaving()\r\n      while alreadySaving do\r\n        wait(0.01)\r\n      end\r\n    alreadySaving = true\r\n    local ref_buttonData = deepcopy(ref_buttonData)\r\n    local input_values = {}\r\n    local checkbox_values = {}\r\n    local counter_values = {}\r\n\r\n    local GUID = self.getGUID()\r\n    local counter = 1\r\n    for _, val in ipairs(ref_buttonData.textbox) do\r\n        if val.value ~= nil then\r\n          input_values[counter] = val.value\r\n          val.value = \"u\"..GUID..\":iv:\"..counter..\"u\"\r\n          counter = counter + 1\r\n        end\r\n        if val.label ~= nil then\r\n          input_values[counter] = val.label\r\n          val.label = \"u\"..GUID..\":iv:\"..counter..\"u\"\r\n          counter = counter + 1\r\n        end\r\n    end\r\n\r\n    local counter = 1\r\n    for _, val in ipairs(ref_buttonData.checkbox) do\r\n        if val.value ~= nil then\r\n          checkbox_values[counter] = val.value\r\n          val.value = \"u\"..GUID..\":bv:\"..counter..\"u\"\r\n          counter = counter + 1\r\n        end\r\n    end\r\n\r\n    local counter = 1\r\n    for _, val in ipairs(ref_buttonData.counter) do\r\n        if val.value ~= nil then\r\n          counter_values[counter] = val.value\r\n          val.value = \"u\"..GUID..\":cv:\"..counter..\"u\"\r\n          counter = counter + 1\r\n          if val.counters ~= nil then\r\n            for _, val2 in ipairs(val.counters) do\r\n              if val2.value ~= nil then\r\n                counter_values[counter] = val2.value\r\n                val2.value = \"u\"..GUID..\":cv:\"..counter..\"u\"\r\n                counter = counter + 1\r\n              end\r\n              if val2.change_value ~= nil then\r\n                counter_values[counter] = val2.change_value\r\n                val2.change_value = \"u\"..GUID..\":cv:\"..counter..\"u\"\r\n                counter = counter + 1\r\n              end\r\n            end\r\n          end\r\n\r\n        end\r\n    end\r\n\r\n    saved_data = JSON.encode(ref_buttonData)\r\n\r\n    local counter = 1\r\n    for _, val in ipairs(ref_buttonData.textbox) do\r\n        if val.value ~= nil then\r\n          saved_data = saved_data:replaceText(\"u\"..GUID..\":iv:\"..counter..\"u\", string.gsub(input_values[counter], \"[\\\\\\\"']\", \"\\\\%1\"))\r\n          val.value = input_values[counter]\r\n          counter = counter + 1\r\n        end\r\n        if val.label ~= nil then\r\n          saved_data = saved_data:replaceText(\"u\"..GUID..\":iv:\"..counter..\"u\", string.gsub(input_values[counter], \"[\\\\\\\"']\", \"\\\\%1\"))\r\n          val.label = input_values[counter]\r\n          counter = counter + 1\r\n        end\r\n    end\r\n\r\n    local counter = 1\r\n    for _, val in ipairs(ref_buttonData.checkbox) do\r\n        if val.value ~= nil then\r\n          val.value = checkbox_values[counter]\r\n          saved_data = saved_data:replaceText(\"u\"..GUID..\":bv:\"..counter..\"u\", string.gsub(checkbox_values[counter], \"[\\\\\\\"']\", \"\\\\%1\"))\r\n          counter = counter + 1\r\n        end\r\n    end\r\n\r\n    local counter = 1\r\n    for _, val in ipairs(ref_buttonData.counter) do\r\n        if val.value ~= nil then\r\n          val.value = counter_values[counter]\r\n          saved_data = saved_data:replaceText(\"u\"..GUID..\":cv:\"..counter..\"u\", string.gsub(counter_values[counter], \"[\\\\\\\"']\", \"\\\\%1\"))\r\n          counter = counter + 1\r\n\r\n          if val.counters ~= nil then\r\n            for _, val2 in ipairs(val.counters) do\r\n              if val2.value ~= nil then\r\n                val2.value = counter_values[counter]\r\n                saved_data = saved_data:replaceText(\"u\"..GUID..\":cv:\"..counter..\"u\", string.gsub(counter_values[counter], \"[\\\\\\\"']\", \"\\\\%1\"))\r\n                counter = counter + 1\r\n              end\r\n              if val2.change_value ~= nil then\r\n                val2.change_value = counter_values[counter]\r\n                saved_data = saved_data:replaceText(\"u\"..GUID..\":cv:\"..counter..\"u\", string.gsub(counter_values[counter], \"[\\\\\\\"']\", \"\\\\%1\"))\r\n                counter = counter + 1\r\n              end\r\n            end\r\n          end\r\n\r\n        end\r\n    end\r\n    if disableSave==true then saved_data=\"\" end\r\n    self.script_state = saved_data\r\n\r\n    alreadySaving = false\r\n    return 1\r\n  end\r\n  startLuaCoroutine(self, \"startSaving\")\r\nend\r\n\r\n--Startup procedure\r\nfunction onload(saved_data)\r\n    if disableSave==true then saved_data=\"\" end\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        ref_buttonData = loaded_data\r\n    else\r\n        ref_buttonData = defaultButtonData\r\n    end\r\n\r\n    spawnedButtonCount = 0\r\n    createCheckbox()\r\n    createCounter()\r\n    createTextbox()\r\nend\r\n\r\n\r\n\r\n--Click functions for buttons\r\n\r\n\r\n\r\n--Checks or unchecks the given box\r\nfunction click_checkbox(tableIndex, buttonIndex)\r\n    if ref_buttonData.checkbox[tableIndex].state == true then\r\n        ref_buttonData.checkbox[tableIndex].state = false\r\n        self.editButton({index=buttonIndex, label=\"\"})\r\n    else\r\n        ref_buttonData.checkbox[tableIndex].state = true\r\n        self.editButton({index=buttonIndex, label=string.char(10008)})\r\n    end\r\n    updateSave()\r\nend\r\n\r\n--Applies value to given counter display\r\nfunction click_counter(tableIndex, buttonIndex, amount)\r\n    ref_buttonData.counter[tableIndex].value = ref_buttonData.counter[tableIndex].value + amount\r\n    self.editButton({index=buttonIndex, label=ref_buttonData.counter[tableIndex].value})\r\n    updateSave()\r\nend\r\n\r\n--Updates saved value for given text box\r\nfunction click_textbox(i, value, selected)\r\n    if selected == false then\r\n        ref_buttonData.textbox[i].value = value\r\n        updateSave()\r\n    end\r\nend\r\n\r\n--Dud function for if you have a background on a counter\r\nfunction click_none() end\r\n\r\n\r\n\r\n--Button creation\r\n\r\n\r\n\r\n--Makes checkboxes\r\nfunction createCheckbox()\r\n    for i, data in ipairs(ref_buttonData.checkbox) do\r\n        --Sets up reference function\r\n        local buttonNumber = spawnedButtonCount\r\n        local funcName = \"checkbox\"..i\r\n        local func = function() click_checkbox(i, buttonNumber) end\r\n        self.setVar(funcName, func)\r\n        --Sets up label\r\n        local label = \"\"\r\n        if data.state==true then label=string.char(10008) end\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=funcName, function_owner=self,\r\n            position=data.pos, height=data.size, width=data.size,\r\n            font_size=data.size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n    end\r\nend\r\n\r\n--Makes counters\r\nfunction createCounter()\r\n    for i, data in ipairs(ref_buttonData.counter) do\r\n        --Sets up display\r\n        local displayNumber = spawnedButtonCount\r\n        --Sets up label\r\n        local label = data.value\r\n        --Sets height/width for display\r\n        local size = data.size\r\n        if data.hideBG == true then size = 0 end\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=\"click_none\", function_owner=self,\r\n            position=data.pos, height=size, width=size,\r\n            font_size=data.size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n\r\n        --Sets up add 1\r\n        local funcName = \"counterAdd\"..i\r\n        local func = function() click_counter(i, displayNumber, 1) end\r\n        self.setVar(funcName, func)\r\n        --Sets up label\r\n        local label = \"+\"\r\n        --Sets up position\r\n        local offsetDistance = (data.size/2 + data.size/4) * (buttonScale[1] * 0.002)\r\n        local pos = {data.pos[1] + offsetDistance, data.pos[2], data.pos[3]}\r\n        --Sets up size\r\n        local size = data.size / 2\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=funcName, function_owner=self,\r\n            position=pos, height=size, width=size,\r\n            font_size=size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n\r\n        --Sets up subtract 1\r\n        local funcName = \"counterSub\"..i\r\n        local func = function() click_counter(i, displayNumber, -1) end\r\n        self.setVar(funcName, func)\r\n        --Sets up label\r\n        local label = \"-\"\r\n        --Set up position\r\n        local pos = {data.pos[1] - offsetDistance, data.pos[2], data.pos[3]}\r\n        --Creates button and counts it\r\n        self.createButton({\r\n            label=label, click_function=funcName, function_owner=self,\r\n            position=pos, height=size, width=size,\r\n            font_size=size, scale=buttonScale,\r\n            color=buttonColor, font_color=buttonFontColor\r\n        })\r\n        spawnedButtonCount = spawnedButtonCount + 1\r\n    end\r\nend\r\n\r\nfunction createTextbox()\r\n    for i, data in ipairs(ref_buttonData.textbox) do\r\n        --Sets up reference function\r\n        local funcName = \"textbox\"..i\r\n        local func = function(_,_,val,sel) click_textbox(i,val,sel) end\r\n        self.setVar(funcName, func)\r\n\r\n        self.createInput({\r\n            input_function = funcName,\r\n            function_owner = self,\r\n            label          = data.label,\r\n            alignment      = data.alignment,\r\n            position       = data.pos,\r\n            scale          = buttonScale,\r\n            width          = data.width,\r\n            height         = (data.font_size*data.rows)+24,\r\n            font_size      = data.font_size,\r\n            color          = buttonColor,\r\n            font_color     = { 0.211, 0.360, 0.435, 255 },\r\n            value          = data.value,\r\n\t    rotation\t   = data.rot or {x=0, y=0, z=0},\r\n        })\r\n    end\r\nend",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "2ede05",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": 5.000004,
                "posY": 3.99990416,
                "posZ": 53.8929,
                "rotX": -1.74818751E-07,
                "rotY": 179.977676,
                "rotZ": 0.00109797309,
                "scaleX": 1.20052135,
                "scaleY": 0.249882281,
                "scaleZ": 1.3145982
              },
              "Nickname": "3: Le Néant Assoiffé",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/1461933574036567398/15DAAE868BDDCBD5C0DB4F6CAA260264C0993C35/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
              "LuaScriptState": "{\"ml\":{\"0ca621\":{\"lock\":false,\"pos\":{\"x\":-21.5,\"y\":1.84,\"z\":4.499},\"rot\":{\"x\":0,\"y\":180.0309,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"199c59\":{\"lock\":false,\"pos\":{\"x\":0.5,\"y\":1.5061,\"z\":15},\"rot\":{\"x\":359.993,\"y\":30.0085,\"z\":359.9903},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"3b532c\":{\"lock\":false,\"pos\":{\"x\":-25.5012,\"y\":1.84,\"z\":10.5005},\"rot\":{\"x\":0,\"y\":179.9715,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"3fd8d3\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.6943,\"z\":-2.9971},\"rot\":{\"x\":-0.0006,\"y\":180,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"43f45a\":{\"lock\":false,\"pos\":{\"x\":-2,\"y\":1.5037,\"z\":1.5},\"rot\":{\"x\":0.0049,\"y\":90.0112,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"483c4b\":{\"lock\":false,\"pos\":{\"x\":0,\"y\":1.5044,\"z\":6},\"rot\":{\"x\":359.9881,\"y\":330,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"4e8b58\":{\"lock\":false,\"pos\":{\"x\":5,\"y\":1.5057,\"z\":15},\"rot\":{\"x\":359.9881,\"y\":330,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"51f9ee\":{\"lock\":false,\"pos\":{\"x\":-30.0015,\"y\":1.84,\"z\":10.5009},\"rot\":{\"x\":0,\"y\":179.9715,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"64b76f\":{\"lock\":false,\"pos\":{\"x\":-25.5008,\"y\":1.84,\"z\":4.4991},\"rot\":{\"x\":0,\"y\":180.0311,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":12,\"y\":1.5068,\"z\":24},\"rot\":{\"x\":359.9891,\"y\":0.0209,\"z\":-0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"7f4702\":{\"lock\":false,\"pos\":{\"x\":5,\"y\":1.504,\"z\":6},\"rot\":{\"x\":359.993,\"y\":30,\"z\":359.9903},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"8c5ee4\":{\"lock\":false,\"pos\":{\"x\":9.5,\"y\":1.5053,\"z\":15},\"rot\":{\"x\":359.993,\"y\":30,\"z\":359.9903},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"93819d\":{\"lock\":false,\"pos\":{\"x\":-4,\"y\":1.5048,\"z\":6},\"rot\":{\"x\":359.993,\"y\":30,\"z\":359.9903},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"c715ec\":{\"lock\":false,\"pos\":{\"x\":-27.5013,\"y\":1.84,\"z\":16.0016},\"rot\":{\"x\":0,\"y\":180.0313,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"c93e72\":{\"lock\":false,\"pos\":{\"x\":12.7077,\"y\":1.5364,\"z\":-6.0793},\"rot\":{\"x\":0.0109,\"y\":179.9983,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d10233\":{\"lock\":false,\"pos\":{\"x\":10,\"y\":1.5036,\"z\":6},\"rot\":{\"x\":359.9881,\"y\":330,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d55ba7\":{\"lock\":false,\"pos\":{\"x\":7.5,\"y\":1.5072,\"z\":24},\"rot\":{\"x\":-0.0042,\"y\":45,\"z\":359.9888},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d8ca33\":{\"lock\":false,\"pos\":{\"x\":-23.0013,\"y\":1.84,\"z\":16.0007},\"rot\":{\"x\":0,\"y\":180.0312,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"dfa0d7\":{\"lock\":false,\"pos\":{\"x\":7.5,\"y\":1.5029,\"z\":1.5},\"rot\":{\"x\":0.0049,\"y\":90,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e00087\":{\"lock\":false,\"pos\":{\"x\":-30,\"y\":1.7836,\"z\":4},\"rot\":{\"x\":0,\"y\":179.9923,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0008b\":{\"lock\":false,\"pos\":{\"x\":12,\"y\":1.5196,\"z\":19.5},\"rot\":{\"x\":0.0109,\"y\":179.9936,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0008c\":{\"lock\":false,\"pos\":{\"x\":12,\"y\":1.5213,\"z\":28.5},\"rot\":{\"x\":0.0109,\"y\":179.9997,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0008d\":{\"lock\":false,\"pos\":{\"x\":-2,\"y\":1.5191,\"z\":10.5},\"rot\":{\"x\":0.0109,\"y\":180.0006,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0008e\":{\"lock\":false,\"pos\":{\"x\":-6.5,\"y\":1.5177,\"z\":1.5},\"rot\":{\"x\":0.0109,\"y\":180.0019,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00099\":{\"lock\":false,\"pos\":{\"x\":23.5013,\"y\":1.5138,\"z\":-5.523},\"rot\":{\"x\":0.0109,\"y\":180.0025,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ed1a26\":{\"lock\":false,\"pos\":{\"x\":-21.5013,\"y\":1.84,\"z\":10.5004},\"rot\":{\"x\":0,\"y\":180.0161,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}}}}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "0ca621",
                  "Name": "Custom_Model_Bag",
                  "Transform": {
                    "posX": -21.5000038,
                    "posY": 1.840001,
                    "posZ": 4.4989953,
                    "rotX": -6.92312051E-06,
                    "rotY": 180.0309,
                    "rotZ": -2.49165538E-07,
                    "scaleX": 0.7,
                    "scaleY": 0.7,
                    "scaleZ": 0.7
                  },
                  "Nickname": "Les investigateurs ont découvert certaines faiblesses des Martiens.",
                  "Description": "Placez selon le guide de campagne",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "CustomMesh": {
                    "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/11926483554530702/74DC85DF11752753017C2235C9E96E2250BBCAD1/",
                    "NormalURL": "",
                    "ColliderURL": "",
                    "Convex": true,
                    "MaterialIndex": 3,
                    "TypeIndex": 6,
                    "CustomShader": {
                      "SpecularColor": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "SpecularIntensity": 0.0,
                      "SpecularSharpness": 2.0,
                      "FresnelStrength": 0.0
                    },
                    "CastShadows": true
                  },
                  "Bag": {
                    "Order": 0
                  },
                  "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
                  "LuaScriptState": "{\"ml\":{\"85b86b\":{\"lock\":false,\"pos\":{\"x\":17.744,\"y\":1.536,\"z\":-6.0792},\"rot\":{\"x\":0.0109,\"y\":180.0029,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "85b86b",
                      "Name": "Deck",
                      "Transform": {
                        "posX": 17.744,
                        "posY": 1.5259645,
                        "posZ": -6.07919836,
                        "rotX": 0.0108913546,
                        "rotY": 180.002869,
                        "rotZ": 0.0049488,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Deck Acte (v. I)",
                      "Description": "Le Néant Assoiffé",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": false,
                      "SidewaysCard": false,
                      "DeckIDs": [
                        113400,
                        113300,
                        113100
                      ],
                      "CustomDeck": {
                        "1134": {
                          "FaceURL": "https://i.ibb.co/VWYQG0ty/1727e651f19d.jpg",
                          "BackURL": "https://i.ibb.co/nqcGJp8Z/b7c976dbbab9.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        },
                        "1133": {
                          "FaceURL": "https://i.ibb.co/67sfWzNV/3c4dae20bd35.jpg",
                          "BackURL": "https://i.ibb.co/x8SdPH9z/e5c19cecc51c.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        },
                        "1131": {
                          "FaceURL": "https://i.ibb.co/xS9hYRM4/3b659a445c9b.jpg",
                          "BackURL": "https://i.ibb.co/vCjGNNKh/bb31a1339ed0.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": "",
                      "ContainedObjects": [
                        {
                          "GUID": "e000a0",
                          "Name": "Card",
                          "Transform": {
                            "posX": -28.5000019,
                            "posY": 1.78360438,
                            "posZ": 15.9999456,
                            "rotX": 4.873006E-06,
                            "rotY": 180.002518,
                            "rotZ": -2.91110555E-05,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "La Bénédiction des Abysses",
                          "Description": "Acte 3",
                          "GMNotes": "{\"id\":\"00d7c680-2881-4e7a-b3cf-40fb13604a6f\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"00d7c680-2881-4e7a-b3cf-40fb13604a6f\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 113400,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1134": {
                              "FaceURL": "https://i.ibb.co/VWYQG0ty/1727e651f19d.jpg",
                              "BackURL": "https://i.ibb.co/nqcGJp8Z/b7c976dbbab9.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e0009f",
                          "Name": "Card",
                          "Transform": {
                            "posX": -28.5,
                            "posY": 1.82939577,
                            "posZ": 16.0,
                            "rotX": -0.0001389699,
                            "rotY": 179.999969,
                            "rotZ": -0.000391707552,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "Traduction Difficile",
                          "Description": "Acte 2",
                          "GMNotes": "{\"id\":\"c2b3df55-9eb1-4c85-8c76-b21059e25f96\",\"type\":\"Act\",\"class\":\"Mythos\",\"clueThresholdPerInvestigator\":4,\"TtsZoopGuid\":\"c2b3df55-9eb1-4c85-8c76-b21059e25f96\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 113300,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1133": {
                              "FaceURL": "https://i.ibb.co/67sfWzNV/3c4dae20bd35.jpg",
                              "BackURL": "https://i.ibb.co/x8SdPH9z/e5c19cecc51c.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e0009d",
                          "Name": "Card",
                          "Transform": {
                            "posX": -28.5,
                            "posY": 1.86330652,
                            "posZ": 16.0,
                            "rotX": 0.000135707145,
                            "rotY": 180.000153,
                            "rotZ": -8.2595674E-05,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "Austère et Silencieux (v. I)",
                          "Description": "Acte 1",
                          "GMNotes": "{\"id\":\"ebb51a13-95a0-40f6-82c1-9301a01d079b\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"ebb51a13-95a0-40f6-82c1-9301a01d079b\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 113100,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1131": {
                              "FaceURL": "https://i.ibb.co/xS9hYRM4/3b659a445c9b.jpg",
                              "BackURL": "https://i.ibb.co/vCjGNNKh/bb31a1339ed0.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "GUID": "3b532c",
                  "Name": "Custom_Model_Bag",
                  "Transform": {
                    "posX": -25.5012016,
                    "posY": 1.84000063,
                    "posZ": 10.5004969,
                    "rotX": -5.14642261E-06,
                    "rotY": 179.971542,
                    "rotZ": 1.33996664E-07,
                    "scaleX": 0.7,
                    "scaleY": 0.7,
                    "scaleZ": 0.7
                  },
                  "Nickname": "Théâtre Désaffecté",
                  "Description": "Place au hasard le lieu demandé",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.614982545,
                    "g": 0.0,
                    "b": 0.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "CustomMesh": {
                    "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/1988932521659263742/3D9601958158C843CD25C560E13609A8936EA47B/",
                    "NormalURL": "",
                    "ColliderURL": "",
                    "Convex": true,
                    "MaterialIndex": 3,
                    "TypeIndex": 6,
                    "CustomShader": {
                      "SpecularColor": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "SpecularIntensity": 0.0,
                      "SpecularSharpness": 2.0,
                      "FresnelStrength": 0.0
                    },
                    "CastShadows": true
                  },
                  "Bag": {
                    "Order": 0
                  },
                  "LuaScript": "-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
                  "LuaScriptState": "{\"ml\":{\"e00095\":{\"lock\":false,\"pos\":{\"x\":3,\"y\":1.5203,\"z\":19.5},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00096\":{\"lock\":false,\"pos\":{\"x\":-20.9999,\"y\":1.7836,\"z\":30.0001},\"rot\":{\"x\":0,\"y\":180.0003,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "e00095",
                      "Name": "Card",
                      "Transform": {
                        "posX": 2.99999928,
                        "posY": 1.51033235,
                        "posZ": 19.5000019,
                        "rotX": 0.0108914617,
                        "rotY": 180.0,
                        "rotZ": 180.004959,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Théâtre du Capitol",
                      "Description": "New York.",
                      "GMNotes": "{\"id\":\"02f20258-652f-4dc5-91f6-78c95858aed3\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>New York.\",\"locationFront\":{\"icons\":\"Star\",\"connections\":\"Diamond|Square|Moon\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Star\",\"connections\":\"Diamond|Square|Moon\"},\"TtsZoopGuid\":\"02f20258-652f-4dc5-91f6-78c95858aed3\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Location",
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 112500,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1125": {
                          "FaceURL": "https://i.ibb.co/DDCSkNn3/aa40b39ed89d.jpg",
                          "BackURL": "https://i.ibb.co/v66Dvj5P/35f3801e9b08.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00096",
                      "Name": "Card",
                      "Transform": {
                        "posX": -20.9998722,
                        "posY": 1.78360379,
                        "posZ": 30.000124,
                        "rotX": -5.03242836E-06,
                        "rotY": 180.000244,
                        "rotZ": 180.0,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Salle de Concert Carnegie",
                      "Description": "New York.",
                      "GMNotes": "{\"id\":\"3773287c-8ed7-4d31-a64b-8e65da80b889\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>New York.\",\"locationFront\":{\"icons\":\"Star\",\"connections\":\"Diamond|Square|Moon\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Star\",\"connections\":\"Diamond|Square|Moon\"},\"TtsZoopGuid\":\"3773287c-8ed7-4d31-a64b-8e65da80b889\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Location",
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 112600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1126": {
                          "FaceURL": "https://i.ibb.co/KjSgKFtm/12282d961554.jpg",
                          "BackURL": "https://i.ibb.co/ZR8Myyjk/b91df87c917c.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                },
                {
                  "GUID": "3fd8d3",
                  "Name": "Deck",
                  "Transform": {
                    "posX": 46.9999962,
                    "posY": 1.174236,
                    "posZ": 10.000001,
                    "rotX": -5.00685564E-06,
                    "rotY": 179.999908,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Deck Rencontre",
                  "Description": "Le Néant Assoiffé",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": false,
                  "SidewaysCard": false,
                  "DeckIDs": [
                    111200,
                    111100,
                    111000,
                    110900,
                    110800,
                    110700,
                    110600,
                    110500,
                    110400,
                    110300,
                    110200,
                    110100,
                    110000,
                    109900,
                    109800,
                    109700,
                    109600,
                    111400,
                    100100,
                    100000,
                    100600,
                    100200,
                    100800,
                    100700,
                    101000,
                    100900,
                    101100,
                    101200,
                    101300,
                    101500,
                    101400,
                    101600,
                    101700,
                    100300,
                    100400,
                    100500
                  ],
                  "CustomDeck": {
                    "1112": {
                      "FaceURL": "https://i.ibb.co/Y4ZMxXMm/e237a8063443.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1111": {
                      "FaceURL": "https://i.ibb.co/V0mDBcm6/b4ff5ac70783.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1110": {
                      "FaceURL": "https://i.ibb.co/qtr7Zr1/63f048a29e56.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1109": {
                      "FaceURL": "https://i.ibb.co/1frKndZM/3a726a6e4ac9.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1108": {
                      "FaceURL": "https://i.ibb.co/twWh1Z7X/9364c2fc8428.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1107": {
                      "FaceURL": "https://i.ibb.co/1YsS87qb/5df02818422c.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1106": {
                      "FaceURL": "https://i.ibb.co/6RC4dkTQ/b491da45188f.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1105": {
                      "FaceURL": "https://i.ibb.co/LmvvPZY/18e9495d1a49.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1104": {
                      "FaceURL": "https://i.ibb.co/0yg8Kd0T/c5e8ade8fa4d.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1103": {
                      "FaceURL": "https://i.ibb.co/zh0R8N3j/d62d05fe1613.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1102": {
                      "FaceURL": "https://i.ibb.co/rX6zxMd/b14bc453a62e.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1101": {
                      "FaceURL": "https://i.ibb.co/Xf8JfG9J/80b389acbf54.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1100": {
                      "FaceURL": "https://i.ibb.co/nssrgzZH/c5c676240a8f.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1099": {
                      "FaceURL": "https://i.ibb.co/0RDy9k2R/ee6df25674b3.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1098": {
                      "FaceURL": "https://i.ibb.co/rfyggRBD/469bd81c57bd.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1097": {
                      "FaceURL": "https://i.ibb.co/PvYy5LdN/0d36b439aee2.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1096": {
                      "FaceURL": "https://i.ibb.co/6RD66mT8/f1aad00b63a2.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1114": {
                      "FaceURL": "https://i.ibb.co/YF6Jw4cn/5998cdbe3f0b.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1001": {
                      "FaceURL": "https://i.ibb.co/VY16TSfm/1ffb0b7af581.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1000": {
                      "FaceURL": "https://i.ibb.co/FkLGvLQ6/1853020f2ea5.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1006": {
                      "FaceURL": "https://i.ibb.co/wFY7rdk0/ccb3bd802f0c.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1002": {
                      "FaceURL": "https://i.ibb.co/Xkj6bXtK/1149eaf7722e.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1008": {
                      "FaceURL": "https://i.ibb.co/21JqFSXc/94437f4a1a6a.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1007": {
                      "FaceURL": "https://i.ibb.co/9Hq4vLzZ/1546bda9a53d.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1010": {
                      "FaceURL": "https://i.ibb.co/wFDqS5z5/55395d324b38.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1009": {
                      "FaceURL": "https://i.ibb.co/s9BVLvKk/f408c977806f.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1011": {
                      "FaceURL": "https://i.ibb.co/tTvXv81S/64582f148e3f.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1012": {
                      "FaceURL": "https://i.ibb.co/qb3pCbh/6eefa724116e.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1013": {
                      "FaceURL": "https://i.ibb.co/N2ZmjDy0/2689d0439351.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1015": {
                      "FaceURL": "https://i.ibb.co/CL2Y05Y/a1eaa15b117a.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1014": {
                      "FaceURL": "https://i.ibb.co/Ld6Xgw1b/292d138ef7e6.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1016": {
                      "FaceURL": "https://i.ibb.co/xt59n3k9/60ae774e11d9.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1017": {
                      "FaceURL": "https://i.ibb.co/Q7p0jCjj/f5ee96258e69.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1003": {
                      "FaceURL": "https://i.ibb.co/VWPzKhRw/cb859be0efd3.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1004": {
                      "FaceURL": "https://i.ibb.co/hJkHy0Rs/b235665f1dea.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1005": {
                      "FaceURL": "https://i.ibb.co/spq8HMfB/09a701f665d3.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "e00086",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.50991535,
                        "posY": 1.52338231,
                        "posZ": 27.98755,
                        "rotX": 0.00580347236,
                        "rotY": 179.990524,
                        "rotZ": 0.0444370061,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Frénétique",
                      "Description": "Pouvoir.",
                      "GMNotes": "{\"id\":\"45642643-f862-427f-8219-0d56f35268c6\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Pouvoir.\",\"TtsZoopGuid\":\"45642643-f862-427f-8219-0d56f35268c6\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 111200,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1112": {
                          "FaceURL": "https://i.ibb.co/Y4ZMxXMm/e237a8063443.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00085",
                      "Name": "Card",
                      "Transform": {
                        "posX": -7.00021744,
                        "posY": 1.54916775,
                        "posZ": 28.0000153,
                        "rotX": 359.792145,
                        "rotY": 179.992615,
                        "rotZ": 359.3962,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Frénétique",
                      "Description": "Pouvoir.",
                      "GMNotes": "{\"id\":\"b894d390-2e2e-49e8-affc-d727865b7eaf\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Pouvoir.\",\"TtsZoopGuid\":\"b894d390-2e2e-49e8-affc-d727865b7eaf\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 111100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1111": {
                          "FaceURL": "https://i.ibb.co/V0mDBcm6/b4ff5ac70783.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00084",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.500001,
                        "posY": 1.58726656,
                        "posZ": 27.9999981,
                        "rotX": 0.0132888043,
                        "rotY": 179.991669,
                        "rotZ": 0.00213014381,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Frénétique",
                      "Description": "Pouvoir.",
                      "GMNotes": "{\"id\":\"28d77835-ee2c-4d96-b447-f94c94f27ba1\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Pouvoir.\",\"TtsZoopGuid\":\"28d77835-ee2c-4d96-b447-f94c94f27ba1\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 111000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1110": {
                          "FaceURL": "https://i.ibb.co/qtr7Zr1/63f048a29e56.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00083",
                      "Name": "Card",
                      "Transform": {
                        "posX": -7.000005,
                        "posY": 1.596928,
                        "posZ": 27.9999981,
                        "rotX": 0.0116916075,
                        "rotY": 179.991165,
                        "rotZ": 0.00126297679,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Ulla... Ulla...",
                      "Description": "Terreur.",
                      "GMNotes": "{\"id\":\"930978e6-aa04-4ea5-93a1-3e46fd492f0c\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur.\",\"TtsZoopGuid\":\"930978e6-aa04-4ea5-93a1-3e46fd492f0c\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 110900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1109": {
                          "FaceURL": "https://i.ibb.co/1frKndZM/3a726a6e4ac9.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00082",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.500005,
                        "posY": 1.60643589,
                        "posZ": 27.4999962,
                        "rotX": 0.0128267268,
                        "rotY": 179.991,
                        "rotZ": 0.00144448539,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Ulla... Ulla...",
                      "Description": "Terreur.",
                      "GMNotes": "{\"id\":\"31f08f69-fb9a-46a8-b6d2-0d04984dc668\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur.\",\"TtsZoopGuid\":\"31f08f69-fb9a-46a8-b6d2-0d04984dc668\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 110800,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1108": {
                          "FaceURL": "https://i.ibb.co/twWh1Z7X/9364c2fc8428.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00081",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.50000143,
                        "posY": 1.61615753,
                        "posZ": 27.9999981,
                        "rotX": 0.0130912839,
                        "rotY": 179.990891,
                        "rotZ": 0.0023767422,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Ulla... Ulla...",
                      "Description": "Terreur.",
                      "GMNotes": "{\"id\":\"a853df8c-3943-4a91-8b0c-5b8250d16f5f\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur.\",\"TtsZoopGuid\":\"a853df8c-3943-4a91-8b0c-5b8250d16f5f\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 110700,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1107": {
                          "FaceURL": "https://i.ibb.co/1YsS87qb/5df02818422c.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00080",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.50000143,
                        "posY": 1.62578845,
                        "posZ": 27.9999981,
                        "rotX": 0.0130359018,
                        "rotY": 179.991867,
                        "rotZ": 0.00244903145,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Vampire Stellaire",
                      "Description": "Monstre. Extradimensionnel. Élite.",
                      "GMNotes": "{\"id\":\"4b2ed3b2-249b-47ab-ade8-20679e39c650\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Extradimensionnel. �lite.\",\"TtsZoopGuid\":\"4b2ed3b2-249b-47ab-ade8-20679e39c650\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 110600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1106": {
                          "FaceURL": "https://i.ibb.co/6RC4dkTQ/b491da45188f.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0007f",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.50000143,
                        "posY": 1.6354202,
                        "posZ": 27.9999981,
                        "rotX": 0.0129784476,
                        "rotY": 179.991791,
                        "rotZ": 0.002519405,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Vampire Stellaire",
                      "Description": "Monstre. Extradimensionnel. Élite.",
                      "GMNotes": "{\"id\":\"879fbcb8-d91c-4a9d-897b-770394ff69f7\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Extradimensionnel. �lite.\",\"TtsZoopGuid\":\"879fbcb8-d91c-4a9d-897b-770394ff69f7\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 110500,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1105": {
                          "FaceURL": "https://i.ibb.co/LmvvPZY/18e9495d1a49.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0007e",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.500002,
                        "posY": 1.64505041,
                        "posZ": 27.9999981,
                        "rotX": 0.01292425,
                        "rotY": 179.991562,
                        "rotZ": 0.00258749258,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Chien de Tindalos",
                      "Description": "Monstre. Extradimensionnel.",
                      "GMNotes": "{\"id\":\"aa053315-6b91-4aa7-8cba-66778c12974d\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8.5>Monstre. Extradimensionnel.\",\"TtsZoopGuid\":\"aa053315-6b91-4aa7-8cba-66778c12974d\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 110400,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1104": {
                          "FaceURL": "https://i.ibb.co/0yg8Kd0T/c5e8ade8fa4d.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0007d",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.500002,
                        "posY": 1.6547575,
                        "posZ": 28.5,
                        "rotX": 0.01180006,
                        "rotY": 179.9915,
                        "rotZ": 0.00310290977,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Chien de Tindalos",
                      "Description": "Monstre. Extradimensionnel.",
                      "GMNotes": "{\"id\":\"6fde8845-c70f-4c75-b8e1-a65aa8df929e\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8.5>Monstre. Extradimensionnel.\",\"TtsZoopGuid\":\"6fde8845-c70f-4c75-b8e1-a65aa8df929e\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 110300,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1103": {
                          "FaceURL": "https://i.ibb.co/zh0R8N3j/d62d05fe1613.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0007c",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.500002,
                        "posY": 1.6643126,
                        "posZ": 27.9999981,
                        "rotX": 0.0128201563,
                        "rotY": 179.991165,
                        "rotZ": 0.00271890219,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Chien de Tindalos",
                      "Description": "Monstre. Extradimensionnel.",
                      "GMNotes": "{\"id\":\"2c4e1f53-2556-4232-bf11-f09a83e37603\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8.5>Monstre. Extradimensionnel.\",\"TtsZoopGuid\":\"2c4e1f53-2556-4232-bf11-f09a83e37603\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 110200,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1102": {
                          "FaceURL": "https://i.ibb.co/rX6zxMd/b14bc453a62e.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0007b",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.500002,
                        "posY": 1.67393434,
                        "posZ": 27.9999981,
                        "rotX": 0.0127734374,
                        "rotY": 179.991623,
                        "rotZ": 0.002780944,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Chien de Tindalos",
                      "Description": "Monstre. Extradimensionnel.",
                      "GMNotes": "{\"id\":\"956377b5-6ff0-4629-ac31-f562d04369b2\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8.5>Monstre. Extradimensionnel.\",\"TtsZoopGuid\":\"956377b5-6ff0-4629-ac31-f562d04369b2\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 110100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1101": {
                          "FaceURL": "https://i.ibb.co/Xf8JfG9J/80b389acbf54.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0007a",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.500005,
                        "posY": 1.68348074,
                        "posZ": 27.4999962,
                        "rotX": 0.0121250423,
                        "rotY": 179.9912,
                        "rotZ": 0.002733091,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Les Affres de la Mort",
                      "Description": "Manigance. Désespéré.",
                      "GMNotes": "{\"id\":\"40f27533-8851-47eb-90e2-c2c6ca7601b8\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Manigance. D�sesp�r�.\",\"TtsZoopGuid\":\"40f27533-8851-47eb-90e2-c2c6ca7601b8\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 110000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1100": {
                          "FaceURL": "https://i.ibb.co/nssrgzZH/c5c676240a8f.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00079",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.500003,
                        "posY": 1.6932,
                        "posZ": 27.9999981,
                        "rotX": 0.01267725,
                        "rotY": 179.991684,
                        "rotZ": 0.002902693,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Les Affres de la Mort",
                      "Description": "Manigance. Désespéré.",
                      "GMNotes": "{\"id\":\"0bad7509-3c8d-4549-8db2-e56e89704103\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Manigance. D�sesp�r�.\",\"TtsZoopGuid\":\"0bad7509-3c8d-4549-8db2-e56e89704103\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 109900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1099": {
                          "FaceURL": "https://i.ibb.co/0RDy9k2R/ee6df25674b3.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00078",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.50000238,
                        "posY": 1.70282531,
                        "posZ": 27.9999981,
                        "rotX": 0.01263219,
                        "rotY": 179.991714,
                        "rotZ": 0.002960223,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Les Affres de la Mort",
                      "Description": "Manigance. Désespéré.",
                      "GMNotes": "{\"id\":\"8beed189-d69a-4ff7-a1b4-c98feeadcf7c\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Manigance. D�sesp�r�.\",\"TtsZoopGuid\":\"8beed189-d69a-4ff7-a1b4-c98feeadcf7c\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 109800,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1098": {
                          "FaceURL": "https://i.ibb.co/rfyggRBD/469bd81c57bd.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00077",
                      "Name": "Card",
                      "Transform": {
                        "posX": -7.000006,
                        "posY": 1.71248734,
                        "posZ": 27.9999981,
                        "rotX": 0.01146334,
                        "rotY": 179.991745,
                        "rotZ": 0.00242566247,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Soif de Sang",
                      "Description": "Pouvoir.",
                      "GMNotes": "{\"id\":\"b38dd78c-271d-4aa1-a1f8-09a57d91fe6b\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Pouvoir.\",\"TtsZoopGuid\":\"b38dd78c-271d-4aa1-a1f8-09a57d91fe6b\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 109700,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1097": {
                          "FaceURL": "https://i.ibb.co/PvYy5LdN/0d36b439aee2.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00076",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.50000238,
                        "posY": 1.72208428,
                        "posZ": 27.9999981,
                        "rotX": 0.0125411209,
                        "rotY": 179.991531,
                        "rotZ": 0.00307185925,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Soif de Sang",
                      "Description": "Pouvoir.",
                      "GMNotes": "{\"id\":\"8a90d1d4-a57a-4e5a-be5f-2e8ea8c01188\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Pouvoir.\",\"TtsZoopGuid\":\"8a90d1d4-a57a-4e5a-be5f-2e8ea8c01188\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 109600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1096": {
                          "FaceURL": "https://i.ibb.co/6RD66mT8/f1aad00b63a2.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00088",
                      "Name": "Card",
                      "Transform": {
                        "posX": -6.500003,
                        "posY": 1.73171151,
                        "posZ": 27.9999981,
                        "rotX": 0.0124989059,
                        "rotY": 179.990845,
                        "rotZ": 0.00312565221,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Soif de Sang",
                      "Description": "Pouvoir.",
                      "GMNotes": "{\"id\":\"562ef3f1-8630-4623-8ff3-348411c42843\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Pouvoir.\",\"TtsZoopGuid\":\"562ef3f1-8630-4623-8ff3-348411c42843\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 111400,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1114": {
                          "FaceURL": "https://i.ibb.co/YF6Jw4cn/5998cdbe3f0b.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00002",
                      "Name": "Card",
                      "Transform": {
                        "posX": -13.0352421,
                        "posY": 1.68722749,
                        "posZ": 16.9970074,
                        "rotX": 0.01615924,
                        "rotY": 180.0155,
                        "rotZ": 7.7655673,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Corps Calcinés",
                      "Description": "Terreur.",
                      "GMNotes": "{\"id\":\"070c286c-c8dc-4690-adb2-4ecf07ab3878\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur.\",\"TtsZoopGuid\":\"070c286c-c8dc-4690-adb2-4ecf07ab3878\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1001": {
                          "FaceURL": "https://i.ibb.co/VY16TSfm/1ffb0b7af581.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00001",
                      "Name": "Card",
                      "Transform": {
                        "posX": -12.423461,
                        "posY": 1.6677227,
                        "posZ": 16.9967613,
                        "rotX": 0.0128187109,
                        "rotY": 180.029633,
                        "rotZ": 7.710931,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Corps Calcinés",
                      "Description": "Terreur.",
                      "GMNotes": "{\"id\":\"da24f4d5-1124-4a6a-8dad-cec326fe1dd0\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur.\",\"TtsZoopGuid\":\"da24f4d5-1124-4a6a-8dad-cec326fe1dd0\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1000": {
                          "FaceURL": "https://i.ibb.co/FkLGvLQ6/1853020f2ea5.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00007",
                      "Name": "Card",
                      "Transform": {
                        "posX": -14.2611437,
                        "posY": 1.74001765,
                        "posZ": 16.9973965,
                        "rotX": 0.0194458235,
                        "rotY": 180.03714,
                        "rotZ": 7.78147745,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Manutention",
                      "Description": "Monstre. Martien. Véhicule.",
                      "GMNotes": "{\"id\":\"a4e6c295-e8b9-4a3b-be6b-537325a98819\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule.\",\"TtsZoopGuid\":\"a4e6c295-e8b9-4a3b-be6b-537325a98819\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1006": {
                          "FaceURL": "https://i.ibb.co/wFY7rdk0/ccb3bd802f0c.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00003",
                      "Name": "Card",
                      "Transform": {
                        "posX": -13.6469126,
                        "posY": 1.712217,
                        "posZ": 16.997036,
                        "rotX": 0.01602593,
                        "rotY": 180.045456,
                        "rotZ": 7.76556253,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Corps Calcinés",
                      "Description": "Terreur.",
                      "GMNotes": "{\"id\":\"5d34f38f-977c-4438-855e-4f12866049c6\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur.\",\"TtsZoopGuid\":\"5d34f38f-977c-4438-855e-4f12866049c6\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100200,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1002": {
                          "FaceURL": "https://i.ibb.co/Xkj6bXtK/1149eaf7722e.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00009",
                      "Name": "Card",
                      "Transform": {
                        "posX": -15.4885769,
                        "posY": 1.82699776,
                        "posZ": 16.9983788,
                        "rotX": 0.0238457154,
                        "rotY": 180.047653,
                        "rotZ": 7.59634542,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Technicien Martien",
                      "Description": "Monstre. Martien.",
                      "GMNotes": "{\"id\":\"3843ba4e-430c-48c5-8386-bad9e231cce5\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien.\",\"TtsZoopGuid\":\"3843ba4e-430c-48c5-8386-bad9e231cce5\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100800,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1008": {
                          "FaceURL": "https://i.ibb.co/21JqFSXc/94437f4a1a6a.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00008",
                      "Name": "Card",
                      "Transform": {
                        "posX": -14.8736181,
                        "posY": 1.786067,
                        "posZ": 16.997776,
                        "rotX": 0.0199360345,
                        "rotY": 180.055389,
                        "rotZ": 7.7814765,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Manutention",
                      "Description": "Monstre. Martien. Véhicule.",
                      "GMNotes": "{\"id\":\"4f0e5795-bf80-4658-b4c0-1fc4893f5a6a\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule.\",\"TtsZoopGuid\":\"4f0e5795-bf80-4658-b4c0-1fc4893f5a6a\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100700,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1007": {
                          "FaceURL": "https://i.ibb.co/9Hq4vLzZ/1546bda9a53d.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000b",
                      "Name": "Card",
                      "Transform": {
                        "posX": -16.7096634,
                        "posY": 1.877186,
                        "posZ": 16.9994335,
                        "rotX": 0.0291825831,
                        "rotY": 180.042038,
                        "rotZ": 7.041579,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Technicien Martien",
                      "Description": "Monstre. Martien.",
                      "GMNotes": "{\"id\":\"4cf03802-40c6-4601-994d-4fde1029a976\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien.\",\"TtsZoopGuid\":\"4cf03802-40c6-4601-994d-4fde1029a976\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1010": {
                          "FaceURL": "https://i.ibb.co/wFDqS5z5/55395d324b38.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000a",
                      "Name": "Card",
                      "Transform": {
                        "posX": -16.0993061,
                        "posY": 1.857675,
                        "posZ": 16.9989319,
                        "rotX": 0.0238452144,
                        "rotY": 180.047974,
                        "rotZ": 7.596347,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Technicien Martien",
                      "Description": "Monstre. Martien.",
                      "GMNotes": "{\"id\":\"1b5ed978-434d-4a3f-8828-63058188cf77\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien.\",\"TtsZoopGuid\":\"1b5ed978-434d-4a3f-8828-63058188cf77\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1009": {
                          "FaceURL": "https://i.ibb.co/s9BVLvKk/f408c977806f.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000c",
                      "Name": "Card",
                      "Transform": {
                        "posX": -17.32312,
                        "posY": 1.88639426,
                        "posZ": 16.9998264,
                        "rotX": 0.0291832238,
                        "rotY": 180.042023,
                        "rotZ": 7.04157925,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Technicien Martien",
                      "Description": "Monstre. Martien.",
                      "GMNotes": "{\"id\":\"b2297402-cb81-4673-ba84-c8883bd92152\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien.\",\"TtsZoopGuid\":\"b2297402-cb81-4673-ba84-c8883bd92152\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1011": {
                          "FaceURL": "https://i.ibb.co/tTvXv81S/64582f148e3f.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000d",
                      "Name": "Card",
                      "Transform": {
                        "posX": -17.9330025,
                        "posY": 1.89204621,
                        "posZ": 17.000433,
                        "rotX": 0.0368621647,
                        "rotY": 180.029816,
                        "rotZ": 5.97499657,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Chercheur",
                      "Description": "Appareil. Manigance.",
                      "GMNotes": "{\"id\":\"cacced9c-b70e-4152-b4af-e2a154f3a545\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Appareil. Manigance.\",\"TtsZoopGuid\":\"cacced9c-b70e-4152-b4af-e2a154f3a545\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101200,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1012": {
                          "FaceURL": "https://i.ibb.co/qb3pCbh/6eefa724116e.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000e",
                      "Name": "Card",
                      "Transform": {
                        "posX": -18.5391178,
                        "posY": 1.889417,
                        "posZ": 17.00034,
                        "rotX": 0.0334006175,
                        "rotY": 180.025665,
                        "rotZ": 5.50415754,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Chercheur",
                      "Description": "Appareil. Manigance.",
                      "GMNotes": "{\"id\":\"af93e289-6fa5-43a6-a059-2164b0c89edc\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8.5>Appareil. Manigance.\",\"TtsZoopGuid\":\"af93e289-6fa5-43a6-a059-2164b0c89edc\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101300,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1013": {
                          "FaceURL": "https://i.ibb.co/N2ZmjDy0/2689d0439351.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00010",
                      "Name": "Card",
                      "Transform": {
                        "posX": -19.7654476,
                        "posY": 1.88246,
                        "posZ": 17.0011978,
                        "rotX": 0.03817355,
                        "rotY": 180.037369,
                        "rotZ": 5.030809,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Ardent",
                      "Description": "Arme. Feu.",
                      "GMNotes": "{\"id\":\"a760e578-b624-478b-a135-a78fd92631f6\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Arme. Feu.\",\"TtsZoopGuid\":\"a760e578-b624-478b-a135-a78fd92631f6\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101500,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1015": {
                          "FaceURL": "https://i.ibb.co/CL2Y05Y/a1eaa15b117a.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000f",
                      "Name": "Card",
                      "Transform": {
                        "posX": -19.15128,
                        "posY": 1.88124156,
                        "posZ": 17.0007954,
                        "rotX": 0.05021061,
                        "rotY": 180.038818,
                        "rotZ": 5.04763746,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Chercheur",
                      "Description": "Appareil. Manigance.",
                      "GMNotes": "{\"id\":\"336a8f1f-abb6-4702-88da-6bb5cba39e1a\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Appareil. Manigance.\",\"TtsZoopGuid\":\"336a8f1f-abb6-4702-88da-6bb5cba39e1a\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101400,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1014": {
                          "FaceURL": "https://i.ibb.co/Ld6Xgw1b/292d138ef7e6.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00011",
                      "Name": "Card",
                      "Transform": {
                        "posX": -20.3797436,
                        "posY": 1.88313949,
                        "posZ": 17.001688,
                        "rotX": 0.03391226,
                        "rotY": 180.041962,
                        "rotZ": 4.878934,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Ardent",
                      "Description": "Arme. Feu.",
                      "GMNotes": "{\"id\":\"d3aaf2fb-1fc5-43a3-b96c-73a615c88263\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Arme. Feu.\",\"TtsZoopGuid\":\"d3aaf2fb-1fc5-43a3-b96c-73a615c88263\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1016": {
                          "FaceURL": "https://i.ibb.co/xt59n3k9/60ae774e11d9.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00012",
                      "Name": "Card",
                      "Transform": {
                        "posX": -20.9940357,
                        "posY": 1.88542736,
                        "posZ": 17.0021343,
                        "rotX": 0.03391102,
                        "rotY": 180.041977,
                        "rotZ": 4.878934,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Ardent",
                      "Description": "Arme. Feu.",
                      "GMNotes": "{\"id\":\"8233c4e5-0be0-4f3a-80e3-d6ba11a3de64\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Arme. Feu.\",\"TtsZoopGuid\":\"8233c4e5-0be0-4f3a-80e3-d6ba11a3de64\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101700,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1017": {
                          "FaceURL": "https://i.ibb.co/Q7p0jCjj/f5ee96258e69.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00004",
                      "Name": "Card",
                      "Transform": {
                        "posX": -28.0000248,
                        "posY": 1.78360534,
                        "posZ": 16.4999886,
                        "rotX": -8.133078E-06,
                        "rotY": 180.017761,
                        "rotZ": 2.28152712E-05,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Guerre",
                      "Description": "Monstre. Martien. Véhicule. Élite.",
                      "GMNotes": "{\"id\":\"a19480b7-1bc0-4f8d-9fb3-bf2bdbe40604\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule. �lite.\",\"TtsZoopGuid\":\"a19480b7-1bc0-4f8d-9fb3-bf2bdbe40604\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100300,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1003": {
                          "FaceURL": "https://i.ibb.co/VWPzKhRw/cb859be0efd3.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00005",
                      "Name": "Card",
                      "Transform": {
                        "posX": -30.0007534,
                        "posY": 1.79847324,
                        "posZ": 16.5000362,
                        "rotX": -1.84422588E-05,
                        "rotY": 180.017532,
                        "rotZ": 359.221069,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Guerre",
                      "Description": "Monstre. Martien. Véhicule. Élite.",
                      "GMNotes": "{\"id\":\"88c4d6a1-2e2a-4332-a487-defdd007be06\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule. �lite.\",\"TtsZoopGuid\":\"88c4d6a1-2e2a-4332-a487-defdd007be06\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100400,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1004": {
                          "FaceURL": "https://i.ibb.co/hJkHy0Rs/b235665f1dea.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00006",
                      "Name": "Card",
                      "Transform": {
                        "posX": -32.4999847,
                        "posY": 1.78360486,
                        "posZ": 16.4999981,
                        "rotX": -5.06190327E-06,
                        "rotY": 180.016525,
                        "rotZ": -2.74854841E-07,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Guerre",
                      "Description": "Monstre. Martien. Véhicule. Élite.",
                      "GMNotes": "{\"id\":\"8bbeeb7f-b856-4200-bfbd-3266bfc46011\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule. �lite.\",\"TtsZoopGuid\":\"8bbeeb7f-b856-4200-bfbd-3266bfc46011\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100500,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1005": {
                          "FaceURL": "https://i.ibb.co/spq8HMfB/09a701f665d3.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                },
                {
                  "GUID": "51f9ee",
                  "Name": "Custom_Model_Bag",
                  "Transform": {
                    "posX": -30.0015049,
                    "posY": 1.84000063,
                    "posZ": 10.5008955,
                    "rotX": -5.041342E-06,
                    "rotY": 179.971512,
                    "rotZ": -1.25413948E-07,
                    "scaleX": 0.7,
                    "scaleY": 0.7,
                    "scaleZ": 0.7
                  },
                  "Nickname": "Place Dégagée",
                  "Description": "Place au hasard le lieu demandé",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.614982545,
                    "g": 0.0,
                    "b": 0.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "CustomMesh": {
                    "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/1936014258275887703/A3B2CB76F0EB526F71A6076E20E5E5CF51C9A02A/",
                    "NormalURL": "",
                    "ColliderURL": "",
                    "Convex": true,
                    "MaterialIndex": 3,
                    "TypeIndex": 6,
                    "CustomShader": {
                      "SpecularColor": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "SpecularIntensity": 0.0,
                      "SpecularSharpness": 2.0,
                      "FresnelStrength": 0.0
                    },
                    "CastShadows": true
                  },
                  "Bag": {
                    "Order": 0
                  },
                  "LuaScript": "-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
                  "LuaScriptState": "{\"ml\":{\"e00093\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.517,\"z\":1.5},\"rot\":{\"x\":0.0109,\"y\":180.0002,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00094\":{\"lock\":false,\"pos\":{\"x\":-27,\"y\":1.7836,\"z\":30},\"rot\":{\"x\":0,\"y\":180.0005,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "e00093",
                      "Name": "Card",
                      "Transform": {
                        "posX": 2.49999881,
                        "posY": 1.50695384,
                        "posZ": 1.49999869,
                        "rotX": 0.0108915009,
                        "rotY": 180.000214,
                        "rotZ": 180.004959,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Madison Square",
                      "Description": "New York.",
                      "GMNotes": "{\"id\":\"2c16fdb9-6341-4bd0-99bc-c8dac9baaa47\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>New York.\",\"locationFront\":{\"icons\":\"Cross\",\"connections\":\"Square|Moon|Triangle|T\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Cross\",\"connections\":\"Square|Moon|Triangle|T\"},\"TtsZoopGuid\":\"2c16fdb9-6341-4bd0-99bc-c8dac9baaa47\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Location",
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 112300,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1123": {
                          "FaceURL": "https://i.ibb.co/kgYmBbDS/327c766350cf.jpg",
                          "BackURL": "https://i.ibb.co/LzHcxbpT/e2231ca3549c.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00094",
                      "Name": "Card",
                      "Transform": {
                        "posX": -26.9999771,
                        "posY": 1.78360379,
                        "posZ": 30.0000229,
                        "rotX": -4.947367E-06,
                        "rotY": 180.00061,
                        "rotZ": 180.0,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Washington Square",
                      "Description": "New York.",
                      "GMNotes": "{\"id\":\"a5932af3-a415-49e1-9aa7-590290a4cc4d\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>New York.\",\"locationFront\":{\"icons\":\"Cross\",\"connections\":\"Square|Moon|Triangle|T\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Cross\",\"connections\":\"Square|Moon|Triangle|T\"},\"TtsZoopGuid\":\"a5932af3-a415-49e1-9aa7-590290a4cc4d\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Location",
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 112400,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1124": {
                          "FaceURL": "https://i.ibb.co/G4jPDwSL/39e02490c136.jpg",
                          "BackURL": "https://i.ibb.co/LzHcxbpT/e2231ca3549c.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                },
                {
                  "GUID": "64b76f",
                  "Name": "Custom_Model_Bag",
                  "Transform": {
                    "posX": -25.500803,
                    "posY": 1.840001,
                    "posZ": 4.49909544,
                    "rotX": -5.143255E-06,
                    "rotY": 180.0311,
                    "rotZ": 2.25066032E-07,
                    "scaleX": 0.7,
                    "scaleY": 0.7,
                    "scaleZ": 0.7
                  },
                  "Nickname": "Sinon...",
                  "Description": "Places selon le guide de campagne",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "CustomMesh": {
                    "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/11926483554533175/72C9A3320E9A01991A0FF5AD22BE24A87D78259F/",
                    "NormalURL": "",
                    "ColliderURL": "",
                    "Convex": true,
                    "MaterialIndex": 3,
                    "TypeIndex": 6,
                    "CustomShader": {
                      "SpecularColor": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "SpecularIntensity": 0.0,
                      "SpecularSharpness": 2.0,
                      "FresnelStrength": 0.0
                    },
                    "CastShadows": true
                  },
                  "Bag": {
                    "Order": 0
                  },
                  "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
                  "LuaScriptState": "{\"ml\":{\"6f0752\":{\"lock\":false,\"pos\":{\"x\":17.744,\"y\":1.536,\"z\":-6.0792},\"rot\":{\"x\":0.0109,\"y\":180.0007,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "6f0752",
                      "Name": "Deck",
                      "Transform": {
                        "posX": 17.744,
                        "posY": 1.5259645,
                        "posZ": -6.07919836,
                        "rotX": 0.0108914766,
                        "rotY": 180.000732,
                        "rotZ": 0.00494838273,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Deck Acte (v. II)",
                      "Description": "Le Néant Assoiffé",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": false,
                      "SidewaysCard": false,
                      "DeckIDs": [
                        113400,
                        113300,
                        113200
                      ],
                      "CustomDeck": {
                        "1134": {
                          "FaceURL": "https://i.ibb.co/VWYQG0ty/1727e651f19d.jpg",
                          "BackURL": "https://i.ibb.co/nqcGJp8Z/b7c976dbbab9.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        },
                        "1133": {
                          "FaceURL": "https://i.ibb.co/67sfWzNV/3c4dae20bd35.jpg",
                          "BackURL": "https://i.ibb.co/x8SdPH9z/e5c19cecc51c.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        },
                        "1132": {
                          "FaceURL": "https://i.ibb.co/DTR7y7R/ceb573e57ad4.jpg",
                          "BackURL": "https://i.ibb.co/vCjGNNKh/bb31a1339ed0.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": "",
                      "ContainedObjects": [
                        {
                          "GUID": "c67b02",
                          "Name": "Card",
                          "Transform": {
                            "posX": -23.99997,
                            "posY": 1.78360236,
                            "posZ": 16.5000172,
                            "rotX": 3.27857451E-05,
                            "rotY": 180.0001,
                            "rotZ": -0.000124795741,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "La Bénédiction des Abysses",
                          "Description": "Acte 3",
                          "GMNotes": "{\"id\":\"00d7c680-2881-4e7a-b3cf-40fb13604a6f\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"00d7c680-2881-4e7a-b3cf-40fb13604a6f\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 113400,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1134": {
                              "FaceURL": "https://i.ibb.co/VWYQG0ty/1727e651f19d.jpg",
                              "BackURL": "https://i.ibb.co/nqcGJp8Z/b7c976dbbab9.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "967475",
                          "Name": "Card",
                          "Transform": {
                            "posX": -24.0,
                            "posY": 1.829385,
                            "posZ": 16.5,
                            "rotX": 0.000797882851,
                            "rotY": 180.000046,
                            "rotZ": -0.000498349254,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "Traduction Difficile",
                          "Description": "Acte 2",
                          "GMNotes": "{\"id\":\"c2b3df55-9eb1-4c85-8c76-b21059e25f96\",\"type\":\"Act\",\"class\":\"Mythos\",\"clueThresholdPerInvestigator\":4,\"TtsZoopGuid\":\"c2b3df55-9eb1-4c85-8c76-b21059e25f96\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 113300,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1133": {
                              "FaceURL": "https://i.ibb.co/67sfWzNV/3c4dae20bd35.jpg",
                              "BackURL": "https://i.ibb.co/x8SdPH9z/e5c19cecc51c.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e0009e",
                          "Name": "Card",
                          "Transform": {
                            "posX": -24.0,
                            "posY": 1.86330664,
                            "posZ": 16.5,
                            "rotX": -0.00011364594,
                            "rotY": 180.000015,
                            "rotZ": -2.39147084E-05,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "Austère et Silencieux (v. II)",
                          "Description": "Acte 1",
                          "GMNotes": "{\"id\":\"582fb9ae-ae72-47bd-805c-a3a6e31ab9d7\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"582fb9ae-ae72-47bd-805c-a3a6e31ab9d7\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 113200,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1132": {
                              "FaceURL": "https://i.ibb.co/DTR7y7R/ceb573e57ad4.jpg",
                              "BackURL": "https://i.ibb.co/vCjGNNKh/bb31a1339ed0.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "GUID": "c715ec",
                  "Name": "Custom_Model_Bag",
                  "Transform": {
                    "posX": -27.5013,
                    "posY": 1.84,
                    "posZ": 16.0016,
                    "rotX": -5.005111E-06,
                    "rotY": 180.031219,
                    "rotZ": -2.04834791E-07,
                    "scaleX": 0.7,
                    "scaleY": 0.7,
                    "scaleZ": 0.7
                  },
                  "Nickname": "Les investigateurs ont fait évacuer Newark",
                  "Description": "Placez selon le guide de campagne",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "CustomMesh": {
                    "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/11926483554586525/B7C7461C0AD866134A546BF88FE4EF63B5AF24A5/",
                    "NormalURL": "",
                    "ColliderURL": "",
                    "Convex": true,
                    "MaterialIndex": 3,
                    "TypeIndex": 6,
                    "CustomShader": {
                      "SpecularColor": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "SpecularIntensity": 0.0,
                      "SpecularSharpness": 2.0,
                      "FresnelStrength": 0.0
                    },
                    "CastShadows": true
                  },
                  "Bag": {
                    "Order": 0
                  },
                  "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
                  "LuaScriptState": "{\"ml\":{\"e0008f\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.5161,\"z\":1.5},\"rot\":{\"x\":0.0109,\"y\":179.9986,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "e0008f",
                      "Name": "Card",
                      "Transform": {
                        "posX": 12.499999,
                        "posY": 1.50609028,
                        "posZ": 1.50000119,
                        "rotX": 0.0108917914,
                        "rotY": 179.9986,
                        "rotZ": 180.004959,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Armurerie du 69ème Régiment",
                      "Description": "New York.",
                      "GMNotes": "{\"id\":\"5f2daec6-f860-479c-aaca-8b563ace508f\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>New York.\",\"locationFront\":{\"icons\":\"T\",\"connections\":\"Cross|Moon\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"T\",\"connections\":\"Cross|Moon\"},\"TtsZoopGuid\":\"5f2daec6-f860-479c-aaca-8b563ace508f\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Location",
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": false,
                      "Hands": true,
                      "CardID": 111900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1119": {
                          "FaceURL": "https://i.ibb.co/fGTDgY1j/ffa86026c55b.jpg",
                          "BackURL": "https://i.ibb.co/JRpgjNK0/dcf3ae931564.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                },
                {
                  "GUID": "c93e72",
                  "Name": "Deck",
                  "Transform": {
                    "posX": 12.7077074,
                    "posY": 1.52639937,
                    "posZ": -6.07930756,
                    "rotX": 0.0108919265,
                    "rotY": 179.9983,
                    "rotZ": 0.004947814,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Deck Intrigue",
                  "Description": "Le Néant Assoiffé",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": false,
                  "SidewaysCard": false,
                  "DeckIDs": [
                    113000,
                    112900,
                    112800
                  ],
                  "CustomDeck": {
                    "1130": {
                      "FaceURL": "https://i.ibb.co/NnnJ2KXk/f02df8d8d26a.jpg",
                      "BackURL": "https://i.ibb.co/PzQJ8Jf8/632876e94c4a.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "1129": {
                      "FaceURL": "https://i.ibb.co/N2FxB3w3/1c88a9dba603.jpg",
                      "BackURL": "https://i.ibb.co/0yvL3hQX/2ffdf7628e52.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "1128": {
                      "FaceURL": "https://i.ibb.co/bRzKXbk1/8579222ace5c.jpg",
                      "BackURL": "https://i.ibb.co/PsZSrkzK/d0bd5aab6312.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "e0009c",
                      "Name": "Card",
                      "Transform": {
                        "posX": -33.0002632,
                        "posY": 1.78358245,
                        "posZ": 15.4998407,
                        "rotX": 0.000316795165,
                        "rotY": 180.00032,
                        "rotZ": -0.00107340468,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "L'Avènement d'Uvhash",
                      "Description": "Intrigue 3",
                      "GMNotes": "{\"id\":\"dcb01704-5e3e-406b-a116-59591d002fdf\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":6,\"TtsZoopGuid\":\"dcb01704-5e3e-406b-a116-59591d002fdf\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 113000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1130": {
                          "FaceURL": "https://i.ibb.co/NnnJ2KXk/f02df8d8d26a.jpg",
                          "BackURL": "https://i.ibb.co/PzQJ8Jf8/632876e94c4a.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0009b",
                      "Name": "Card",
                      "Transform": {
                        "posX": -33.0,
                        "posY": 1.82404506,
                        "posZ": 15.5,
                        "rotX": 0.00694663264,
                        "rotY": 180.000259,
                        "rotZ": -0.004339066,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "La Horde Amorphe",
                      "Description": "Intrigue 2",
                      "GMNotes": "{\"id\":\"bbe00e89-b455-42a7-b7ff-da23e551b598\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":6,\"TtsZoopGuid\":\"bbe00e89-b455-42a7-b7ff-da23e551b598\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 112900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1129": {
                          "FaceURL": "https://i.ibb.co/N2FxB3w3/1c88a9dba603.jpg",
                          "BackURL": "https://i.ibb.co/0yvL3hQX/2ffdf7628e52.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0009a",
                      "Name": "Card",
                      "Transform": {
                        "posX": -33.0,
                        "posY": 1.86330652,
                        "posZ": 15.5,
                        "rotX": 0.000134683869,
                        "rotY": 179.999847,
                        "rotZ": -8.475514E-05,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Sacrifice de Sang",
                      "Description": "Intrigue 1",
                      "GMNotes": "{\"id\":\"d9503270-710f-4dcd-87d4-501973935b50\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":5,\"TtsZoopGuid\":\"d9503270-710f-4dcd-87d4-501973935b50\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 112800,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1128": {
                          "FaceURL": "https://i.ibb.co/bRzKXbk1/8579222ace5c.jpg",
                          "BackURL": "https://i.ibb.co/PsZSrkzK/d0bd5aab6312.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                },
                {
                  "GUID": "d8ca33",
                  "Name": "Custom_Model_Bag",
                  "Transform": {
                    "posX": -23.001297,
                    "posY": 1.84,
                    "posZ": 16.0007019,
                    "rotX": -7.375047E-06,
                    "rotY": 180.031342,
                    "rotZ": -4.575807E-07,
                    "scaleX": 0.7,
                    "scaleY": 0.7,
                    "scaleZ": 0.7
                  },
                  "Nickname": "Les investigateurs ont échoué à faire évacuer Newark",
                  "Description": "Placez selon le guide de campagne",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "CustomMesh": {
                    "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/11926483554581549/EE58C144F2A103ADFE4EC765B3CF0522C316EEFD/",
                    "NormalURL": "",
                    "ColliderURL": "",
                    "Convex": true,
                    "MaterialIndex": 3,
                    "TypeIndex": 6,
                    "CustomShader": {
                      "SpecularColor": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "SpecularIntensity": 0.0,
                      "SpecularSharpness": 2.0,
                      "FresnelStrength": 0.0
                    },
                    "CastShadows": true
                  },
                  "Bag": {
                    "Order": 0
                  },
                  "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
                  "LuaScriptState": "{\"ml\":{\"e00090\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.5161,\"z\":1.5},\"rot\":{\"x\":0.0109,\"y\":179.9973,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "e00090",
                      "Name": "Card",
                      "Transform": {
                        "posX": 12.499999,
                        "posY": 1.50609028,
                        "posZ": 1.50000131,
                        "rotX": 0.01089185,
                        "rotY": 179.9973,
                        "rotZ": 180.004959,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Construction Effondrée",
                      "Description": "New York.",
                      "GMNotes": "{\"id\":\"f084457b-0cb9-4849-acf8-700a82aed486\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>New York.\",\"locationFront\":{\"icons\":\"T\",\"connections\":\"Cross|Moon\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"T\",\"connections\":\"Cross|Moon\"},\"TtsZoopGuid\":\"f084457b-0cb9-4849-acf8-700a82aed486\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Location",
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": false,
                      "Hands": true,
                      "CardID": 112000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1120": {
                          "FaceURL": "https://i.ibb.co/8gfLRFQH/d0beb17c44a2.jpg",
                          "BackURL": "https://i.ibb.co/4ZcdSN5m/9804551927a3.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                },
                {
                  "GUID": "e00087",
                  "Name": "Card",
                  "Transform": {
                    "posX": -30.0000324,
                    "posY": 1.783606,
                    "posZ": 3.99996233,
                    "rotX": -5.14786871E-06,
                    "rotY": 179.992477,
                    "rotZ": 1.74138577E-07,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Uvhash",
                  "Description": "Le Dieu Assoiffé de Sang Venu du Néant.",
                  "GMNotes": "{\"id\":\"5ad64e21-abf3-4b65-a96b-e973f8f41000\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Grand Ancien. Extradimensionnel. �lite.\",\"TtsZoopGuid\":\"5ad64e21-abf3-4b65-a96b-e973f8f41000\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 111300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1113": {
                      "FaceURL": "https://i.ibb.co/Q3m4QRCy/d36b53c1b007.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0008b",
                  "Name": "Card",
                  "Transform": {
                    "posX": 12.000001,
                    "posY": 1.5095551,
                    "posZ": 19.5000019,
                    "rotX": 0.010892042,
                    "rotY": 179.993683,
                    "rotZ": 180.004944,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Tour General Motors",
                  "Description": "New York.",
                  "GMNotes": "{\"id\":\"e8177cc3-4c52-4207-8321-c85e0348cac5\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>New York.\",\"locationFront\":{\"icons\":\"Circle\",\"connections\":\"Diamond|Moon\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Circle\",\"connections\":\"Diamond|Moon\"},\"TtsZoopGuid\":\"e8177cc3-4c52-4207-8321-c85e0348cac5\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 111500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1115": {
                      "FaceURL": "https://i.ibb.co/WNkwv72L/9846ad4689bf.jpg",
                      "BackURL": "https://i.ibb.co/R4zN3w8B/4d0cb1f96a9e.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0008c",
                  "Name": "Card",
                  "Transform": {
                    "posX": 12.0,
                    "posY": 1.51126587,
                    "posZ": 28.5000019,
                    "rotX": 0.0108916238,
                    "rotY": 179.999725,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Central Park",
                  "Description": "New York.",
                  "GMNotes": "{\"id\":\"c7df8361-644c-4a00-a7ed-46d0ce345b89\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>New York.\",\"locationFront\":{\"icons\":\"Diamond\",\"connections\":\"Circle|Star\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Diamond\",\"connections\":\"Circle|Star\"},\"TtsZoopGuid\":\"c7df8361-644c-4a00-a7ed-46d0ce345b89\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 111600,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1116": {
                      "FaceURL": "https://i.ibb.co/TDSn8n4v/7fd2cdd401a6.jpg",
                      "BackURL": "https://i.ibb.co/DfFBnpmG/f65a0c19f2ea.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0008d",
                  "Name": "Card",
                  "Transform": {
                    "posX": -2.000005,
                    "posY": 1.50905335,
                    "posZ": 10.500001,
                    "rotX": 0.0108914822,
                    "rotY": 180.000443,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Times Square",
                  "Description": "New York.",
                  "GMNotes": "{\"id\":\"c7ce8371-4fa0-4270-9c11-c870ed7d5740\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>New York.\",\"locationFront\":{\"icons\":\"Square\",\"connections\":\"Star|Cross|Triangle\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Square\",\"connections\":\"Star|Cross|Triangle\"},\"TtsZoopGuid\":\"c7ce8371-4fa0-4270-9c11-c870ed7d5740\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 111700,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1117": {
                      "FaceURL": "https://i.ibb.co/XrKpZ7wt/b0774235124c.jpg",
                      "BackURL": "https://i.ibb.co/Lz4fqXQR/1fd1495226a1.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0008e",
                  "Name": "Card",
                  "Transform": {
                    "posX": -6.50000048,
                    "posY": 1.50773108,
                    "posZ": 1.49999547,
                    "rotX": 0.010891309,
                    "rotY": 180.001831,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Statue de la Liberté",
                  "Description": "New York.",
                  "GMNotes": "{\"id\":\"00acf114-2650-44d2-b9fc-2c77583077ef\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>New York.\",\"locationFront\":{\"icons\":\"Triangle\",\"connections\":\"Square|Cross\",\"uses\":[{\"count\":0,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Triangle\",\"connections\":\"Square|Cross\"},\"TtsZoopGuid\":\"00acf114-2650-44d2-b9fc-2c77583077ef\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 111800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1118": {
                      "FaceURL": "https://i.ibb.co/b5FX50mk/5ac452ff8917.jpg",
                      "BackURL": "https://i.ibb.co/392pV1ZF/46e796339c43.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00099",
                  "Name": "Card",
                  "Transform": {
                    "posX": 23.5013,
                    "posY": 1.50380516,
                    "posZ": -5.523001,
                    "rotX": 0.0108912466,
                    "rotY": 180.002548,
                    "rotZ": 0.0049487236,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Référence",
                  "Description": "Le Néant Assoiffé",
                  "GMNotes": "{\"id\":\"44de8b31-e93e-4f1e-86b5-f6e1217e43ff\",\"type\":\"ScenarioReference\",\"class\":\"Mythos\",\"tokens\":{\"front\":{\"Cultist\":{\"modifier\":-999,\"description\":\"<size 8.5>-2. -4 � la place si votre sant� mentale restante est de 3 ou moins. \"},\"Skull\":{\"modifier\":-999,\"description\":\"<size 8.5>-2. En cas d��chec, soignez 1 d�g�t de l�ennemi le plus proche. \"},\"Tablet\":{\"modifier\":-999,\"description\":\"<size 8.5>-2. -4 � la place si votre vie restante est de 3 ou moins. \"},\"Elder Thing\":{\"modifier\":-999,\"description\":\"<size 8.5>-1. D�faussez une carte attribu�e � ce test et r�v�lez un autre pion Chaos. \"}},\"back\":{\"Cultist\":{\"modifier\":-999,\"description\":\"<size 8.5>-3. -5 � la place si votre sant� mentale restante est de 3 ou moins. \"},\"Skull\":{\"modifier\":-999,\"description\":\"<size 8.5>-3. Soignez 1 d�g�t de l�ennemi le plus proche.\"},\"Tablet\":{\"modifier\":-999,\"description\":\"<size 8.5>-3. -5 � la place si votre vie restante est de 3 ou moins. \"},\"Elder Thing\":{\"modifier\":-999,\"description\":\"<size 8.5>-2. D�faussez toutes les cartes attribu�es � ce test et r�v�lez un autre pion Chaos. \"}}},\"TtsZoopGuid\":\"44de8b31-e93e-4f1e-86b5-f6e1217e43ff\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 112700,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1127": {
                      "FaceURL": "https://i.ibb.co/1Gb9Nhjb/b2a857897d01.jpg",
                      "BackURL": "https://i.ibb.co/rKZW74Bp/9d2ae98e821d.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "ed1a26",
                  "Name": "Custom_Model_Bag",
                  "Transform": {
                    "posX": -21.5013,
                    "posY": 1.84000051,
                    "posZ": 10.5003986,
                    "rotX": -5.13075656E-06,
                    "rotY": 180.016068,
                    "rotZ": -1.07917828E-07,
                    "scaleX": 0.7,
                    "scaleY": 0.7,
                    "scaleZ": 0.7
                  },
                  "Nickname": "Gratte-Ciel en Ruine",
                  "Description": "Place au hasard le lieu demandé",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.614982545,
                    "g": 0.0,
                    "b": 0.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "CustomMesh": {
                    "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/2057626659749461245/C47C06A96754B7EC1968D360C2C50AD1289C3363/",
                    "NormalURL": "",
                    "ColliderURL": "",
                    "Convex": true,
                    "MaterialIndex": 3,
                    "TypeIndex": 6,
                    "CustomShader": {
                      "SpecularColor": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "SpecularIntensity": 0.0,
                      "SpecularSharpness": 2.0,
                      "FresnelStrength": 0.0
                    },
                    "CastShadows": true
                  },
                  "Bag": {
                    "Order": 0
                  },
                  "LuaScript": "-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
                  "LuaScriptState": "{\"ml\":{\"e00091\":{\"lock\":false,\"pos\":{\"x\":7.5,\"y\":1.5182,\"z\":10.5},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00092\":{\"lock\":false,\"pos\":{\"x\":-24,\"y\":1.7836,\"z\":30},\"rot\":{\"x\":0,\"y\":180.0003,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "e00091",
                      "Name": "Card",
                      "Transform": {
                        "posX": 7.49999952,
                        "posY": 1.50823283,
                        "posZ": 10.500001,
                        "rotX": 0.0108915884,
                        "rotY": 180.000046,
                        "rotZ": 180.004959,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Tour Chrysler",
                      "Description": "New York.",
                      "GMNotes": "{\"id\":\"d6a4a50d-6c87-49e9-af61-1e839323178b\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>New York.\",\"locationFront\":{\"icons\":\"Moon\",\"connections\":\"Circle|Star|Cross|T\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Moon\",\"connections\":\"Circle|Star|Cross|T\"},\"TtsZoopGuid\":\"d6a4a50d-6c87-49e9-af61-1e839323178b\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Location",
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 112100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1121": {
                          "FaceURL": "https://i.ibb.co/39n48BNH/e2ff9fcd42e6.jpg",
                          "BackURL": "https://i.ibb.co/dJGxrG27/b2ca97edfd0d.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00092",
                      "Name": "Card",
                      "Transform": {
                        "posX": -23.9999828,
                        "posY": 1.78360379,
                        "posZ": 30.0000172,
                        "rotX": -4.822536E-06,
                        "rotY": 180.000336,
                        "rotZ": 180.0,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Empire State Building",
                      "Description": "New York.",
                      "GMNotes": "{\"id\":\"ce245c3f-80ea-4acd-9a22-075ef5e5bd86\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>New York.\",\"locationFront\":{\"icons\":\"Moon\",\"connections\":\"Circle|Star|Cross|T\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Moon\",\"connections\":\"Circle|Star|Cross|T\"},\"TtsZoopGuid\":\"ce245c3f-80ea-4acd-9a22-075ef5e5bd86\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Location",
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 112200,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1122": {
                          "FaceURL": "https://i.ibb.co/tpb9gLmK/352b9a10dcb0.jpg",
                          "BackURL": "https://i.ibb.co/dJGxrG27/b2ca97edfd0d.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                }
              ],
              "AttachedDecals": [
                {
                  "Transform": {
                    "posX": -0.0021877822,
                    "posY": -0.08963572,
                    "posZ": -0.00288731651,
                    "rotX": 270.0,
                    "rotY": 359.869568,
                    "rotZ": 0.0,
                    "scaleX": 2.00000215,
                    "scaleY": 2.00000238,
                    "scaleZ": 2.00000262
                  },
                  "CustomDecal": {
                    "Name": "dunwich_back",
                    "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
                    "Size": 7.4
                  }
                }
              ]
            },
            {
              "GUID": "37eed5",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": 2.99999762,
                "posY": 1.49197531,
                "posZ": -5.49999762,
                "rotX": 0.0108904736,
                "rotY": 180.0129,
                "rotZ": 0.00495089544,
                "scaleX": 1.6428808,
                "scaleY": 1.0,
                "scaleZ": 1.6428808
              },
              "Nickname": "Mise en place du Chaos Bag",
              "Description": "La Guerre des Mondes",
              "GMNotes": "{\"data\":\"Guerre_Mondes\",\"easy\":true,\"expert\":true,\"hard\":true,\"normal\":true,\"standalone\":false}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.8745098,
                "g": 0.8,
                "b": 0.7019608
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/",
                "ImageSecondaryURL": "https://steamusercontent-a.akamaihd.net/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "\r\njacqueline_guid = '42cd6e'\r\n\r\nbuttonparams = {\r\n   ['easy'] = {label = \"Facile\", click_function = 'modeEasy', z_i = -0.2},\r\n   ['normal'] = {label = \"Standard\", click_function = 'modeNormal', z_i = 0.1},\r\n   ['hard'] = {label = \"Difficile\", click_function = 'modeHard', z_i = 0.4},\r\n   ['expert'] = {label = \"Expert\", click_function = 'modeExpert', z_i = 0.7},\r\n   ['standalone'] = {label = \"Indépendant\", click_function = 'modeStandalone', z_i = 0},\r\n}\r\n\r\nfunction onLoad()\r\n\r\n    metadata = JSON.decode(self.getGMNotes())\r\n    buttontable = {}\r\n    for key, value in pairs(buttonparams) do\r\n        if metadata[key] == true then\r\n            table.insert(buttontable,value)\r\n        end\r\n        \r\n    end\r\n\r\n    for _, button in pairs(buttontable) do\r\n        local data = {\r\n            click_function = button.click_function, \r\n            function_owner = self, \r\n            label = button.label, \r\n            position = {0, 0.1, button.z_i}, \r\n            scale = {0.3, 0.5, 0.3}, \r\n            width = 1500, \r\n            height = 400, \r\n            font_size = 250, \r\n            tooltip = \"Chaos bag du mode \"..button.label,\r\n            color = {0.5647, 0.4627, 0.2353, 1}, \r\n            font_color = {0.9041, 0.8313, 0.7356, 1},\r\n            hover_color = {99/255, 85/255, 48/255},\r\n            press_color = {192/255, 152/255, 94/255} }\r\n        self.createButton(data)\r\n        \r\n    end\r\n    jacqueline = getObjectFromGUID(jacqueline_guid)\r\n    chaosdata = jacqueline.getTable('chaosdata')\r\nend\r\n\r\nfunction modeEasy()\r\n    local  params ={}\r\n     params.mode = 'easy'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeNormal()\r\n      local  params ={}\r\n       params.mode = 'normal'\r\n       params.data = metadata.data\r\n       jacqueline.call('setChaosBag', params)\r\n    \r\nend\r\n\r\nfunction modeHard()\r\n    local  params ={}\r\n     params.mode = 'hard'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeExpert()\r\n    local  params ={}\r\n     params.mode = 'expert'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeStandalone()\r\n    local  params ={}\r\n     params.mode = 'standalone'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3b768d",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": 2.856741E-07,
                "posY": 4.0,
                "posZ": 54.0,
                "rotX": -6.42400551E-08,
                "rotY": 179.974152,
                "rotZ": 0.00109783164,
                "scaleX": 1.20052135,
                "scaleY": 0.249882281,
                "scaleZ": 1.3145982
              },
              "Nickname": "2: PPhobos et Deimos",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/1461933574036754011/5BB94F6CE5857794E639954A1AC904031A7752AE/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
              "LuaScriptState": "{\"ml\":{\"20e5c7\":{\"lock\":false,\"pos\":{\"x\":13.5,\"y\":1.505,\"z\":15},\"rot\":{\"x\":-0.0042,\"y\":45,\"z\":359.9888},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"36c1d7\":{\"lock\":false,\"pos\":{\"x\":17.744,\"y\":1.536,\"z\":-6.0792},\"rot\":{\"x\":0.0109,\"y\":180.0043,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"41d415\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.84,\"z\":12.5},\"rot\":{\"x\":0,\"y\":180.0313,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"58790f\":{\"lock\":false,\"pos\":{\"x\":13.5,\"y\":1.5041,\"z\":10.5},\"rot\":{\"x\":-0.0049,\"y\":270,\"z\":0.0109},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"6c1683\":{\"lock\":false,\"pos\":{\"x\":12.7077,\"y\":1.5364,\"z\":-6.0794},\"rot\":{\"x\":0.0109,\"y\":179.9972,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":0,\"y\":1.5044,\"z\":6},\"rot\":{\"x\":359.9891,\"y\":0.011,\"z\":-0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"8bb30f\":{\"lock\":false,\"pos\":{\"x\":17.744,\"y\":1.536,\"z\":-6.0792},\"rot\":{\"x\":0.0109,\"y\":180.0043,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"96b568\":{\"lock\":false,\"pos\":{\"x\":-22,\"y\":1.84,\"z\":6.5},\"rot\":{\"x\":0,\"y\":180.0309,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"a68696\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.5032,\"z\":1.5},\"rot\":{\"x\":0.0049,\"y\":90.0001,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"a7b69e\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.7039,\"z\":-2.9971},\"rot\":{\"x\":-0.0006,\"y\":180,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"bb7fa3\":{\"lock\":false,\"pos\":{\"x\":2,\"y\":1.506,\"z\":15},\"rot\":{\"x\":359.993,\"y\":30,\"z\":359.9903},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"cfbaca\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.5075,\"z\":24},\"rot\":{\"x\":359.9891,\"y\":0.011,\"z\":-0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d3a55c\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.5049,\"z\":10.5001},\"rot\":{\"x\":0.005,\"y\":89.9981,\"z\":359.9883},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d9022b\":{\"lock\":false,\"pos\":{\"x\":7,\"y\":1.5055,\"z\":15},\"rot\":{\"x\":359.9881,\"y\":330,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"dbaada\":{\"lock\":false,\"pos\":{\"x\":-28,\"y\":1.84,\"z\":6.5},\"rot\":{\"x\":0,\"y\":180.0311,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"e00047\":{\"lock\":false,\"pos\":{\"x\":20.5,\"y\":1.519,\"z\":20.5},\"rot\":{\"x\":0.0109,\"y\":179.9747,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00048\":{\"lock\":false,\"pos\":{\"x\":-29.5001,\"y\":1.7836,\"z\":3.9999},\"rot\":{\"x\":0,\"y\":179.9961,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0005f\":{\"lock\":false,\"pos\":{\"x\":9,\"y\":1.5181,\"z\":10.5},\"rot\":{\"x\":0.0109,\"y\":180.0026,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00060\":{\"lock\":false,\"pos\":{\"x\":0,\"y\":1.5189,\"z\":10.5},\"rot\":{\"x\":0.0109,\"y\":179.9998,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00061\":{\"lock\":false,\"pos\":{\"x\":18,\"y\":1.5173,\"z\":10.5},\"rot\":{\"x\":0.0109,\"y\":180.0021,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00062\":{\"lock\":false,\"pos\":{\"x\":9,\"y\":1.5164,\"z\":1.5},\"rot\":{\"x\":0.0109,\"y\":180.0001,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00063\":{\"lock\":false,\"pos\":{\"x\":0,\"y\":1.5172,\"z\":1.5},\"rot\":{\"x\":0.0109,\"y\":180.0004,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00064\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.5202,\"z\":19.5},\"rot\":{\"x\":0.0109,\"y\":180.0007,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00065\":{\"lock\":false,\"pos\":{\"x\":4.5,\"y\":1.5219,\"z\":28.5},\"rot\":{\"x\":0.0109,\"y\":180.0006,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00066\":{\"lock\":false,\"pos\":{\"x\":18.0005,\"y\":1.5189,\"z\":19.0002},\"rot\":{\"x\":0.0109,\"y\":179.997,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00069\":{\"lock\":false,\"pos\":{\"x\":23.5013,\"y\":1.5138,\"z\":-5.523},\"rot\":{\"x\":0.0109,\"y\":180.0023,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0006a\":{\"lock\":false,\"pos\":{\"x\":2.5002,\"y\":1.5711,\"z\":12},\"rot\":{\"x\":0.0108,\"y\":180.0069,\"z\":357.2691},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f43359\":{\"lock\":false,\"pos\":{\"x\":9,\"y\":1.5036,\"z\":6},\"rot\":{\"x\":359.9891,\"y\":0.011,\"z\":-0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}}}}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "41d415",
                  "Name": "Custom_Model_Bag",
                  "Transform": {
                    "posX": -24.501091,
                    "posY": 1.84004366,
                    "posZ": 12.4998922,
                    "rotX": -6.30318345E-06,
                    "rotY": 180.031036,
                    "rotZ": 6.22613356E-08,
                    "scaleX": 0.7,
                    "scaleY": 0.7,
                    "scaleZ": 0.7
                  },
                  "Nickname": "Acte 2b",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "CustomMesh": {
                    "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/11926483554489584/CC73834ECA4073D8312B7349A744C08E2C2B53CD/",
                    "NormalURL": "",
                    "ColliderURL": "",
                    "Convex": true,
                    "MaterialIndex": 3,
                    "TypeIndex": 6,
                    "CustomShader": {
                      "SpecularColor": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "SpecularIntensity": 0.0,
                      "SpecularSharpness": 2.0,
                      "FresnelStrength": 0.0
                    },
                    "CastShadows": true
                  },
                  "Bag": {
                    "Order": 0
                  },
                  "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
                  "LuaScriptState": "{\"ml\":{\"20e5c7\":{\"lock\":false,\"pos\":{\"x\":13.5,\"y\":1.505,\"z\":15},\"rot\":{\"x\":-0.0042,\"y\":45,\"z\":359.9888},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e00047\":{\"lock\":false,\"pos\":{\"x\":20.5,\"y\":1.50901103019714,\"z\":20.5000019073486},\"rot\":{\"x\":0.0108936876058578,\"y\":179.974670410156,\"z\":0.00494346721097827},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00048\":{\"lock\":false,\"pos\":{\"x\":-29,\"y\":1.78360533714294,\"z\":11.9999990463257},\"rot\":{\"x\":-5.06785227116779E-06,\"y\":179.99609375,\"z\":2.77802257642179E-07},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00066\":{\"lock\":false,\"pos\":{\"x\":18.0004997253418,\"y\":1.5089418888092,\"z\":19.0002021789551},\"rot\":{\"x\":0.01089181099087,\"y\":179.996994018555,\"z\":180.004959106445},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "e00047",
                      "Name": "Card",
                      "Transform": {
                        "posX": 20.5,
                        "posY": 1.509011,
                        "posZ": 20.5000019,
                        "rotX": 0.0108936876,
                        "rotY": 179.97467,
                        "rotZ": 0.004943467,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine Volante",
                      "Description": "Élite. Martien. Véhicule.",
                      "GMNotes": "{\"id\":\"b7402351-9b8b-4e48-9d71-4bde7ba3b80b\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Élite. Martien. Véhicule.\",\n\"Health\": 4,\n\"TtsZoopGuid\":\"b7402351-9b8b-4e48-9d71-4bde7ba3b80b\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 105700,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1057": {
                          "FaceURL": "https://i.ibb.co/JRhCT5Sm/6a777b66059d.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00048",
                      "Name": "Card",
                      "Transform": {
                        "posX": -29.0,
                        "posY": 1.78360534,
                        "posZ": 11.999999,
                        "rotX": -5.06785227E-06,
                        "rotY": 179.9961,
                        "rotZ": 2.77802258E-07,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Canon d'Artillerie",
                      "Description": "Objet. Arme.",
                      "GMNotes": "{\"id\":\"1efe2bb1-3146-4b85-89f2-01adab301982\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<size 8>Objet. Arme.\",\"TtsZoopGuid\":\"1efe2bb1-3146-4b85-89f2-01adab301982\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Asset",
                        "PlayerCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 105800,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1058": {
                          "FaceURL": "https://i.ibb.co/jvF8mTzW/40d83bd56cf8.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00066",
                      "Name": "Card",
                      "Transform": {
                        "posX": 18.0005,
                        "posY": 1.50894189,
                        "posZ": 19.0002022,
                        "rotX": 0.010891811,
                        "rotY": 179.997,
                        "rotZ": 180.004959,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Tunnel Holland",
                      "Description": "Newark.",
                      "GMNotes": "{\"id\":\"f9ac6681-bacf-44be-b9a1-1479dc65ade8\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Newark.\",\"locationFront\":{\"icons\":\"T\",\"connections\":\"DoubleSlash\",\"uses\":[{\"count\":0,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"T\",\"connections\":\"DoubleSlash\"},\"TtsZoopGuid\":\"f9ac6681-bacf-44be-b9a1-1479dc65ade8\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Location",
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": false,
                      "Hands": true,
                      "CardID": 108600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1086": {
                          "FaceURL": "https://i.ibb.co/Xk8yFMNM/c3a33ad0753a.jpg",
                          "BackURL": "https://i.ibb.co/3mX4DJTn/f14324d3c9d1.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                },
                {
                  "GUID": "6c1683",
                  "Name": "Deck",
                  "Transform": {
                    "posX": 12.7077074,
                    "posY": 1.52639937,
                    "posZ": -6.079407,
                    "rotX": 0.0108920187,
                    "rotY": 179.997131,
                    "rotZ": 0.004947679,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Deck Intrigue",
                  "Description": "Phobos et Deimos",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": false,
                  "SidewaysCard": false,
                  "DeckIDs": [
                    109100,
                    109000,
                    108900
                  ],
                  "CustomDeck": {
                    "1091": {
                      "FaceURL": "https://i.ibb.co/5hDRrYDr/625ff239b9f4.jpg",
                      "BackURL": "https://i.ibb.co/tPQgBwYQ/3faab52ea1e1.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "1090": {
                      "FaceURL": "https://i.ibb.co/4wNg55dv/1630dc49aed6.jpg",
                      "BackURL": "https://i.ibb.co/3y80qz38/63eea5b7632d.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "1089": {
                      "FaceURL": "https://i.ibb.co/VpH8CYc9/437a05dbc1ac.jpg",
                      "BackURL": "https://i.ibb.co/5hrdGxW6/a69e54db12c8.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "e0006e",
                      "Name": "Card",
                      "Transform": {
                        "posX": 12.7076921,
                        "posY": 1.51463127,
                        "posZ": -6.079364,
                        "rotX": 0.0108908461,
                        "rotY": 179.9974,
                        "rotZ": 0.00495068775,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Des Agneaux à l'Abattoir",
                      "Description": "Intrigue 3",
                      "GMNotes": "{\"id\":\"0915cefe-8d59-4758-9bed-86c9caedc1a1\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":6,\"TtsZoopGuid\":\"0915cefe-8d59-4758-9bed-86c9caedc1a1\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 109100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1091": {
                          "FaceURL": "https://i.ibb.co/5hDRrYDr/625ff239b9f4.jpg",
                          "BackURL": "https://i.ibb.co/tPQgBwYQ/3faab52ea1e1.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0006d",
                      "Name": "Card",
                      "Transform": {
                        "posX": 12.7076769,
                        "posY": 1.5734663,
                        "posZ": -6.07924652,
                        "rotX": 359.328156,
                        "rotY": 179.996857,
                        "rotZ": 0.004964453,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Vapeur et Poussière",
                      "Description": "Intrigue 2",
                      "GMNotes": "{\"id\":\"b23fd450-3c49-4a5b-a7f3-c40a3ef58f74\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":5,\"TtsZoopGuid\":\"b23fd450-3c49-4a5b-a7f3-c40a3ef58f74\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 109000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1090": {
                          "FaceURL": "https://i.ibb.co/4wNg55dv/1630dc49aed6.jpg",
                          "BackURL": "https://i.ibb.co/3y80qz38/63eea5b7632d.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0006c",
                      "Name": "Card",
                      "Transform": {
                        "posX": 12.707675,
                        "posY": 1.57914686,
                        "posZ": -6.079252,
                        "rotX": 0.0133641288,
                        "rotY": 179.9979,
                        "rotZ": 0.00439870032,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "La Contagion de la Peur",
                      "Description": "Intrigue 1",
                      "GMNotes": "{\"id\":\"d9923088-3508-404e-b5cb-4c28a04d7e6b\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":6,\"TtsZoopGuid\":\"d9923088-3508-404e-b5cb-4c28a04d7e6b\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 108900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1089": {
                          "FaceURL": "https://i.ibb.co/VpH8CYc9/437a05dbc1ac.jpg",
                          "BackURL": "https://i.ibb.co/5hrdGxW6/a69e54db12c8.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                },
                {
                  "GUID": "96b568",
                  "Name": "Custom_Model_Bag",
                  "Transform": {
                    "posX": -22.0,
                    "posY": 1.84000087,
                    "posZ": 6.499998,
                    "rotX": -5.80792766E-06,
                    "rotY": 180.030884,
                    "rotZ": 6.888231E-07,
                    "scaleX": 0.7,
                    "scaleY": 0.7,
                    "scaleZ": 0.7
                  },
                  "Nickname": "Si les Martiens ont éliminé l'armée sur place",
                  "Description": "Placez selon le guide de campagne",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "CustomMesh": {
                    "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/11926483554487594/DE5A5F0712C858DA44D2563C6F1469957DC9FBFC/",
                    "NormalURL": "",
                    "ColliderURL": "",
                    "Convex": true,
                    "MaterialIndex": 3,
                    "TypeIndex": 6,
                    "CustomShader": {
                      "SpecularColor": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "SpecularIntensity": 0.0,
                      "SpecularSharpness": 2.0,
                      "FresnelStrength": 0.0
                    },
                    "CastShadows": true
                  },
                  "Bag": {
                    "Order": 0
                  },
                  "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
                  "LuaScriptState": "{\"ml\":{\"8bb30f\":{\"lock\":false,\"pos\":{\"x\":17.744,\"y\":1.536,\"z\":-6.0792},\"rot\":{\"x\":0.0109,\"y\":180.0043,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "8bb30f",
                      "Name": "Deck",
                      "Transform": {
                        "posX": 17.744,
                        "posY": 1.53596413,
                        "posZ": -6.079211,
                        "rotX": 0.0108920643,
                        "rotY": 180.004318,
                        "rotZ": 0.00494912546,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Deck Acte (v. I)",
                      "Description": "Phobos et Deimos",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": false,
                      "SidewaysCard": false,
                      "DeckIDs": [
                        109400,
                        109300,
                        109200
                      ],
                      "CustomDeck": {
                        "1094": {
                          "FaceURL": "https://i.ibb.co/chbPk22G/89a30d9244e5.jpg",
                          "BackURL": "https://i.ibb.co/N6RL4d1s/b6043acf139a.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        },
                        "1093": {
                          "FaceURL": "https://i.ibb.co/2wC18cP/1491eab2d887.jpg",
                          "BackURL": "https://i.ibb.co/X169CFf/328ccd6f25c7.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        },
                        "1092": {
                          "FaceURL": "https://i.ibb.co/Gh40sKj/f94e89565d50.jpg",
                          "BackURL": "https://i.ibb.co/FkCn7vWD/cf76d150b67c.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": "",
                      "ContainedObjects": [
                        {
                          "GUID": "e00071",
                          "Name": "Card",
                          "Transform": {
                            "posX": -27.49962,
                            "posY": 1.78360176,
                            "posZ": 23.0004,
                            "rotX": 3.29151371E-05,
                            "rotY": 180.004044,
                            "rotZ": -0.000124759667,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "Assaut Aérien (v. I)",
                          "Description": "Acte 3",
                          "GMNotes": "{\"id\":\"2a7ddd11-4788-4456-ae48-c6b156d6b350\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"2a7ddd11-4788-4456-ae48-c6b156d6b350\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 109400,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1094": {
                              "FaceURL": "https://i.ibb.co/chbPk22G/89a30d9244e5.jpg",
                              "BackURL": "https://i.ibb.co/N6RL4d1s/b6043acf139a.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e00070",
                          "Name": "Card",
                          "Transform": {
                            "posX": -27.5,
                            "posY": 1.82938445,
                            "posZ": 23.0,
                            "rotX": 0.0007980999,
                            "rotY": 180.000061,
                            "rotZ": -0.000498605135,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "Évacuation",
                          "Description": "Acte 2",
                          "GMNotes": "{\"id\":\"a34e5270-e071-4244-b2ef-f77a7fd20874\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"a34e5270-e071-4244-b2ef-f77a7fd20874\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 109300,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1093": {
                              "FaceURL": "https://i.ibb.co/2wC18cP/1491eab2d887.jpg",
                              "BackURL": "https://i.ibb.co/X169CFf/328ccd6f25c7.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e0006f",
                          "Name": "Card",
                          "Transform": {
                            "posX": -27.5,
                            "posY": 1.86330616,
                            "posZ": 23.0,
                            "rotX": -0.0001124574,
                            "rotY": 180.002975,
                            "rotZ": -2.4655159E-05,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "La voix de la Raison",
                          "Description": "Acte 1",
                          "GMNotes": "{\"id\":\"84465435-751b-4671-857c-24425113a656\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"84465435-751b-4671-857c-24425113a656\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 109200,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1092": {
                              "FaceURL": "https://i.ibb.co/Gh40sKj/f94e89565d50.jpg",
                              "BackURL": "https://i.ibb.co/FkCn7vWD/cf76d150b67c.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "GUID": "a7b69e",
                  "Name": "Deck",
                  "Transform": {
                    "posX": 30.5,
                    "posY": 1.70393252,
                    "posZ": -2.9971,
                    "rotX": -0.0005912624,
                    "rotY": 180.0,
                    "rotZ": 180.001068,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Deck Rencontre",
                  "Description": "Phobos et Deimos",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": false,
                  "SidewaysCard": false,
                  "DeckIDs": [
                    100100,
                    100000,
                    100600,
                    100200,
                    100800,
                    100700,
                    101000,
                    100900,
                    101100,
                    101200,
                    101300,
                    101500,
                    101400,
                    101600,
                    101700,
                    100300,
                    100400,
                    100500,
                    106400,
                    106300,
                    106200,
                    106100,
                    106000,
                    105900,
                    107100,
                    107000,
                    106900,
                    106800,
                    106700,
                    106600,
                    106500,
                    107800,
                    107700,
                    107600,
                    107500,
                    107400,
                    107300,
                    107200
                  ],
                  "CustomDeck": {
                    "1001": {
                      "FaceURL": "https://i.ibb.co/VY16TSfm/1ffb0b7af581.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1000": {
                      "FaceURL": "https://i.ibb.co/FkLGvLQ6/1853020f2ea5.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1006": {
                      "FaceURL": "https://i.ibb.co/wFY7rdk0/ccb3bd802f0c.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1002": {
                      "FaceURL": "https://i.ibb.co/Xkj6bXtK/1149eaf7722e.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1008": {
                      "FaceURL": "https://i.ibb.co/21JqFSXc/94437f4a1a6a.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1007": {
                      "FaceURL": "https://i.ibb.co/9Hq4vLzZ/1546bda9a53d.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1010": {
                      "FaceURL": "https://i.ibb.co/wFDqS5z5/55395d324b38.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1009": {
                      "FaceURL": "https://i.ibb.co/s9BVLvKk/f408c977806f.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1011": {
                      "FaceURL": "https://i.ibb.co/tTvXv81S/64582f148e3f.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1012": {
                      "FaceURL": "https://i.ibb.co/qb3pCbh/6eefa724116e.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1013": {
                      "FaceURL": "https://i.ibb.co/N2ZmjDy0/2689d0439351.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1015": {
                      "FaceURL": "https://i.ibb.co/CL2Y05Y/a1eaa15b117a.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1014": {
                      "FaceURL": "https://i.ibb.co/Ld6Xgw1b/292d138ef7e6.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1016": {
                      "FaceURL": "https://i.ibb.co/xt59n3k9/60ae774e11d9.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1017": {
                      "FaceURL": "https://i.ibb.co/Q7p0jCjj/f5ee96258e69.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1003": {
                      "FaceURL": "https://i.ibb.co/VWPzKhRw/cb859be0efd3.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1004": {
                      "FaceURL": "https://i.ibb.co/hJkHy0Rs/b235665f1dea.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1005": {
                      "FaceURL": "https://i.ibb.co/spq8HMfB/09a701f665d3.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1064": {
                      "FaceURL": "https://i.ibb.co/My2sj98Z/19dfcfe12ca4.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1063": {
                      "FaceURL": "https://i.ibb.co/pj2JwQjm/61c82aa18050.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1062": {
                      "FaceURL": "https://i.ibb.co/N27zYRwG/4991faad51e1.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1061": {
                      "FaceURL": "https://i.ibb.co/Q3KnT8Y6/2e69b2db5e4c.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1060": {
                      "FaceURL": "https://i.ibb.co/rG8PZX7h/83b2e86b8215.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1059": {
                      "FaceURL": "https://i.ibb.co/Z66Z58Pz/2011ed99475e.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1071": {
                      "FaceURL": "https://i.ibb.co/Y7FRb76n/a0a7a5f7d031.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1070": {
                      "FaceURL": "https://i.ibb.co/4RgXG1xy/aa8074c54fe3.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1069": {
                      "FaceURL": "https://i.ibb.co/DHGFt0ym/39d3fd25559f.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1068": {
                      "FaceURL": "https://i.ibb.co/Cpz1dy1K/c08e74361913.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1067": {
                      "FaceURL": "https://i.ibb.co/xxbdYcN/5693f00201e3.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1066": {
                      "FaceURL": "https://i.ibb.co/wrbhBPkP/7436750983e2.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1065": {
                      "FaceURL": "https://i.ibb.co/tpbVZF60/2633567d3983.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1078": {
                      "FaceURL": "https://i.ibb.co/NdWnMPDg/3efcef921aa4.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1077": {
                      "FaceURL": "https://i.ibb.co/tTsGLXxW/401782d56a71.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1076": {
                      "FaceURL": "https://i.ibb.co/5QFHQwY/745bd7ba3486.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1075": {
                      "FaceURL": "https://i.ibb.co/3yDfyz3L/53eec962c4ba.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1074": {
                      "FaceURL": "https://i.ibb.co/YBQtnnd0/4f292f10418c.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1073": {
                      "FaceURL": "https://i.ibb.co/gFtVGQRS/5c3cbc1862c6.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1072": {
                      "FaceURL": "https://i.ibb.co/WpHcFv46/8bed9bebf246.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "e00002",
                      "Name": "Card",
                      "Transform": {
                        "posX": -13.0352421,
                        "posY": 1.68722749,
                        "posZ": 16.9970074,
                        "rotX": 0.01615924,
                        "rotY": 180.0155,
                        "rotZ": 7.7655673,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Corps Calcinés",
                      "Description": "Terreur.",
                      "GMNotes": "{\"id\":\"070c286c-c8dc-4690-adb2-4ecf07ab3878\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur.\",\"TtsZoopGuid\":\"070c286c-c8dc-4690-adb2-4ecf07ab3878\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1001": {
                          "FaceURL": "https://i.ibb.co/VY16TSfm/1ffb0b7af581.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00001",
                      "Name": "Card",
                      "Transform": {
                        "posX": -12.423461,
                        "posY": 1.6677227,
                        "posZ": 16.9967613,
                        "rotX": 0.0128187109,
                        "rotY": 180.029633,
                        "rotZ": 7.710931,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Corps Calcinés",
                      "Description": "Terreur.",
                      "GMNotes": "{\"id\":\"da24f4d5-1124-4a6a-8dad-cec326fe1dd0\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur.\",\"TtsZoopGuid\":\"da24f4d5-1124-4a6a-8dad-cec326fe1dd0\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1000": {
                          "FaceURL": "https://i.ibb.co/FkLGvLQ6/1853020f2ea5.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00007",
                      "Name": "Card",
                      "Transform": {
                        "posX": -14.2611437,
                        "posY": 1.74001765,
                        "posZ": 16.9973965,
                        "rotX": 0.0194458235,
                        "rotY": 180.03714,
                        "rotZ": 7.78147745,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Manutention",
                      "Description": "Monstre. Martien. Véhicule.",
                      "GMNotes": "{\"id\":\"a4e6c295-e8b9-4a3b-be6b-537325a98819\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule.\",\"TtsZoopGuid\":\"a4e6c295-e8b9-4a3b-be6b-537325a98819\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1006": {
                          "FaceURL": "https://i.ibb.co/wFY7rdk0/ccb3bd802f0c.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00003",
                      "Name": "Card",
                      "Transform": {
                        "posX": -13.6469126,
                        "posY": 1.712217,
                        "posZ": 16.997036,
                        "rotX": 0.01602593,
                        "rotY": 180.045456,
                        "rotZ": 7.76556253,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Corps Calcinés",
                      "Description": "Terreur.",
                      "GMNotes": "{\"id\":\"5d34f38f-977c-4438-855e-4f12866049c6\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur.\",\"TtsZoopGuid\":\"5d34f38f-977c-4438-855e-4f12866049c6\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100200,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1002": {
                          "FaceURL": "https://i.ibb.co/Xkj6bXtK/1149eaf7722e.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00009",
                      "Name": "Card",
                      "Transform": {
                        "posX": -15.4885769,
                        "posY": 1.82699776,
                        "posZ": 16.9983788,
                        "rotX": 0.0238457154,
                        "rotY": 180.047653,
                        "rotZ": 7.59634542,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Technicien Martien",
                      "Description": "Monstre. Martien.",
                      "GMNotes": "{\"id\":\"3843ba4e-430c-48c5-8386-bad9e231cce5\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien.\",\"TtsZoopGuid\":\"3843ba4e-430c-48c5-8386-bad9e231cce5\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100800,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1008": {
                          "FaceURL": "https://i.ibb.co/21JqFSXc/94437f4a1a6a.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00008",
                      "Name": "Card",
                      "Transform": {
                        "posX": -14.8736181,
                        "posY": 1.786067,
                        "posZ": 16.997776,
                        "rotX": 0.0199360345,
                        "rotY": 180.055389,
                        "rotZ": 7.7814765,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Manutention",
                      "Description": "Monstre. Martien. Véhicule.",
                      "GMNotes": "{\"id\":\"4f0e5795-bf80-4658-b4c0-1fc4893f5a6a\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule.\",\"TtsZoopGuid\":\"4f0e5795-bf80-4658-b4c0-1fc4893f5a6a\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100700,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1007": {
                          "FaceURL": "https://i.ibb.co/9Hq4vLzZ/1546bda9a53d.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000b",
                      "Name": "Card",
                      "Transform": {
                        "posX": -16.7096634,
                        "posY": 1.877186,
                        "posZ": 16.9994335,
                        "rotX": 0.0291825831,
                        "rotY": 180.042038,
                        "rotZ": 7.041579,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Technicien Martien",
                      "Description": "Monstre. Martien.",
                      "GMNotes": "{\"id\":\"4cf03802-40c6-4601-994d-4fde1029a976\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien.\",\"TtsZoopGuid\":\"4cf03802-40c6-4601-994d-4fde1029a976\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1010": {
                          "FaceURL": "https://i.ibb.co/wFDqS5z5/55395d324b38.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000a",
                      "Name": "Card",
                      "Transform": {
                        "posX": -16.0993061,
                        "posY": 1.857675,
                        "posZ": 16.9989319,
                        "rotX": 0.0238452144,
                        "rotY": 180.047974,
                        "rotZ": 7.596347,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Technicien Martien",
                      "Description": "Monstre. Martien.",
                      "GMNotes": "{\"id\":\"1b5ed978-434d-4a3f-8828-63058188cf77\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien.\",\"TtsZoopGuid\":\"1b5ed978-434d-4a3f-8828-63058188cf77\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1009": {
                          "FaceURL": "https://i.ibb.co/s9BVLvKk/f408c977806f.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000c",
                      "Name": "Card",
                      "Transform": {
                        "posX": -17.32312,
                        "posY": 1.88639426,
                        "posZ": 16.9998264,
                        "rotX": 0.0291832238,
                        "rotY": 180.042023,
                        "rotZ": 7.04157925,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Technicien Martien",
                      "Description": "Monstre. Martien.",
                      "GMNotes": "{\"id\":\"b2297402-cb81-4673-ba84-c8883bd92152\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien.\",\"TtsZoopGuid\":\"b2297402-cb81-4673-ba84-c8883bd92152\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1011": {
                          "FaceURL": "https://i.ibb.co/tTvXv81S/64582f148e3f.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000d",
                      "Name": "Card",
                      "Transform": {
                        "posX": -17.9330025,
                        "posY": 1.89204621,
                        "posZ": 17.000433,
                        "rotX": 0.0368621647,
                        "rotY": 180.029816,
                        "rotZ": 5.97499657,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Chercheur",
                      "Description": "Appareil. Manigance.",
                      "GMNotes": "{\"id\":\"cacced9c-b70e-4152-b4af-e2a154f3a545\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Appareil. Manigance.\",\"TtsZoopGuid\":\"cacced9c-b70e-4152-b4af-e2a154f3a545\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101200,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1012": {
                          "FaceURL": "https://i.ibb.co/qb3pCbh/6eefa724116e.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000e",
                      "Name": "Card",
                      "Transform": {
                        "posX": -18.5391178,
                        "posY": 1.889417,
                        "posZ": 17.00034,
                        "rotX": 0.0334006175,
                        "rotY": 180.025665,
                        "rotZ": 5.50415754,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Chercheur",
                      "Description": "Appareil. Manigance.",
                      "GMNotes": "{\"id\":\"af93e289-6fa5-43a6-a059-2164b0c89edc\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8.5>Appareil. Manigance.\",\"TtsZoopGuid\":\"af93e289-6fa5-43a6-a059-2164b0c89edc\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101300,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1013": {
                          "FaceURL": "https://i.ibb.co/N2ZmjDy0/2689d0439351.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00010",
                      "Name": "Card",
                      "Transform": {
                        "posX": -19.7654476,
                        "posY": 1.88246,
                        "posZ": 17.0011978,
                        "rotX": 0.03817355,
                        "rotY": 180.037369,
                        "rotZ": 5.030809,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Ardent",
                      "Description": "Arme. Feu.",
                      "GMNotes": "{\"id\":\"a760e578-b624-478b-a135-a78fd92631f6\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Arme. Feu.\",\"TtsZoopGuid\":\"a760e578-b624-478b-a135-a78fd92631f6\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101500,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1015": {
                          "FaceURL": "https://i.ibb.co/CL2Y05Y/a1eaa15b117a.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000f",
                      "Name": "Card",
                      "Transform": {
                        "posX": -19.15128,
                        "posY": 1.88124156,
                        "posZ": 17.0007954,
                        "rotX": 0.05021061,
                        "rotY": 180.038818,
                        "rotZ": 5.04763746,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Chercheur",
                      "Description": "Appareil. Manigance.",
                      "GMNotes": "{\"id\":\"336a8f1f-abb6-4702-88da-6bb5cba39e1a\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Appareil. Manigance.\",\"TtsZoopGuid\":\"336a8f1f-abb6-4702-88da-6bb5cba39e1a\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101400,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1014": {
                          "FaceURL": "https://i.ibb.co/Ld6Xgw1b/292d138ef7e6.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00011",
                      "Name": "Card",
                      "Transform": {
                        "posX": -20.3797436,
                        "posY": 1.88313949,
                        "posZ": 17.001688,
                        "rotX": 0.03391226,
                        "rotY": 180.041962,
                        "rotZ": 4.878934,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Ardent",
                      "Description": "Arme. Feu.",
                      "GMNotes": "{\"id\":\"d3aaf2fb-1fc5-43a3-b96c-73a615c88263\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Arme. Feu.\",\"TtsZoopGuid\":\"d3aaf2fb-1fc5-43a3-b96c-73a615c88263\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1016": {
                          "FaceURL": "https://i.ibb.co/xt59n3k9/60ae774e11d9.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00012",
                      "Name": "Card",
                      "Transform": {
                        "posX": -20.9940357,
                        "posY": 1.88542736,
                        "posZ": 17.0021343,
                        "rotX": 0.03391102,
                        "rotY": 180.041977,
                        "rotZ": 4.878934,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Ardent",
                      "Description": "Arme. Feu.",
                      "GMNotes": "{\"id\":\"8233c4e5-0be0-4f3a-80e3-d6ba11a3de64\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Arme. Feu.\",\"TtsZoopGuid\":\"8233c4e5-0be0-4f3a-80e3-d6ba11a3de64\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101700,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1017": {
                          "FaceURL": "https://i.ibb.co/Q7p0jCjj/f5ee96258e69.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00004",
                      "Name": "Card",
                      "Transform": {
                        "posX": -28.0000248,
                        "posY": 1.78360534,
                        "posZ": 16.4999886,
                        "rotX": -8.133078E-06,
                        "rotY": 180.017761,
                        "rotZ": 2.28152712E-05,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Guerre",
                      "Description": "Monstre. Martien. Véhicule. Élite.",
                      "GMNotes": "{\"id\":\"a19480b7-1bc0-4f8d-9fb3-bf2bdbe40604\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule. �lite.\",\"TtsZoopGuid\":\"a19480b7-1bc0-4f8d-9fb3-bf2bdbe40604\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100300,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1003": {
                          "FaceURL": "https://i.ibb.co/VWPzKhRw/cb859be0efd3.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00005",
                      "Name": "Card",
                      "Transform": {
                        "posX": -30.0007534,
                        "posY": 1.79847324,
                        "posZ": 16.5000362,
                        "rotX": -1.84422588E-05,
                        "rotY": 180.017532,
                        "rotZ": 359.221069,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Guerre",
                      "Description": "Monstre. Martien. Véhicule. Élite.",
                      "GMNotes": "{\"id\":\"88c4d6a1-2e2a-4332-a487-defdd007be06\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule. �lite.\",\"TtsZoopGuid\":\"88c4d6a1-2e2a-4332-a487-defdd007be06\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100400,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1004": {
                          "FaceURL": "https://i.ibb.co/hJkHy0Rs/b235665f1dea.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00006",
                      "Name": "Card",
                      "Transform": {
                        "posX": -32.4999847,
                        "posY": 1.78360486,
                        "posZ": 16.4999981,
                        "rotX": -5.06190327E-06,
                        "rotY": 180.016525,
                        "rotZ": -2.74854841E-07,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Guerre",
                      "Description": "Monstre. Martien. Véhicule. Élite.",
                      "GMNotes": "{\"id\":\"8bbeeb7f-b856-4200-bfbd-3266bfc46011\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule. �lite.\",\"TtsZoopGuid\":\"8bbeeb7f-b856-4200-bfbd-3266bfc46011\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100500,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1005": {
                          "FaceURL": "https://i.ibb.co/spq8HMfB/09a701f665d3.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0004e",
                      "Name": "Card",
                      "Transform": {
                        "posX": 9.000008,
                        "posY": 1.51953483,
                        "posZ": 18.5000172,
                        "rotX": 0.0117882565,
                        "rotY": 179.999741,
                        "rotZ": -0.000932652561,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Hystérie Générale",
                      "Description": "Terreur. Bévue.",
                      "GMNotes": "{\"id\":\"ac4f9f31-6065-4638-9d10-af6a3aae65a1\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur. B�vue.\",\"TtsZoopGuid\":\"ac4f9f31-6065-4638-9d10-af6a3aae65a1\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 106400,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1064": {
                          "FaceURL": "https://i.ibb.co/My2sj98Z/19dfcfe12ca4.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0004d",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.999894,
                        "posY": 1.54859662,
                        "posZ": 18.4999371,
                        "rotX": 0.156129092,
                        "rotY": 179.999252,
                        "rotZ": 359.805145,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Hystérie Générale",
                      "Description": "Terreur. Bévue.",
                      "GMNotes": "{\"id\":\"a8879af6-dbd4-4f1b-845e-bf8b61783bbe\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur. B�vue.\",\"TtsZoopGuid\":\"a8879af6-dbd4-4f1b-845e-bf8b61783bbe\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 106300,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1063": {
                          "FaceURL": "https://i.ibb.co/pj2JwQjm/61c82aa18050.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0004c",
                      "Name": "Card",
                      "Transform": {
                        "posX": 9.0,
                        "posY": 1.58416855,
                        "posZ": 18.5,
                        "rotX": 0.0115194079,
                        "rotY": 180.000061,
                        "rotZ": 0.00271594222,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Hystérie Générale",
                      "Description": "Terreur. Bévue.",
                      "GMNotes": "{\"id\":\"11c0d3e7-dd54-4115-b1fc-35f9e6ab465d\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur. B�vue.\",\"TtsZoopGuid\":\"11c0d3e7-dd54-4115-b1fc-35f9e6ab465d\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 106200,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1062": {
                          "FaceURL": "https://i.ibb.co/N27zYRwG/4991faad51e1.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0004b",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.499989,
                        "posY": 1.59362745,
                        "posZ": 18.5000038,
                        "rotX": 0.00520513859,
                        "rotY": 180.000031,
                        "rotZ": 359.992767,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Fumée Noire",
                      "Description": "Arme. Risque. Poison.",
                      "GMNotes": "{\"id\":\"397747f6-57ae-4b33-8cd8-b515de8b7dac\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Arme. Risque. Poison.\",\"TtsZoopGuid\":\"397747f6-57ae-4b33-8cd8-b515de8b7dac\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 106100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1061": {
                          "FaceURL": "https://i.ibb.co/Q3KnT8Y6/2e69b2db5e4c.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0004a",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.499998,
                        "posY": 1.60341978,
                        "posZ": 18.5000019,
                        "rotX": 0.0102362074,
                        "rotY": 179.999924,
                        "rotZ": 0.00141417165,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Fumée Noire",
                      "Description": "Arme. Risque. Poison.",
                      "GMNotes": "{\"id\":\"1643cb46-f746-4645-828e-da48370a0223\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Arme. Risque. Poison.\",\"TtsZoopGuid\":\"1643cb46-f746-4645-828e-da48370a0223\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 106000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1060": {
                          "FaceURL": "https://i.ibb.co/rG8PZX7h/83b2e86b8215.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00049",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.499997,
                        "posY": 1.6130836,
                        "posZ": 18.4999981,
                        "rotX": 0.0121850511,
                        "rotY": 179.999634,
                        "rotZ": 0.00146415038,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Fumée Noire",
                      "Description": "Arme. Risque. Poison.",
                      "GMNotes": "{\"id\":\"1eddd3c7-b858-4130-9851-c820c18e3d99\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Arme. Risque. Poison.\",\"TtsZoopGuid\":\"1eddd3c7-b858-4130-9851-c820c18e3d99\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 105900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1059": {
                          "FaceURL": "https://i.ibb.co/Z66Z58Pz/2011ed99475e.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00055",
                      "Name": "Card",
                      "Transform": {
                        "posX": 9.0,
                        "posY": 1.622648,
                        "posZ": 18.5000019,
                        "rotX": 0.009099977,
                        "rotY": 179.999908,
                        "rotZ": 0.00418563327,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Civil Paniqué",
                      "Description": "Témoin.",
                      "GMNotes": "{\"id\":\"b83b5a10-4944-4846-8a13-c826c63b5c4b\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<size 8>T�moin.\",\"TtsZoopGuid\":\"b83b5a10-4944-4846-8a13-c826c63b5c4b\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Asset",
                        "PlayerCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 107100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1071": {
                          "FaceURL": "https://i.ibb.co/Y7FRb76n/a0a7a5f7d031.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00054",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.999996,
                        "posY": 1.63227749,
                        "posZ": 18.5,
                        "rotX": 0.009110879,
                        "rotY": 179.999908,
                        "rotZ": 0.00265140831,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Civil Paniqué",
                      "Description": "Témoin.",
                      "GMNotes": "{\"id\":\"ff3a14c9-22fc-4c2e-8fb0-47cbee420583\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<size 8>T�moin.\",\"TtsZoopGuid\":\"ff3a14c9-22fc-4c2e-8fb0-47cbee420583\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Asset",
                        "PlayerCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 107000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1070": {
                          "FaceURL": "https://i.ibb.co/4RgXG1xy/aa8074c54fe3.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00053",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.499987,
                        "posY": 1.64180362,
                        "posZ": 18.5000038,
                        "rotX": 0.006080257,
                        "rotY": 180.000076,
                        "rotZ": -0.0052655274,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Civil Paniqué",
                      "Description": "Témoins.",
                      "GMNotes": "{\"id\":\"91fdfb12-25c7-48c3-a7df-ef87560debfe\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<size 8>T�moin.\",\"TtsZoopGuid\":\"91fdfb12-25c7-48c3-a7df-ef87560debfe\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Asset",
                        "PlayerCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 106900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1069": {
                          "FaceURL": "https://i.ibb.co/DHGFt0ym/39d3fd25559f.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00052",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.499997,
                        "posY": 1.65159643,
                        "posZ": 18.4999981,
                        "rotX": 0.0120125124,
                        "rotY": 180.0001,
                        "rotZ": 0.00200392678,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Civil Paniqué",
                      "Description": "Témoin.",
                      "GMNotes": "{\"id\":\"335a03d5-0184-4021-b477-494c3eb119bd\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<size 8>T�moin.\",\"TtsZoopGuid\":\"335a03d5-0184-4021-b477-494c3eb119bd\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Asset",
                        "PlayerCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 106800,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1068": {
                          "FaceURL": "https://i.ibb.co/Cpz1dy1K/c08e74361913.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00051",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.499987,
                        "posY": 1.66107285,
                        "posZ": 18.5000038,
                        "rotX": 0.006308773,
                        "rotY": 180.000687,
                        "rotZ": -0.004733692,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Réfugié Opportuniste",
                      "Description": "Humanoïde. Témoin. Criminel.",
                      "GMNotes": "{\"id\":\"541803b4-754b-453c-8225-d7254f3e7663\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de. T�moin. Criminel.\",\"TtsZoopGuid\":\"541803b4-754b-453c-8225-d7254f3e7663\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 106700,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1067": {
                          "FaceURL": "https://i.ibb.co/xxbdYcN/5693f00201e3.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00050",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.499986,
                        "posY": 1.67070222,
                        "posZ": 18.5000038,
                        "rotX": 0.00641608424,
                        "rotY": 179.998932,
                        "rotZ": -0.00448420458,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Réfugié Opportuniste",
                      "Description": "Humanoïde. Témoin. Criminel.",
                      "GMNotes": "{\"id\":\"b25c3f01-243c-434c-9961-b2868a624bc5\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de. T�moin. Criminel.\",\"TtsZoopGuid\":\"b25c3f01-243c-434c-9961-b2868a624bc5\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 106600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1066": {
                          "FaceURL": "https://i.ibb.co/wrbhBPkP/7436750983e2.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0004f",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.499986,
                        "posY": 1.68033683,
                        "posZ": 18.5000038,
                        "rotX": 0.006525929,
                        "rotY": 180.001724,
                        "rotZ": -0.00423121033,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Réfugié Opportuniste",
                      "Description": "Humanoïde. Témoin. Criminel.",
                      "GMNotes": "{\"id\":\"ab6cc89e-df75-4680-b0f5-d868384f0232\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de. T�moin. Criminel.\",\"TtsZoopGuid\":\"ab6cc89e-df75-4680-b0f5-d868384f0232\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 106500,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1065": {
                          "FaceURL": "https://i.ibb.co/tpbVZF60/2633567d3983.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0005c",
                      "Name": "Card",
                      "Transform": {
                        "posX": 9.0,
                        "posY": 1.69004953,
                        "posZ": 18.5000019,
                        "rotX": 0.00941413548,
                        "rotY": 179.999954,
                        "rotZ": 0.00433841161,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Piétiné par la Foule",
                      "Description": "Terreur. Bévue.",
                      "GMNotes": "{\"id\":\"bab1d0e9-0ff0-411f-a4b7-86819fdd5ed5\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur. B�vue.\",\"TtsZoopGuid\":\"bab1d0e9-0ff0-411f-a4b7-86819fdd5ed5\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 107800,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1078": {
                          "FaceURL": "https://i.ibb.co/NdWnMPDg/3efcef921aa4.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0005b",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.999996,
                        "posY": 1.69968319,
                        "posZ": 18.5000019,
                        "rotX": 0.009423887,
                        "rotY": 180.000229,
                        "rotZ": 0.00306639913,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Piétiné par la Foule",
                      "Description": "Terreur. Bévue.",
                      "GMNotes": "{\"id\":\"257b12c7-3d91-41a9-8212-7dee4de61aaf\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur. B�vue.\",\"TtsZoopGuid\":\"257b12c7-3d91-41a9-8212-7dee4de61aaf\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 107700,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1077": {
                          "FaceURL": "https://i.ibb.co/tTsGLXxW/401782d56a71.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0005a",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.999995,
                        "posY": 1.70931327,
                        "posZ": 18.5000019,
                        "rotX": 0.009464149,
                        "rotY": 180.001,
                        "rotZ": 0.00312017184,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Piétiné par la Foule",
                      "Description": "Terreur. Bévue.",
                      "GMNotes": "{\"id\":\"d604671d-1a7f-4333-a473-f51c4fcfe417\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur. B�vue.\",\"TtsZoopGuid\":\"d604671d-1a7f-4333-a473-f51c4fcfe417\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 107600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1076": {
                          "FaceURL": "https://i.ibb.co/5QFHQwY/745bd7ba3486.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00059",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.999997,
                        "posY": 1.71883118,
                        "posZ": 18.0,
                        "rotX": 0.0100624189,
                        "rotY": 180.000229,
                        "rotZ": 0.00398278749,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Piétiné par la Foule",
                      "Description": "Terreur. Bévue.",
                      "GMNotes": "{\"id\":\"32247f69-3640-4921-acf4-c26423856bea\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur. B�vue.\",\"TtsZoopGuid\":\"32247f69-3640-4921-acf4-c26423856bea\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 107500,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1075": {
                          "FaceURL": "https://i.ibb.co/3yDfyz3L/53eec962c4ba.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00058",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.999999,
                        "posY": 1.72856724,
                        "posZ": 18.5000019,
                        "rotX": 0.009569901,
                        "rotY": 179.999481,
                        "rotZ": 0.00441396842,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Vrilles Rouges",
                      "Description": "Obstacle. Flore.",
                      "GMNotes": "{\"id\":\"93832613-4904-40fa-8ac2-5398a766353a\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Obstacle. Flore.\",\"TtsZoopGuid\":\"93832613-4904-40fa-8ac2-5398a766353a\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 107400,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1074": {
                          "FaceURL": "https://i.ibb.co/YBQtnnd0/4f292f10418c.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00057",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.499985,
                        "posY": 1.738131,
                        "posZ": 18.5000038,
                        "rotX": 0.00712226657,
                        "rotY": 180.000443,
                        "rotZ": -0.002866301,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Vrilles Rouges",
                      "Description": "Obstacle. Flore.",
                      "GMNotes": "{\"id\":\"7fb880fb-b112-4f93-9511-96b7cae867f7\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Obstacle. Flore.\",\"TtsZoopGuid\":\"7fb880fb-b112-4f93-9511-96b7cae867f7\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 107300,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1073": {
                          "FaceURL": "https://i.ibb.co/gFtVGQRS/5c3cbc1862c6.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00056",
                      "Name": "Card",
                      "Transform": {
                        "posX": 8.999999,
                        "posY": 1.74782467,
                        "posZ": 18.5000019,
                        "rotX": 0.009641694,
                        "rotY": 179.999985,
                        "rotZ": 0.004449005,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Vrilles Rouges",
                      "Description": "Obstacle. Flore.",
                      "GMNotes": "{\"id\":\"7420787d-39f6-4fbe-8e19-211d7a14afde\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Obstacle. Flore.\",\"TtsZoopGuid\":\"7420787d-39f6-4fbe-8e19-211d7a14afde\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 107200,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1072": {
                          "FaceURL": "https://i.ibb.co/WpHcFv46/8bed9bebf246.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                },
                {
                  "GUID": "dbaada",
                  "Name": "Custom_Model_Bag",
                  "Transform": {
                    "posX": -28.0000019,
                    "posY": 1.84000087,
                    "posZ": 6.49999762,
                    "rotX": -6.55013764E-06,
                    "rotY": 180.031082,
                    "rotZ": 7.2234144E-07,
                    "scaleX": 0.7,
                    "scaleY": 0.7,
                    "scaleZ": 0.7
                  },
                  "Nickname": "Sinon...",
                  "Description": "Placez selon le guide de campagne",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "CustomMesh": {
                    "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/11926483554487594/DE5A5F0712C858DA44D2563C6F1469957DC9FBFC/",
                    "NormalURL": "",
                    "ColliderURL": "",
                    "Convex": true,
                    "MaterialIndex": 3,
                    "TypeIndex": 6,
                    "CustomShader": {
                      "SpecularColor": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "SpecularIntensity": 0.0,
                      "SpecularSharpness": 2.0,
                      "FresnelStrength": 0.0
                    },
                    "CastShadows": true
                  },
                  "Bag": {
                    "Order": 0
                  },
                  "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
                  "LuaScriptState": "{\"ml\":{\"36c1d7\":{\"lock\":false,\"pos\":{\"x\":17.744,\"y\":1.536,\"z\":-6.0792},\"rot\":{\"x\":0.0109,\"y\":180.0043,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "36c1d7",
                      "Name": "Deck",
                      "Transform": {
                        "posX": 17.7440014,
                        "posY": 1.53596413,
                        "posZ": -6.07921267,
                        "rotX": 0.0108914264,
                        "rotY": 180.0043,
                        "rotZ": 0.00494905049,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Deck Acte (v. II)",
                      "Description": "Phobos et Deimos",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": false,
                      "SidewaysCard": false,
                      "DeckIDs": [
                        109500,
                        109300,
                        109200
                      ],
                      "CustomDeck": {
                        "1095": {
                          "FaceURL": "https://i.ibb.co/tw4gkpTf/d75f82c39f27.jpg",
                          "BackURL": "https://i.ibb.co/bgvNqyNv/d3844f9ae04c.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        },
                        "1093": {
                          "FaceURL": "https://i.ibb.co/2wC18cP/1491eab2d887.jpg",
                          "BackURL": "https://i.ibb.co/X169CFf/328ccd6f25c7.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        },
                        "1092": {
                          "FaceURL": "https://i.ibb.co/Gh40sKj/f94e89565d50.jpg",
                          "BackURL": "https://i.ibb.co/FkCn7vWD/cf76d150b67c.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": "",
                      "ContainedObjects": [
                        {
                          "GUID": "e00072",
                          "Name": "Card",
                          "Transform": {
                            "posX": -22.4993649,
                            "posY": 1.78360164,
                            "posZ": 22.5006161,
                            "rotX": 3.72137656E-05,
                            "rotY": 180.004166,
                            "rotZ": -0.000132715984,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "Assaut Aérien (v. II)",
                          "Description": "Acte 3",
                          "GMNotes": "{\"id\":\"4a8852dc-31ae-4e39-9838-ed12916ac939\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"4a8852dc-31ae-4e39-9838-ed12916ac939\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 109500,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1095": {
                              "FaceURL": "https://i.ibb.co/tw4gkpTf/d75f82c39f27.jpg",
                              "BackURL": "https://i.ibb.co/bgvNqyNv/d3844f9ae04c.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "06a899",
                          "Name": "Card",
                          "Transform": {
                            "posX": -22.5,
                            "posY": 1.829385,
                            "posZ": 22.5,
                            "rotX": -0.000619086437,
                            "rotY": 180.000031,
                            "rotZ": -0.000160009411,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "Évacuation",
                          "Description": "Acte 2",
                          "GMNotes": "{\"id\":\"a34e5270-e071-4244-b2ef-f77a7fd20874\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"a34e5270-e071-4244-b2ef-f77a7fd20874\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 109300,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1093": {
                              "FaceURL": "https://i.ibb.co/2wC18cP/1491eab2d887.jpg",
                              "BackURL": "https://i.ibb.co/X169CFf/328ccd6f25c7.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "37b9d4",
                          "Name": "Card",
                          "Transform": {
                            "posX": -22.5,
                            "posY": 1.86330628,
                            "posZ": 22.5,
                            "rotX": -0.000110861016,
                            "rotY": 180.000122,
                            "rotZ": -2.5180585E-05,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "La voix de la Raison",
                          "Description": "Acte 1",
                          "GMNotes": "{\"id\":\"84465435-751b-4671-857c-24425113a656\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"84465435-751b-4671-857c-24425113a656\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 109200,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1092": {
                              "FaceURL": "https://i.ibb.co/Gh40sKj/f94e89565d50.jpg",
                              "BackURL": "https://i.ibb.co/FkCn7vWD/cf76d150b67c.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "GUID": "e0005f",
                  "Name": "Card",
                  "Transform": {
                    "posX": 9.000003,
                    "posY": 1.50810337,
                    "posZ": 10.5,
                    "rotX": 0.010891255,
                    "rotY": 180.002548,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Station Pennsylvania",
                  "Description": "Newark.",
                  "GMNotes": "{\"id\":\"1dc5dd07-d8a2-4b3c-9116-9035e1322ab4\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Newark.\",\"locationFront\":{\"icons\":\"DoubleSlash\",\"connections\":\"Triangle|Circle|Square|Star|T\",\"uses\":[{\"countPerInvestigator\":3,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"DoubleSlash\",\"connections\":\"Triangle|Circle|Square|Star|T\"},\"TtsZoopGuid\":\"1dc5dd07-d8a2-4b3c-9116-9035e1322ab4\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 107900,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1079": {
                      "FaceURL": "https://i.ibb.co/2797qCgV/ba2b08ebc634.jpg",
                      "BackURL": "https://i.ibb.co/j9HTxNQF/c139581679d1.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00060",
                  "Name": "Card",
                  "Transform": {
                    "posX": -8.898346E-07,
                    "posY": 1.50888062,
                    "posZ": 10.500001,
                    "rotX": 0.0108915912,
                    "rotY": 179.999832,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Hôtel de Ville",
                  "Description": "Newark.",
                  "GMNotes": "{\"id\":\"f0c9fcb3-30a7-48b5-8881-ff13bcaa35c2\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Newark.\",\"locationFront\":{\"icons\":\"Square\",\"connections\":\"DoubleSlash|Cross|Star\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Square\",\"connections\":\"DoubleSlash|Cross|Star\"},\"TtsZoopGuid\":\"f0c9fcb3-30a7-48b5-8881-ff13bcaa35c2\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 108000,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1080": {
                      "FaceURL": "https://i.ibb.co/PzjdNLPt/52ae0f1b81ec.jpg",
                      "BackURL": "https://i.ibb.co/mFgsFy0Y/b922e57a826b.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00061",
                  "Name": "Card",
                  "Transform": {
                    "posX": 18.0,
                    "posY": 1.50732613,
                    "posZ": 10.500001,
                    "rotX": 0.0108914226,
                    "rotY": 180.002228,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Port de Newark",
                  "Description": "Newark.",
                  "GMNotes": "{\"id\":\"cbbe9ed4-de40-4f47-b89c-8d64944cbb16\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Newark.\",\"locationFront\":{\"icons\":\"Triangle\",\"connections\":\"DoubleSlash\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Triangle\",\"connections\":\"DoubleSlash\"},\"TtsZoopGuid\":\"cbbe9ed4-de40-4f47-b89c-8d64944cbb16\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 108100,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1081": {
                      "FaceURL": "https://i.ibb.co/FNwSSsh/964df7151c80.jpg",
                      "BackURL": "https://i.ibb.co/1Jh9Rh7n/3b929bb73bec.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00062",
                  "Name": "Card",
                  "Transform": {
                    "posX": 9.000002,
                    "posY": 1.50639248,
                    "posZ": 1.49999487,
                    "rotX": 0.0108916042,
                    "rotY": 179.999985,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Aéroport Métropolitain",
                  "Description": "Newark.",
                  "GMNotes": "{\"id\":\"46de2ff4-f641-4d4b-9cee-5121c97fc3bd\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Newark.\",\"locationFront\":{\"icons\":\"Circle\",\"connections\":\"DoubleSlash|Cross\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Circle\",\"connections\":\"DoubleSlash|Cross\"},\"TtsZoopGuid\":\"46de2ff4-f641-4d4b-9cee-5121c97fc3bd\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 108200,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1082": {
                      "FaceURL": "https://i.ibb.co/wFq10Ynn/be27277bd9f0.jpg",
                      "BackURL": "https://i.ibb.co/WrQsD9h/c5a7c9c69eaf.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00063",
                  "Name": "Card",
                  "Transform": {
                    "posX": -1.58661146E-06,
                    "posY": 1.50716972,
                    "posZ": 1.49999654,
                    "rotX": 0.0108915009,
                    "rotY": 180.000458,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Église de la Grâce",
                  "Description": "Newark.",
                  "GMNotes": "{\"id\":\"234c9884-9b4b-411c-8047-8392acedcf85\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Newark.\",\"locationFront\":{\"icons\":\"Cross\",\"connections\":\"Circle|Square\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Cross\",\"connections\":\"Circle|Square\"},\"TtsZoopGuid\":\"234c9884-9b4b-411c-8047-8392acedcf85\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 108300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1083": {
                      "FaceURL": "https://i.ibb.co/h1nbSyky/62036c8eff30.jpg",
                      "BackURL": "https://i.ibb.co/MDTZ8FkQ/d6c7c4c84066.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00064",
                  "Name": "Card",
                  "Transform": {
                    "posX": 4.49999952,
                    "posY": 1.51020277,
                    "posZ": 19.5000076,
                    "rotX": 0.0108914655,
                    "rotY": 180.000763,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Université Rutgers",
                  "Description": "Newark.",
                  "GMNotes": "{\"id\":\"f742f2b2-c7df-427f-91dc-c74a52198f27\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Newark.\",\"locationFront\":{\"icons\":\"Star\",\"connections\":\"DoubleSlash|Square|Heart\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Star\",\"connections\":\"DoubleSlash|Square|Heart\"},\"TtsZoopGuid\":\"f742f2b2-c7df-427f-91dc-c74a52198f27\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 108400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1084": {
                      "FaceURL": "https://i.ibb.co/fYfYwsqD/ca56d6698dfb.jpg",
                      "BackURL": "https://i.ibb.co/fdJMKSX0/a684b6527517.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00065",
                  "Name": "Card",
                  "Transform": {
                    "posX": 4.499999,
                    "posY": 1.51191366,
                    "posZ": 28.50002,
                    "rotX": 0.010891445,
                    "rotY": 180.000732,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Centre Médical St Michael",
                  "Description": "",
                  "GMNotes": "{\"id\":\"12a6bbf5-24cd-4877-b94b-eb41b211387f\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Newark.\",\"locationFront\":{\"icons\":\"Heart\",\"connections\":\"Star\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Heart\",\"connections\":\"Star\"},\"TtsZoopGuid\":\"12a6bbf5-24cd-4877-b94b-eb41b211387f\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 108500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1085": {
                      "FaceURL": "https://i.ibb.co/zkqYctq/f20487c4e556.jpg",
                      "BackURL": "https://i.ibb.co/SX1R1fP8/9281a0760483.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00069",
                  "Name": "Card",
                  "Transform": {
                    "posX": 23.5013,
                    "posY": 1.50380516,
                    "posZ": -5.52300167,
                    "rotX": 0.010891268,
                    "rotY": 180.00238,
                    "rotZ": 0.004948759,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Référence",
                  "Description": "Phobos et Deimos",
                  "GMNotes": "{\"id\":\"9c26da44-32ff-466d-a5cf-1098e6c15db3\",\"type\":\"ScenarioReference\",\"class\":\"Mythos\",\"tokens\":{\"front\":{\"Cultist\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-3. En cas d��chec, si vous �tes dans un lieu avec une carte Vrilles Rouges attach�e, d�faussez 1 carte prise au hasard dans votre main.\"},\"Skull\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-1 pour chaque <t>T�moin</t> en jeu.\"},\"Tablet\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-3. En cas d��chec, si vous �tes dans un lieu avec une carte Fum�e Noire attach�e, subissez 1 horreur.\"},\"Elder Thing\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-3. En cas d��chec, placez 1 de vos indices sur votre lieu.\"}},\"back\":{\"Cultist\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-4. Si vous �tes dans un lieu avec une carte Vrilles Rouges attach�e, d�faussez 1 carte prise au hasard dans votre main.\"},\"Skull\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-1 pour chaque <t>Alli�</t> et chaque <t>T�moin</t> en jeu.\"},\"Tablet\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-4. Si vous �tes dans un lieu avec une carte Fum�e Noire attach�e, subissez 1 horreur.\"},\"Elder Thing\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-4. Placez 1 de vos indices sur votre lieu.\"}}},\"TtsZoopGuid\":\"9c26da44-32ff-466d-a5cf-1098e6c15db3\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 108700,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1087": {
                      "FaceURL": "https://i.ibb.co/kgXBfCmK/a35de0a05cf7.jpg",
                      "BackURL": "https://i.ibb.co/3YYXf3vz/c3f77fd635c3.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0006a",
                  "Name": "Card",
                  "Transform": {
                    "posX": 2.50237417,
                    "posY": 1.50894964,
                    "posZ": 12.0001516,
                    "rotX": 0.0108915959,
                    "rotY": 179.999084,
                    "rotZ": 0.00494811963,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Professeur Richard Pierson ",
                  "Description": "Astronome de Princeton",
                  "GMNotes": "{\"id\":\"d3656f69-e784-4543-85b6-c960a0b877e3\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<size 8>Alli�. Scientifique.\",\"cost\":3,\"intellectIcons\":1,\"willpowerIcons\":1,\"wildIcons\":1,\"TtsZoopGuid\":\"d3656f69-e784-4543-85b6-c960a0b877e3\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Asset",
                    "PlayerCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 108800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1088": {
                      "FaceURL": "https://i.ibb.co/N2XB2Fvv/2f1fd0dbe0b5.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ],
              "AttachedDecals": [
                {
                  "Transform": {
                    "posX": -0.0021877822,
                    "posY": -0.08963572,
                    "posZ": -0.00288731651,
                    "rotX": 270.0,
                    "rotY": 359.869568,
                    "rotZ": 0.0,
                    "scaleX": 2.00000215,
                    "scaleY": 2.00000238,
                    "scaleZ": 2.00000262
                  },
                  "CustomDecal": {
                    "Name": "dunwich_back",
                    "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
                    "Size": 7.4
                  }
                }
              ]
            },
            {
              "GUID": "682bb0",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -5.00000334,
                "posY": 4.000096,
                "posZ": 53.8819,
                "rotX": -4.03650319E-07,
                "rotY": 180.0,
                "rotZ": 0.00109763781,
                "scaleX": 1.20052135,
                "scaleY": 0.249882281,
                "scaleZ": 1.3145982
              },
              "Nickname": "1: Premier Contact",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/1461933574036565027/BFC93EE20DEF6E27CE1C468B9533D3C69787FD4F/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
              "LuaScriptState": "{\"ml\":{\"05e736\":{\"lock\":true,\"pos\":{\"x\":6,\"y\":1.5208,\"z\":23.5},\"rot\":{\"x\":0.0109,\"y\":180.0053,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"103400\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.5038,\"z\":8.5},\"rot\":{\"x\":359.9881,\"y\":330,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"3f2140\":{\"lock\":false,\"pos\":{\"x\":8,\"y\":1.5061,\"z\":18.5},\"rot\":{\"x\":359.9881,\"y\":330.0001,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"5478b2\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.84,\"z\":7},\"rot\":{\"x\":0,\"y\":180.0303,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"556ef0\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.5052,\"z\":13},\"rot\":{\"x\":-0.0049,\"y\":270.0034,\"z\":0.0109},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"58ba5f\":{\"lock\":false,\"pos\":{\"x\":-32.5005,\"y\":1.8006,\"z\":5.9996},\"rot\":{\"x\":0,\"y\":180.0307,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"59897e\":{\"lock\":false,\"pos\":{\"x\":10.5,\"y\":1.503,\"z\":3.5},\"rot\":{\"x\":-0.0049,\"y\":270.0033,\"z\":0.0109},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":1.5,\"y\":1.5038,\"z\":3.5},\"rot\":{\"x\":-0.0049,\"y\":270.0034,\"z\":0.0109},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"78ebf8\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.84,\"z\":7},\"rot\":{\"x\":0,\"y\":180.0312,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"825882\":{\"lock\":false,\"pos\":{\"x\":4,\"y\":1.5065,\"z\":18.5},\"rot\":{\"x\":0.007,\"y\":209.9788,\"z\":0.0097},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"909f0c\":{\"lock\":false,\"pos\":{\"x\":12.7077,\"y\":1.5364,\"z\":-6.0793},\"rot\":{\"x\":0.0109,\"y\":180.0008,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9540d3\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.5042,\"z\":8.5},\"rot\":{\"x\":0.007,\"y\":209.9999,\"z\":0.0097},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"9d69b9\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.6558,\"z\":-2.9971},\"rot\":{\"x\":-0.0006,\"y\":180,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a37a19\":{\"lock\":false,\"pos\":{\"x\":3.5,\"y\":1.5046,\"z\":8.5},\"rot\":{\"x\":359.9881,\"y\":330,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e00033\":{\"lock\":false,\"pos\":{\"x\":-3,\"y\":1.5178,\"z\":3.5},\"rot\":{\"x\":0.0109,\"y\":179.9975,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00034\":{\"lock\":false,\"pos\":{\"x\":1.5,\"y\":1.5193,\"z\":13.5},\"rot\":{\"x\":0.0109,\"y\":180.0023,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00035\":{\"lock\":false,\"pos\":{\"x\":10.5,\"y\":1.5185,\"z\":13.5},\"rot\":{\"x\":0.0109,\"y\":180.003,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00036\":{\"lock\":false,\"pos\":{\"x\":6,\"y\":1.517,\"z\":3.5},\"rot\":{\"x\":0.0109,\"y\":180.0002,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00037\":{\"lock\":false,\"pos\":{\"x\":15,\"y\":1.5163,\"z\":3.5},\"rot\":{\"x\":0.0109,\"y\":180.0001,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00038\":{\"lock\":false,\"pos\":{\"x\":-28.5003,\"y\":1.7836,\"z\":5.9997},\"rot\":{\"x\":0,\"y\":179.9995,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0003b\":{\"lock\":false,\"pos\":{\"x\":23.5013,\"y\":1.5138,\"z\":-5.523},\"rot\":{\"x\":0.0109,\"y\":180.0025,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"eaecf4\":{\"lock\":false,\"pos\":{\"x\":-0.5,\"y\":1.5049,\"z\":8.5},\"rot\":{\"x\":0.007,\"y\":210,\"z\":0.0097},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}}}}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "05e736",
                  "Name": "CardCustom",
                  "Transform": {
                    "posX": 6.0,
                    "posY": 1.5208,
                    "posZ": 23.5,
                    "rotX": 0.0109,
                    "rotY": 180.0053,
                    "rotZ": 0.0049,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": true,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1114400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11144": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/1874087573755654274/E1C516725CC32556A9F093B96384451BDB4AB8D1/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/1874087573755654274/E1C516725CC32556A9F093B96384451BDB4AB8D1/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "5478b2",
                  "Name": "Custom_Model_Bag",
                  "Transform": {
                    "posX": -20.5000019,
                    "posY": 1.84000075,
                    "posZ": 6.99999666,
                    "rotX": -5.76225648E-06,
                    "rotY": 180.0304,
                    "rotZ": -1.464305E-07,
                    "scaleX": 0.7,
                    "scaleY": 0.7,
                    "scaleZ": 0.7
                  },
                  "Nickname": "Les investigateurs coopèrent avec l'armée",
                  "Description": "Placez selon le guide de campagne",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "CustomMesh": {
                    "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/11925850713601455/5FAE7F9A621007688A68069B25A293E5E1B2152E/",
                    "NormalURL": "",
                    "ColliderURL": "",
                    "Convex": true,
                    "MaterialIndex": 3,
                    "TypeIndex": 6,
                    "CustomShader": {
                      "SpecularColor": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "SpecularIntensity": 0.0,
                      "SpecularSharpness": 2.0,
                      "FresnelStrength": 0.0
                    },
                    "CastShadows": true
                  },
                  "Bag": {
                    "Order": 0
                  },
                  "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
                  "LuaScriptState": "{\"ml\":{\"c29564\":{\"lock\":false,\"pos\":{\"x\":17.744,\"y\":1.536,\"z\":-6.0792},\"rot\":{\"x\":0.0109,\"y\":179.9992,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"fb5642\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.5499,\"z\":-2.9971},\"rot\":{\"x\":-0.0006,\"y\":180.0001,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "fb5642",
                      "Name": "Deck",
                      "Transform": {
                        "posX": 30.5,
                        "posY": 1.54988325,
                        "posZ": -2.9971,
                        "rotX": -0.0005910893,
                        "rotY": 180.000092,
                        "rotZ": 180.001068,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Collaboration",
                      "Description": "Set de Rencontre",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": false,
                      "SidewaysCard": false,
                      "DeckIDs": [
                        103600,
                        103700,
                        103800,
                        103900,
                        104000,
                        104100
                      ],
                      "CustomDeck": {
                        "1036": {
                          "FaceURL": "https://i.ibb.co/vCW6f90z/af45815ec603.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        },
                        "1037": {
                          "FaceURL": "https://i.ibb.co/931hRv7f/9bf9a0b5efb9.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        },
                        "1038": {
                          "FaceURL": "https://i.ibb.co/xqnP4wtN/875ba27cfdd3.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        },
                        "1039": {
                          "FaceURL": "https://i.ibb.co/VWPSckMK/f15a0a1d5721.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        },
                        "1040": {
                          "FaceURL": "https://i.ibb.co/ym2rL0bM/c08fef714a30.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        },
                        "1041": {
                          "FaceURL": "https://i.ibb.co/PZ2ZXkr2/8c8cfb70dcac.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": "",
                      "ContainedObjects": [
                        {
                          "GUID": "e0002a",
                          "Name": "Card",
                          "Transform": {
                            "posX": -20.4966965,
                            "posY": 1.864801,
                            "posZ": 5.99972725,
                            "rotX": 0.00417874847,
                            "rotY": 180.019257,
                            "rotZ": 4.252945,
                            "scaleX": 1.0,
                            "scaleY": 1.0,
                            "scaleZ": 1.0
                          },
                          "Nickname": "Selon les Règles",
                          "Description": "Tâche. Bévue.",
                          "GMNotes": "{\"id\":\"8ad80650-1a2f-41d1-9077-d435b45d64d1\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>T�che. B�vue.\",\"TtsZoopGuid\":\"8ad80650-1a2f-41d1-9077-d435b45d64d1\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 103600,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1036": {
                              "FaceURL": "https://i.ibb.co/vCW6f90z/af45815ec603.jpg",
                              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": false,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e0002b",
                          "Name": "Card",
                          "Transform": {
                            "posX": -19.8824234,
                            "posY": 1.8679359,
                            "posZ": 5.99964571,
                            "rotX": 0.00425768225,
                            "rotY": 180.0128,
                            "rotZ": 4.41867971,
                            "scaleX": 1.0,
                            "scaleY": 1.0,
                            "scaleZ": 1.0
                          },
                          "Nickname": "Selon les Règles",
                          "Description": "Tâche. Bévue.",
                          "GMNotes": "{\"id\":\"a1c0ee86-1bbe-48e8-a489-e3414ae7110a\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>T�che. B�vue.\",\"TtsZoopGuid\":\"a1c0ee86-1bbe-48e8-a489-e3414ae7110a\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 103700,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1037": {
                              "FaceURL": "https://i.ibb.co/931hRv7f/9bf9a0b5efb9.jpg",
                              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": false,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e0002c",
                          "Name": "Card",
                          "Transform": {
                            "posX": -19.2678566,
                            "posY": 1.87350965,
                            "posZ": 5.9993906,
                            "rotX": 0.004633101,
                            "rotY": 180.014862,
                            "rotZ": 4.47061348,
                            "scaleX": 1.0,
                            "scaleY": 1.0,
                            "scaleZ": 1.0
                          },
                          "Nickname": "Selon les Règles",
                          "Description": "Tâche. Bévue.",
                          "GMNotes": "{\"id\":\"5511b00d-f39c-4946-be34-ec9203680e0c\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>T�che. B�vue.\",\"TtsZoopGuid\":\"5511b00d-f39c-4946-be34-ec9203680e0c\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 103800,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1038": {
                              "FaceURL": "https://i.ibb.co/xqnP4wtN/875ba27cfdd3.jpg",
                              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": false,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e0002d",
                          "Name": "Card",
                          "Transform": {
                            "posX": -18.6531429,
                            "posY": 1.88225377,
                            "posZ": 5.999421,
                            "rotX": 0.00517288875,
                            "rotY": 180.011459,
                            "rotZ": 4.62998629,
                            "scaleX": 1.0,
                            "scaleY": 1.0,
                            "scaleZ": 1.0
                          },
                          "Nickname": "Brèche dans la Défense",
                          "Description": "Tâche. Bévue.",
                          "GMNotes": "{\"id\":\"fda31ad5-4c7d-4a37-a7f2-0e5786843d5b\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>T�che. B�vue.\",\"TtsZoopGuid\":\"fda31ad5-4c7d-4a37-a7f2-0e5786843d5b\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 103900,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1039": {
                              "FaceURL": "https://i.ibb.co/VWPSckMK/f15a0a1d5721.jpg",
                              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": false,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e0002e",
                          "Name": "Card",
                          "Transform": {
                            "posX": -18.0422554,
                            "posY": 1.89401746,
                            "posZ": 5.99926662,
                            "rotX": 0.005077854,
                            "rotY": 180.013077,
                            "rotZ": 4.62998629,
                            "scaleX": 1.0,
                            "scaleY": 1.0,
                            "scaleZ": 1.0
                          },
                          "Nickname": "Brèche dans la Défense",
                          "Description": "Tâche. Bévue.",
                          "GMNotes": "{\"id\":\"bf375673-39dc-4aaf-9f5a-149074687b82\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>T�che. B�vue.\",\"TtsZoopGuid\":\"bf375673-39dc-4aaf-9f5a-149074687b82\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 104000,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1040": {
                              "FaceURL": "https://i.ibb.co/ym2rL0bM/c08fef714a30.jpg",
                              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": false,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e0002f",
                          "Name": "Card",
                          "Transform": {
                            "posX": -17.4361,
                            "posY": 1.9131918,
                            "posZ": 6.000228,
                            "rotX": 0.005457132,
                            "rotY": 179.995575,
                            "rotZ": 4.652823,
                            "scaleX": 1.0,
                            "scaleY": 1.0,
                            "scaleZ": 1.0
                          },
                          "Nickname": "Brèche dans la Défense",
                          "Description": "Tâche. Bévue.",
                          "GMNotes": "{\"id\":\"4a4b1db4-2795-4cf3-9b7a-36db919f047d\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>T�che. B�vue.\",\"TtsZoopGuid\":\"4a4b1db4-2795-4cf3-9b7a-36db919f047d\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 104100,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1041": {
                              "FaceURL": "https://i.ibb.co/PZ2ZXkr2/8c8cfb70dcac.jpg",
                              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": false,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        }
                      ]
                    },
                    {
                      "GUID": "c29564",
                      "Name": "Deck",
                      "Transform": {
                        "posX": 17.7440014,
                        "posY": 1.53596413,
                        "posZ": -6.079194,
                        "rotX": 0.0108917383,
                        "rotY": 179.999,
                        "rotZ": 0.0049480577,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Deck Acte",
                      "Description": "Premier Contact",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": false,
                      "SidewaysCard": false,
                      "DeckIDs": [
                        105600,
                        105400,
                        105200
                      ],
                      "CustomDeck": {
                        "1056": {
                          "FaceURL": "https://i.ibb.co/Ng5CwSjg/97270c89ab2f.jpg",
                          "BackURL": "https://i.ibb.co/zVPjgnTL/a0b2830e19c7.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        },
                        "1054": {
                          "FaceURL": "https://i.ibb.co/5W9B6QcF/2301b8f9e701.jpg",
                          "BackURL": "https://i.ibb.co/JRskrvNb/24b5a8a2b6ff.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        },
                        "1052": {
                          "FaceURL": "https://i.ibb.co/0j41pP9G/9c08870e02a0.jpg",
                          "BackURL": "https://i.ibb.co/DHr8dVkS/e4d627e03326.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": "",
                      "ContainedObjects": [
                        {
                          "GUID": "135a6d",
                          "Name": "Card",
                          "Transform": {
                            "posX": 18.5,
                            "posY": 1.51519239,
                            "posZ": -0.500003159,
                            "rotX": 0.0108796917,
                            "rotY": 179.999466,
                            "rotZ": 0.00498823076,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "Retraite Totale",
                          "Description": "Acte 3",
                          "GMNotes": "{\"id\":\"3201268c-0297-4140-a8f3-d397b695f42f\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"3201268c-0297-4140-a8f3-d397b695f42f\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 105600,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1056": {
                              "FaceURL": "https://i.ibb.co/Ng5CwSjg/97270c89ab2f.jpg",
                              "BackURL": "https://i.ibb.co/zVPjgnTL/a0b2830e19c7.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e00041",
                          "Name": "Card",
                          "Transform": {
                            "posX": 17.267992,
                            "posY": 2.55417275,
                            "posZ": 6.13519669,
                            "rotX": 0.0108916257,
                            "rotY": 180.0,
                            "rotZ": 0.00494826352,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "Info de Première Main (v.I)",
                          "Description": "Acte 2",
                          "GMNotes": "{\"id\":\"5f6ae4f5-fc42-48d3-a0da-50994734606b\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"5f6ae4f5-fc42-48d3-a0da-50994734606b\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 105400,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1054": {
                              "FaceURL": "https://i.ibb.co/5W9B6QcF/2301b8f9e701.jpg",
                              "BackURL": "https://i.ibb.co/JRskrvNb/24b5a8a2b6ff.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e0003f",
                          "Name": "Card",
                          "Transform": {
                            "posX": 17.7439785,
                            "posY": 1.58303773,
                            "posZ": -6.07922459,
                            "rotX": 0.00604143925,
                            "rotY": 180.0,
                            "rotZ": 0.0126736145,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "Paperasserie",
                          "Description": "Acte 1",
                          "GMNotes": "{\"id\":\"a4df2354-1f69-45d7-89a0-d50758e0ce43\",\"type\":\"Act\",\"class\":\"Mythos\",\"clueThresholdPerInvestigator\":3,\"TtsZoopGuid\":\"a4df2354-1f69-45d7-89a0-d50758e0ce43\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 105200,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1052": {
                              "FaceURL": "https://i.ibb.co/0j41pP9G/9c08870e02a0.jpg",
                              "BackURL": "https://i.ibb.co/DHr8dVkS/e4d627e03326.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "GUID": "58ba5f",
                  "Name": "Deck",
                  "Transform": {
                    "posX": -32.5005226,
                    "posY": 1.80055964,
                    "posZ": 5.999581,
                    "rotX": -5.089807E-06,
                    "rotY": 180.030731,
                    "rotZ": -4.82051981E-08,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": false,
                  "SidewaysCard": false,
                  "DeckIDs": [
                    100500,
                    100400
                  ],
                  "CustomDeck": {
                    "1005": {
                      "FaceURL": "https://i.ibb.co/spq8HMfB/09a701f665d3.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1004": {
                      "FaceURL": "https://i.ibb.co/hJkHy0Rs/b235665f1dea.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "e00006",
                      "Name": "Card",
                      "Transform": {
                        "posX": -33.00001,
                        "posY": 1.78360319,
                        "posZ": 6.49998474,
                        "rotX": 2.12722389E-05,
                        "rotY": 180.030045,
                        "rotZ": -0.00017475948,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Guerre",
                      "Description": "Monstre. Martien. Véhicule. Élite.",
                      "GMNotes": "{\"id\":\"8bbeeb7f-b856-4200-bfbd-3266bfc46011\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule. �lite.\",\"TtsZoopGuid\":\"8bbeeb7f-b856-4200-bfbd-3266bfc46011\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100500,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1005": {
                          "FaceURL": "https://i.ibb.co/spq8HMfB/09a701f665d3.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00005",
                      "Name": "Card",
                      "Transform": {
                        "posX": -33.0,
                        "posY": 1.82938576,
                        "posZ": 6.5,
                        "rotX": 0.000566801929,
                        "rotY": 180.030029,
                        "rotZ": -0.000693759939,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Guerre",
                      "Description": "Monstre. Martien. Véhicule. Élite.",
                      "GMNotes": "{\"id\":\"88c4d6a1-2e2a-4332-a487-defdd007be06\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule. �lite.\",\"TtsZoopGuid\":\"88c4d6a1-2e2a-4332-a487-defdd007be06\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100400,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1004": {
                          "FaceURL": "https://i.ibb.co/hJkHy0Rs/b235665f1dea.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                },
                {
                  "GUID": "78ebf8",
                  "Name": "Custom_Model_Bag",
                  "Transform": {
                    "posX": -24.5000057,
                    "posY": 1.84000087,
                    "posZ": 6.99999428,
                    "rotX": -5.22844357E-06,
                    "rotY": 180.03125,
                    "rotZ": -5.49738921E-08,
                    "scaleX": 0.7,
                    "scaleY": 0.7,
                    "scaleZ": 0.7
                  },
                  "Nickname": "Les investigateurs enquêtent sans autorisation",
                  "Description": "Placez selon le guide de campagen",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "MaterialIndex": -1,
                  "MeshIndex": -1,
                  "CustomMesh": {
                    "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                    "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/11925850713606285/5C7ADAF291F96A7BDAC24C0240805C5FC1D43088/",
                    "NormalURL": "",
                    "ColliderURL": "",
                    "Convex": true,
                    "MaterialIndex": 3,
                    "TypeIndex": 6,
                    "CustomShader": {
                      "SpecularColor": {
                        "r": 1.0,
                        "g": 1.0,
                        "b": 1.0
                      },
                      "SpecularIntensity": 0.0,
                      "SpecularSharpness": 2.0,
                      "FresnelStrength": 0.0
                    },
                    "CastShadows": true
                  },
                  "Bag": {
                    "Order": 0
                  },
                  "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
                  "LuaScriptState": "{\"ml\":{\"a60a49\":{\"lock\":false,\"pos\":{\"x\":17.744,\"y\":1.536,\"z\":-6.0792},\"rot\":{\"x\":0.0109,\"y\":180.0006,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ead1f0\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.5499,\"z\":-2.9971},\"rot\":{\"x\":-0.0006,\"y\":180,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "a60a49",
                      "Name": "Deck",
                      "Transform": {
                        "posX": -24.5000019,
                        "posY": 1.84000087,
                        "posZ": 6.999998,
                        "rotX": 0.0108922981,
                        "rotY": 180.000626,
                        "rotZ": 0.00494837249,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Deck Acte",
                      "Description": "Premier Contact",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": false,
                      "SidewaysCard": false,
                      "DeckIDs": [
                        105600,
                        105500,
                        105300
                      ],
                      "CustomDeck": {
                        "1056": {
                          "FaceURL": "https://i.ibb.co/Ng5CwSjg/97270c89ab2f.jpg",
                          "BackURL": "https://i.ibb.co/zVPjgnTL/a0b2830e19c7.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        },
                        "1055": {
                          "FaceURL": "https://i.ibb.co/yBQ5746m/25db1ee515c1.jpg",
                          "BackURL": "https://i.ibb.co/JRskrvNb/24b5a8a2b6ff.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        },
                        "1053": {
                          "FaceURL": "https://i.ibb.co/WjmQb7y/d8b111fb2cc3.jpg",
                          "BackURL": "https://i.ibb.co/KpRgDMLf/1deed1e9e42f.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": "",
                      "ContainedObjects": [
                        {
                          "GUID": "e00043",
                          "Name": "Card",
                          "Transform": {
                            "posX": -25.49953,
                            "posY": 1.78360379,
                            "posZ": 29.5003281,
                            "rotX": -3.11740473E-06,
                            "rotY": 180.000641,
                            "rotZ": -3.63477483E-07,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "Retraite Totale",
                          "Description": "Acte 3",
                          "GMNotes": "{\"id\":\"3201268c-0297-4140-a8f3-d397b695f42f\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"3201268c-0297-4140-a8f3-d397b695f42f\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 105600,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1056": {
                              "FaceURL": "https://i.ibb.co/Ng5CwSjg/97270c89ab2f.jpg",
                              "BackURL": "https://i.ibb.co/zVPjgnTL/a0b2830e19c7.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e00042",
                          "Name": "Card",
                          "Transform": {
                            "posX": -25.5,
                            "posY": 1.84297848,
                            "posZ": 29.5,
                            "rotX": 0.711397767,
                            "rotY": 180.002274,
                            "rotZ": 3.28255169E-06,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "Info de Première Main (v.II)",
                          "Description": "Acte 2",
                          "GMNotes": "{\"id\":\"5500e5e9-2ae3-4421-ae66-a3cedb3eaff7\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"5500e5e9-2ae3-4421-ae66-a3cedb3eaff7\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 105500,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1055": {
                              "FaceURL": "https://i.ibb.co/yBQ5746m/25db1ee515c1.jpg",
                              "BackURL": "https://i.ibb.co/JRskrvNb/24b5a8a2b6ff.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e00040",
                          "Name": "Card",
                          "Transform": {
                            "posX": -25.5,
                            "posY": 1.86330557,
                            "posZ": 29.5,
                            "rotX": -0.000108375432,
                            "rotY": 180.000381,
                            "rotZ": -2.558045E-05,
                            "scaleX": 0.714285731,
                            "scaleY": 1.0,
                            "scaleZ": 0.714285731
                          },
                          "Nickname": "Violation du Périmètre",
                          "Description": "Acte 1",
                          "GMNotes": "{\"id\":\"ce4b4af6-15ac-4a8d-9d0e-9a653aaf843d\",\"type\":\"Act\",\"class\":\"Mythos\",\"clueThresholdPerInvestigator\":2,\"TtsZoopGuid\":\"ce4b4af6-15ac-4a8d-9d0e-9a653aaf843d\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 105300,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1053": {
                              "FaceURL": "https://i.ibb.co/WjmQb7y/d8b111fb2cc3.jpg",
                              "BackURL": "https://i.ibb.co/KpRgDMLf/1deed1e9e42f.jpg",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": true,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        }
                      ]
                    },
                    {
                      "GUID": "ead1f0",
                      "Name": "Deck",
                      "Transform": {
                        "posX": -24.5000019,
                        "posY": 1.84000087,
                        "posZ": 6.999998,
                        "rotX": -0.0005910891,
                        "rotY": 179.999985,
                        "rotZ": 180.001068,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Contournement",
                      "Description": "Set de Rencontre",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": false,
                      "SidewaysCard": false,
                      "DeckIDs": [
                        103000,
                        103100,
                        103200,
                        103300,
                        103400,
                        103500
                      ],
                      "CustomDeck": {
                        "1030": {
                          "FaceURL": "https://i.ibb.co/wHz5pHL/fa8dacead74f.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        },
                        "1031": {
                          "FaceURL": "https://i.ibb.co/4ZMwFfHG/a2dd7e3c3fbc.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        },
                        "1032": {
                          "FaceURL": "https://i.ibb.co/DfnrrCRD/7cd3280fa425.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        },
                        "1033": {
                          "FaceURL": "https://i.ibb.co/rRZt88Hc/a4bda9b09cad.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        },
                        "1034": {
                          "FaceURL": "https://i.ibb.co/tMqK5YRf/9e8fa330c22f.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        },
                        "1035": {
                          "FaceURL": "https://i.ibb.co/sdgQM3pT/b2dd36e2edce.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": "",
                      "ContainedObjects": [
                        {
                          "GUID": "e00022",
                          "Name": "Card",
                          "Transform": {
                            "posX": -20.49671,
                            "posY": 1.86480176,
                            "posZ": 2.49972439,
                            "rotX": 0.00417452352,
                            "rotY": 180.019226,
                            "rotZ": 4.25297165,
                            "scaleX": 1.0,
                            "scaleY": 1.0,
                            "scaleZ": 1.0
                          },
                          "Nickname": "Pris entre Deux Feux",
                          "Description": "Risque. Bévue.",
                          "GMNotes": "{\"id\":\"e86a346d-1ee3-4e4f-aced-021d0a69be72\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque. B�vue.\",\"TtsZoopGuid\":\"e86a346d-1ee3-4e4f-aced-021d0a69be72\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 103000,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1030": {
                              "FaceURL": "https://i.ibb.co/wHz5pHL/fa8dacead74f.jpg",
                              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": false,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e00023",
                          "Name": "Card",
                          "Transform": {
                            "posX": -19.8824329,
                            "posY": 1.86793637,
                            "posZ": 2.49964857,
                            "rotX": 0.00426768651,
                            "rotY": 180.01265,
                            "rotZ": 4.41867065,
                            "scaleX": 1.0,
                            "scaleY": 1.0,
                            "scaleZ": 1.0
                          },
                          "Nickname": "Pris entre Deux Feux",
                          "Description": "Risque. Bévue.",
                          "GMNotes": "{\"id\":\"a021bf2a-3a08-40ad-8bc4-9f9b538df727\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque. B�vue.\",\"TtsZoopGuid\":\"a021bf2a-3a08-40ad-8bc4-9f9b538df727\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 103100,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1031": {
                              "FaceURL": "https://i.ibb.co/4ZMwFfHG/a2dd7e3c3fbc.jpg",
                              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": false,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e00024",
                          "Name": "Card",
                          "Transform": {
                            "posX": -19.2678661,
                            "posY": 1.87350965,
                            "posZ": 2.49939442,
                            "rotX": 0.00463107741,
                            "rotY": 180.014786,
                            "rotZ": 4.470629,
                            "scaleX": 1.0,
                            "scaleY": 1.0,
                            "scaleZ": 1.0
                          },
                          "Nickname": "Pris entre Deux Feux",
                          "Description": "Risque. Bévue.",
                          "GMNotes": "{\"id\":\"254c5ff2-20be-440e-b58a-f94592d9f623\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque. B�vue.\",\"TtsZoopGuid\":\"254c5ff2-20be-440e-b58a-f94592d9f623\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 103200,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1032": {
                              "FaceURL": "https://i.ibb.co/DfnrrCRD/7cd3280fa425.jpg",
                              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": false,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e00025",
                          "Name": "Card",
                          "Transform": {
                            "posX": -18.6531544,
                            "posY": 1.88225389,
                            "posZ": 2.49942613,
                            "rotX": 0.005170274,
                            "rotY": 180.011368,
                            "rotZ": 4.63000345,
                            "scaleX": 1.0,
                            "scaleY": 1.0,
                            "scaleZ": 1.0
                          },
                          "Nickname": "Sentinelle de la Milice",
                          "Description": "Humanoïde.",
                          "GMNotes": "{\"id\":\"c3fccd4b-3397-4fd1-93e4-af24a252fc65\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de.\",\"TtsZoopGuid\":\"c3fccd4b-3397-4fd1-93e4-af24a252fc65\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 103300,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1033": {
                              "FaceURL": "https://i.ibb.co/rRZt88Hc/a4bda9b09cad.jpg",
                              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": false,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e00026",
                          "Name": "Card",
                          "Transform": {
                            "posX": -18.042263,
                            "posY": 1.89401746,
                            "posZ": 2.499273,
                            "rotX": 0.005074965,
                            "rotY": 180.012985,
                            "rotZ": 4.63000345,
                            "scaleX": 1.0,
                            "scaleY": 1.0,
                            "scaleZ": 1.0
                          },
                          "Nickname": "Sentinelle de la Milice",
                          "Description": "Humanoïde.",
                          "GMNotes": "{\"id\":\"6487f2c5-b114-4a45-b45a-28a73839214b\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de.\",\"TtsZoopGuid\":\"6487f2c5-b114-4a45-b45a-28a73839214b\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 103400,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1034": {
                              "FaceURL": "https://i.ibb.co/tMqK5YRf/9e8fa330c22f.jpg",
                              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": false,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        },
                        {
                          "GUID": "e00027",
                          "Name": "Card",
                          "Transform": {
                            "posX": -17.4361057,
                            "posY": 1.91319156,
                            "posZ": 2.500238,
                            "rotX": 0.005454441,
                            "rotY": 179.995453,
                            "rotZ": 4.652841,
                            "scaleX": 1.0,
                            "scaleY": 1.0,
                            "scaleZ": 1.0
                          },
                          "Nickname": "Sentinelle de la Milice",
                          "Description": "Humanoïde.",
                          "GMNotes": "{\"id\":\"95582338-68c6-48cd-9b51-8e57220b8041\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de.\",\"TtsZoopGuid\":\"95582338-68c6-48cd-9b51-8e57220b8041\"}",
                          "AltLookAngle": {
                            "x": 0.0,
                            "y": 0.0,
                            "z": 0.0
                          },
                          "ColorDiffuse": {
                            "r": 0.713235259,
                            "g": 0.713235259,
                            "b": 0.713235259
                          },
                          "Tags": [
                            "ScenarioCard"
                          ],
                          "LayoutGroupSortIndex": 0,
                          "Value": 0,
                          "Locked": false,
                          "Grid": true,
                          "Snap": true,
                          "IgnoreFoW": false,
                          "MeasureMovement": false,
                          "DragSelectable": true,
                          "Autoraise": true,
                          "Sticky": true,
                          "Tooltip": true,
                          "GridProjection": false,
                          "HideWhenFaceDown": true,
                          "Hands": true,
                          "CardID": 103500,
                          "SidewaysCard": false,
                          "CustomDeck": {
                            "1035": {
                              "FaceURL": "https://i.ibb.co/sdgQM3pT/b2dd36e2edce.jpg",
                              "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                              "NumWidth": 1,
                              "NumHeight": 1,
                              "BackIsHidden": true,
                              "UniqueBack": false,
                              "Type": 0
                            }
                          },
                          "LuaScript": "",
                          "LuaScriptState": "",
                          "XmlUI": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "GUID": "909f0c",
                  "Name": "Deck",
                  "Transform": {
                    "posX": 12.7077036,
                    "posY": 1.52639937,
                    "posZ": -6.07930231,
                    "rotX": 0.01089181,
                    "rotY": 180.000824,
                    "rotZ": 0.00494845025,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Deck Intrigue",
                  "Description": "Premier Contact",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": false,
                  "SidewaysCard": false,
                  "DeckIDs": [
                    105100,
                    105000,
                    104900
                  ],
                  "CustomDeck": {
                    "1051": {
                      "FaceURL": "https://i.ibb.co/j9dqt3Kv/875762978f7e.jpg",
                      "BackURL": "https://i.ibb.co/zWyhM1Xn/5376ccd434ac.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "1050": {
                      "FaceURL": "https://i.ibb.co/bgmgkz9d/d0d153a5d485.jpg",
                      "BackURL": "https://i.ibb.co/84NY1y84/92aa6d602be7.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "1049": {
                      "FaceURL": "https://i.ibb.co/1JGhY4Dx/0ca0d8207a33.jpg",
                      "BackURL": "https://i.ibb.co/20GCvd2H/90d7249e2048.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "e0003e",
                      "Name": "Card",
                      "Transform": {
                        "posX": -30.49977,
                        "posY": 1.7835865,
                        "posZ": 28.0001736,
                        "rotX": 0.000245345174,
                        "rotY": 180.002228,
                        "rotZ": -0.000831148238,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "L'Avancée Martienne",
                      "Description": "Intrigue 3",
                      "GMNotes": "{\"id\":\"1bb59567-0f2a-4f36-bcd9-bc1bb0635ad6\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":8,\"TtsZoopGuid\":\"1bb59567-0f2a-4f36-bcd9-bc1bb0635ad6\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 105100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1051": {
                          "FaceURL": "https://i.ibb.co/j9dqt3Kv/875762978f7e.jpg",
                          "BackURL": "https://i.ibb.co/zWyhM1Xn/5376ccd434ac.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0003d",
                      "Name": "Card",
                      "Transform": {
                        "posX": 7.108257,
                        "posY": 3.224559,
                        "posZ": -8.149113,
                        "rotX": 5.377141E-07,
                        "rotY": 180.001968,
                        "rotZ": -3.26990239E-08,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Perdre du Terrain",
                      "Description": "Intrigue 2",
                      "GMNotes": "{\"id\":\"d5beaa04-d3b9-4da3-a99f-07e31b93e20d\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":4,\"TtsZoopGuid\":\"d5beaa04-d3b9-4da3-a99f-07e31b93e20d\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 105000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1050": {
                          "FaceURL": "https://i.ibb.co/bgmgkz9d/d0d153a5d485.jpg",
                          "BackURL": "https://i.ibb.co/84NY1y84/92aa6d602be7.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0003c",
                      "Name": "Card",
                      "Transform": {
                        "posX": 12.7076769,
                        "posY": 1.59326112,
                        "posZ": -6.07924652,
                        "rotX": 0.0467593521,
                        "rotY": 180.0,
                        "rotZ": 0.0248482171,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Le Cratère D'Impact",
                      "Description": "Intrigue 1",
                      "GMNotes": "{\"id\":\"4c5da857-f52d-42d7-9ccf-cc0bbac4f292\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":4,\"TtsZoopGuid\":\"4c5da857-f52d-42d7-9ccf-cc0bbac4f292\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 104900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1049": {
                          "FaceURL": "https://i.ibb.co/1JGhY4Dx/0ca0d8207a33.jpg",
                          "BackURL": "https://i.ibb.co/20GCvd2H/90d7249e2048.jpg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                },
                {
                  "GUID": "9d69b9",
                  "Name": "Deck",
                  "Transform": {
                    "posX": 30.5,
                    "posY": 1.65579212,
                    "posZ": -2.9971,
                    "rotX": -0.0005911847,
                    "rotY": 180.0,
                    "rotZ": 180.001068,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Deck Rencontre",
                  "Description": "Premier Contact",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": false,
                  "SidewaysCard": false,
                  "DeckIDs": [
                    100000,
                    100100,
                    100200,
                    100600,
                    100600,
                    100700,
                    100800,
                    101000,
                    100900,
                    101100,
                    101200,
                    101300,
                    101400,
                    101500,
                    101600,
                    101700,
                    102900,
                    102800,
                    102700,
                    102600,
                    102500,
                    102400,
                    102300,
                    102200,
                    102100,
                    102000,
                    101900,
                    101800
                  ],
                  "CustomDeck": {
                    "1000": {
                      "FaceURL": "https://i.ibb.co/FkLGvLQ6/1853020f2ea5.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1001": {
                      "FaceURL": "https://i.ibb.co/VY16TSfm/1ffb0b7af581.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1002": {
                      "FaceURL": "https://i.ibb.co/Xkj6bXtK/1149eaf7722e.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1006": {
                      "FaceURL": "https://i.ibb.co/wFY7rdk0/ccb3bd802f0c.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1007": {
                      "FaceURL": "https://i.ibb.co/9Hq4vLzZ/1546bda9a53d.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1008": {
                      "FaceURL": "https://i.ibb.co/21JqFSXc/94437f4a1a6a.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1010": {
                      "FaceURL": "https://i.ibb.co/wFDqS5z5/55395d324b38.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1009": {
                      "FaceURL": "https://i.ibb.co/s9BVLvKk/f408c977806f.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1011": {
                      "FaceURL": "https://i.ibb.co/tTvXv81S/64582f148e3f.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1012": {
                      "FaceURL": "https://i.ibb.co/qb3pCbh/6eefa724116e.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1013": {
                      "FaceURL": "https://i.ibb.co/N2ZmjDy0/2689d0439351.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1014": {
                      "FaceURL": "https://i.ibb.co/Ld6Xgw1b/292d138ef7e6.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1015": {
                      "FaceURL": "https://i.ibb.co/CL2Y05Y/a1eaa15b117a.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1016": {
                      "FaceURL": "https://i.ibb.co/xt59n3k9/60ae774e11d9.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1017": {
                      "FaceURL": "https://i.ibb.co/Q7p0jCjj/f5ee96258e69.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1029": {
                      "FaceURL": "https://i.ibb.co/Gfpdv9vX/d14dd6ca228b.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1028": {
                      "FaceURL": "https://i.ibb.co/0VjF5tXz/0621284741be.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1027": {
                      "FaceURL": "https://i.ibb.co/zhfN3kfM/b722ab7d4469.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1026": {
                      "FaceURL": "https://i.ibb.co/TDLCJyB7/e31242fc13fe.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1025": {
                      "FaceURL": "https://i.ibb.co/svjbWkh4/d27f33793fce.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1024": {
                      "FaceURL": "https://i.ibb.co/HLVprdzT/fa6c972245c3.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1023": {
                      "FaceURL": "https://i.ibb.co/v4cmbvCD/9017cb6493bf.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1022": {
                      "FaceURL": "https://i.ibb.co/zTBN9Cbv/18acc0a5adcc.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1021": {
                      "FaceURL": "https://i.ibb.co/cXYMS11K/06cee1a598de.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1020": {
                      "FaceURL": "https://i.ibb.co/nx3QM6R/2275f4d079e6.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1019": {
                      "FaceURL": "https://i.ibb.co/9HPyZqDL/d52051f76237.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1018": {
                      "FaceURL": "https://i.ibb.co/HTrpTz3H/67493f0d6b1d.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "e00001",
                      "Name": "Card",
                      "Transform": {
                        "posX": -12.423461,
                        "posY": 1.6677227,
                        "posZ": 16.9967613,
                        "rotX": 0.0128187109,
                        "rotY": 180.029633,
                        "rotZ": 7.710931,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Corps Calcinés",
                      "Description": "Terreur.",
                      "GMNotes": "{\"id\":\"da24f4d5-1124-4a6a-8dad-cec326fe1dd0\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur.\",\"TtsZoopGuid\":\"da24f4d5-1124-4a6a-8dad-cec326fe1dd0\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1000": {
                          "FaceURL": "https://i.ibb.co/FkLGvLQ6/1853020f2ea5.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00002",
                      "Name": "Card",
                      "Transform": {
                        "posX": -13.0352421,
                        "posY": 1.68722749,
                        "posZ": 16.9970074,
                        "rotX": 0.01615924,
                        "rotY": 180.0155,
                        "rotZ": 7.7655673,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Corps Calcinés",
                      "Description": "Terreur.",
                      "GMNotes": "{\"id\":\"070c286c-c8dc-4690-adb2-4ecf07ab3878\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur.\",\"TtsZoopGuid\":\"070c286c-c8dc-4690-adb2-4ecf07ab3878\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1001": {
                          "FaceURL": "https://i.ibb.co/VY16TSfm/1ffb0b7af581.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00003",
                      "Name": "Card",
                      "Transform": {
                        "posX": -13.6469126,
                        "posY": 1.712217,
                        "posZ": 16.997036,
                        "rotX": 0.01602593,
                        "rotY": 180.045456,
                        "rotZ": 7.76556253,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Corps Calcinés",
                      "Description": "Terreur.",
                      "GMNotes": "{\"id\":\"5d34f38f-977c-4438-855e-4f12866049c6\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur.\",\"TtsZoopGuid\":\"5d34f38f-977c-4438-855e-4f12866049c6\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100200,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1002": {
                          "FaceURL": "https://i.ibb.co/Xkj6bXtK/1149eaf7722e.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00007",
                      "Name": "Card",
                      "Transform": {
                        "posX": 74.15577,
                        "posY": 2.103604,
                        "posZ": 3.4129045,
                        "rotX": -4.8879524E-06,
                        "rotY": 179.999832,
                        "rotZ": 3.140314E-07,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Manutention",
                      "Description": "Monstre. Martien. Véhicule.",
                      "GMNotes": "{\"id\":\"a4e6c295-e8b9-4a3b-be6b-537325a98819\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule.\",\"TtsZoopGuid\":\"a4e6c295-e8b9-4a3b-be6b-537325a98819\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1006": {
                          "FaceURL": "https://i.ibb.co/wFY7rdk0/ccb3bd802f0c.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "affd6e",
                      "Name": "Card",
                      "Transform": {
                        "posX": 72.92008,
                        "posY": 2.10360432,
                        "posZ": 3.412999,
                        "rotX": -4.920944E-06,
                        "rotY": 180.000015,
                        "rotZ": 5.145343E-07,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Manutention",
                      "Description": "Monstre. Martien. Véhicule.",
                      "GMNotes": "{\"id\":\"a4e6c295-e8b9-4a3b-be6b-537325a98819\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule.\",\"TtsZoopGuid\":\"a4e6c295-e8b9-4a3b-be6b-537325a98819\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1006": {
                          "FaceURL": "https://i.ibb.co/wFY7rdk0/ccb3bd802f0c.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00008",
                      "Name": "Card",
                      "Transform": {
                        "posX": -14.8736181,
                        "posY": 1.786067,
                        "posZ": 16.997776,
                        "rotX": 0.0199360345,
                        "rotY": 180.055389,
                        "rotZ": 7.7814765,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Machine de Manutention",
                      "Description": "Monstre. Martien. Véhicule.",
                      "GMNotes": "{\"id\":\"4f0e5795-bf80-4658-b4c0-1fc4893f5a6a\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien. V�hicule.\",\"TtsZoopGuid\":\"4f0e5795-bf80-4658-b4c0-1fc4893f5a6a\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100700,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1007": {
                          "FaceURL": "https://i.ibb.co/9Hq4vLzZ/1546bda9a53d.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00009",
                      "Name": "Card",
                      "Transform": {
                        "posX": -15.4885769,
                        "posY": 1.82699776,
                        "posZ": 16.9983788,
                        "rotX": 0.0238457154,
                        "rotY": 180.047653,
                        "rotZ": 7.59634542,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Technicien Martien",
                      "Description": "Monstre. Martien.",
                      "GMNotes": "{\"id\":\"3843ba4e-430c-48c5-8386-bad9e231cce5\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien.\",\"TtsZoopGuid\":\"3843ba4e-430c-48c5-8386-bad9e231cce5\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100800,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1008": {
                          "FaceURL": "https://i.ibb.co/21JqFSXc/94437f4a1a6a.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000b",
                      "Name": "Card",
                      "Transform": {
                        "posX": -16.7096634,
                        "posY": 1.877186,
                        "posZ": 16.9994335,
                        "rotX": 0.0291825831,
                        "rotY": 180.042038,
                        "rotZ": 7.041579,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Technicien Martien",
                      "Description": "Monstre. Martien.",
                      "GMNotes": "{\"id\":\"4cf03802-40c6-4601-994d-4fde1029a976\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien.\",\"TtsZoopGuid\":\"4cf03802-40c6-4601-994d-4fde1029a976\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1010": {
                          "FaceURL": "https://i.ibb.co/wFDqS5z5/55395d324b38.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000a",
                      "Name": "Card",
                      "Transform": {
                        "posX": -16.0993061,
                        "posY": 1.857675,
                        "posZ": 16.9989319,
                        "rotX": 0.0238452144,
                        "rotY": 180.047974,
                        "rotZ": 7.596347,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Technicien Martien",
                      "Description": "Monstre. Martien.",
                      "GMNotes": "{\"id\":\"1b5ed978-434d-4a3f-8828-63058188cf77\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien.\",\"TtsZoopGuid\":\"1b5ed978-434d-4a3f-8828-63058188cf77\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1009": {
                          "FaceURL": "https://i.ibb.co/s9BVLvKk/f408c977806f.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000c",
                      "Name": "Card",
                      "Transform": {
                        "posX": -17.32312,
                        "posY": 1.88639426,
                        "posZ": 16.9998264,
                        "rotX": 0.0291832238,
                        "rotY": 180.042023,
                        "rotZ": 7.04157925,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Technicien Martien",
                      "Description": "Monstre. Martien.",
                      "GMNotes": "{\"id\":\"b2297402-cb81-4673-ba84-c8883bd92152\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Martien.\",\"TtsZoopGuid\":\"b2297402-cb81-4673-ba84-c8883bd92152\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1011": {
                          "FaceURL": "https://i.ibb.co/tTvXv81S/64582f148e3f.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000d",
                      "Name": "Card",
                      "Transform": {
                        "posX": -17.9330025,
                        "posY": 1.89204621,
                        "posZ": 17.000433,
                        "rotX": 0.0368621647,
                        "rotY": 180.029816,
                        "rotZ": 5.97499657,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Chercheur",
                      "Description": "Appareil. Manigance.",
                      "GMNotes": "{\"id\":\"cacced9c-b70e-4152-b4af-e2a154f3a545\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Appareil. Manigance.\",\"TtsZoopGuid\":\"cacced9c-b70e-4152-b4af-e2a154f3a545\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101200,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1012": {
                          "FaceURL": "https://i.ibb.co/qb3pCbh/6eefa724116e.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000e",
                      "Name": "Card",
                      "Transform": {
                        "posX": -18.5391178,
                        "posY": 1.889417,
                        "posZ": 17.00034,
                        "rotX": 0.0334006175,
                        "rotY": 180.025665,
                        "rotZ": 5.50415754,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Chercheur",
                      "Description": "Appareil. Manigance.",
                      "GMNotes": "{\"id\":\"af93e289-6fa5-43a6-a059-2164b0c89edc\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8.5>Appareil. Manigance.\",\"TtsZoopGuid\":\"af93e289-6fa5-43a6-a059-2164b0c89edc\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101300,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1013": {
                          "FaceURL": "https://i.ibb.co/N2ZmjDy0/2689d0439351.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000f",
                      "Name": "Card",
                      "Transform": {
                        "posX": -19.15128,
                        "posY": 1.88124156,
                        "posZ": 17.0007954,
                        "rotX": 0.05021061,
                        "rotY": 180.038818,
                        "rotZ": 5.04763746,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Chercheur",
                      "Description": "Appareil. Manigance.",
                      "GMNotes": "{\"id\":\"336a8f1f-abb6-4702-88da-6bb5cba39e1a\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Appareil. Manigance.\",\"TtsZoopGuid\":\"336a8f1f-abb6-4702-88da-6bb5cba39e1a\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101400,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1014": {
                          "FaceURL": "https://i.ibb.co/Ld6Xgw1b/292d138ef7e6.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00010",
                      "Name": "Card",
                      "Transform": {
                        "posX": -19.7654476,
                        "posY": 1.88246,
                        "posZ": 17.0011978,
                        "rotX": 0.03817355,
                        "rotY": 180.037369,
                        "rotZ": 5.030809,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Ardent",
                      "Description": "Arme. Feu.",
                      "GMNotes": "{\"id\":\"a760e578-b624-478b-a135-a78fd92631f6\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Arme. Feu.\",\"TtsZoopGuid\":\"a760e578-b624-478b-a135-a78fd92631f6\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101500,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1015": {
                          "FaceURL": "https://i.ibb.co/CL2Y05Y/a1eaa15b117a.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00011",
                      "Name": "Card",
                      "Transform": {
                        "posX": -20.3797436,
                        "posY": 1.88313949,
                        "posZ": 17.001688,
                        "rotX": 0.03391226,
                        "rotY": 180.041962,
                        "rotZ": 4.878934,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Ardent",
                      "Description": "Arme. Feu.",
                      "GMNotes": "{\"id\":\"d3aaf2fb-1fc5-43a3-b96c-73a615c88263\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Arme. Feu.\",\"TtsZoopGuid\":\"d3aaf2fb-1fc5-43a3-b96c-73a615c88263\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1016": {
                          "FaceURL": "https://i.ibb.co/xt59n3k9/60ae774e11d9.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00012",
                      "Name": "Card",
                      "Transform": {
                        "posX": -20.9940357,
                        "posY": 1.88542736,
                        "posZ": 17.0021343,
                        "rotX": 0.03391102,
                        "rotY": 180.041977,
                        "rotZ": 4.878934,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rayon Ardent",
                      "Description": "Arme. Feu.",
                      "GMNotes": "{\"id\":\"8233c4e5-0be0-4f3a-80e3-d6ba11a3de64\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Arme. Feu.\",\"TtsZoopGuid\":\"8233c4e5-0be0-4f3a-80e3-d6ba11a3de64\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101700,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1017": {
                          "FaceURL": "https://i.ibb.co/Q7p0jCjj/f5ee96258e69.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00020",
                      "Name": "Card",
                      "Transform": {
                        "posX": -14.0006247,
                        "posY": 1.67641985,
                        "posZ": 23.0004539,
                        "rotX": 0.0108669614,
                        "rotY": 179.9718,
                        "rotZ": 8.100096,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Soldat Perturbé",
                      "Description": "Humanoïde.",
                      "GMNotes": "{\"id\":\"74535694-1de3-4dce-95f4-b1f3be90f0b3\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de.\",\"TtsZoopGuid\":\"74535694-1de3-4dce-95f4-b1f3be90f0b3\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 102900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1029": {
                          "FaceURL": "https://i.ibb.co/Gfpdv9vX/d14dd6ca228b.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0001f",
                      "Name": "Card",
                      "Transform": {
                        "posX": -14.373354,
                        "posY": 1.69561589,
                        "posZ": 23.0020084,
                        "rotX": 0.0124564283,
                        "rotY": 179.965836,
                        "rotZ": 8.609579,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Soldat Perturbé",
                      "Description": "Humanoïde.",
                      "GMNotes": "{\"id\":\"f98b6674-4819-4486-99fe-9e25f486152d\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de.\",\"TtsZoopGuid\":\"f98b6674-4819-4486-99fe-9e25f486152d\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 102800,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1028": {
                          "FaceURL": "https://i.ibb.co/0VjF5tXz/0621284741be.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0001e",
                      "Name": "Card",
                      "Transform": {
                        "posX": -14.9863405,
                        "posY": 1.75292552,
                        "posZ": 23.0017052,
                        "rotX": 0.0116419327,
                        "rotY": 179.984344,
                        "rotZ": 8.604799,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Soldat Perturbé",
                      "Description": "Humanoïde.",
                      "GMNotes": "{\"id\":\"8b19cfa9-9cb6-406a-902d-6a945ba17a18\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de.\",\"TtsZoopGuid\":\"8b19cfa9-9cb6-406a-902d-6a945ba17a18\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 102700,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1027": {
                          "FaceURL": "https://i.ibb.co/zhfN3kfM/b722ab7d4469.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0001d",
                      "Name": "Card",
                      "Transform": {
                        "posX": -15.5995522,
                        "posY": 1.7995472,
                        "posZ": 23.0015469,
                        "rotX": 0.0116113313,
                        "rotY": 179.9885,
                        "rotZ": 8.604799,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Soldat Perturbé",
                      "Description": "Humanoïde.",
                      "GMNotes": "{\"id\":\"1bebcfc2-d3c7-4f66-bdf8-a326e9334805\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de.\",\"TtsZoopGuid\":\"1bebcfc2-d3c7-4f66-bdf8-a326e9334805\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 102600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1026": {
                          "FaceURL": "https://i.ibb.co/TDLCJyB7/e31242fc13fe.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0001c",
                      "Name": "Card",
                      "Transform": {
                        "posX": -16.21278,
                        "posY": 1.83641648,
                        "posZ": 23.0013561,
                        "rotX": 0.0112719,
                        "rotY": 179.982712,
                        "rotZ": 8.370917,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Interférence Militaire",
                      "Description": "Bévue.",
                      "GMNotes": "{\"id\":\"4fcf3ebe-6bbd-4707-9a31-8d0e31937416\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>B�vue. \",\"TtsZoopGuid\":\"4fcf3ebe-6bbd-4707-9a31-8d0e31937416\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 102500,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1025": {
                          "FaceURL": "https://i.ibb.co/svjbWkh4/d27f33793fce.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0001b",
                      "Name": "Card",
                      "Transform": {
                        "posX": -16.821703,
                        "posY": 1.86138344,
                        "posZ": 23.0011559,
                        "rotX": 0.0109878862,
                        "rotY": 179.988373,
                        "rotZ": 8.370917,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Interférence Militaire",
                      "Description": "Bévue.",
                      "GMNotes": "{\"id\":\"ff4a4543-713c-4a33-8e32-c0136b91a9c3\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>B�vue. \",\"TtsZoopGuid\":\"ff4a4543-713c-4a33-8e32-c0136b91a9c3\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 102400,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1024": {
                          "FaceURL": "https://i.ibb.co/HLVprdzT/fa6c972245c3.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0001a",
                      "Name": "Card",
                      "Transform": {
                        "posX": -17.4334774,
                        "posY": 1.88312256,
                        "posZ": 23.0011253,
                        "rotX": 0.0104727978,
                        "rotY": 179.988708,
                        "rotZ": 7.76759338,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Interférence Militaire",
                      "Description": "Bévue.",
                      "GMNotes": "{\"id\":\"acb6d700-c1e2-4a46-96a4-12f5dfd03696\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>B�vue. \",\"TtsZoopGuid\":\"acb6d700-c1e2-4a46-96a4-12f5dfd03696\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 102300,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1023": {
                          "FaceURL": "https://i.ibb.co/v4cmbvCD/9017cb6493bf.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00019",
                      "Name": "Card",
                      "Transform": {
                        "posX": -18.0381,
                        "posY": 1.89704192,
                        "posZ": 23.00031,
                        "rotX": -0.00282783224,
                        "rotY": 180.0043,
                        "rotZ": 7.72990036,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Défense Défaillante",
                      "Description": "Risque. Feu. Terreur.",
                      "GMNotes": "{\"id\":\"e76f7616-5f48-440b-838a-5c1524c656a6\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque. Feu. Terreur.\",\"TtsZoopGuid\":\"e76f7616-5f48-440b-838a-5c1524c656a6\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 102200,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1022": {
                          "FaceURL": "https://i.ibb.co/zTBN9Cbv/18acc0a5adcc.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00018",
                      "Name": "Card",
                      "Transform": {
                        "posX": -18.649601,
                        "posY": 1.91354918,
                        "posZ": 23.0003548,
                        "rotX": 0.0215590037,
                        "rotY": 180.002441,
                        "rotZ": 6.79017162,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Défense Défaillante",
                      "Description": "Risque. Feu. Terreur.",
                      "GMNotes": "{\"id\":\"8db2aff1-8689-4eee-927c-e29e7d2c9a1a\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque. Feu. Terreur.\",\"TtsZoopGuid\":\"8db2aff1-8689-4eee-927c-e29e7d2c9a1a\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 102100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1021": {
                          "FaceURL": "https://i.ibb.co/cXYMS11K/06cee1a598de.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00017",
                      "Name": "Card",
                      "Transform": {
                        "posX": -19.26362,
                        "posY": 1.93282187,
                        "posZ": 23.00032,
                        "rotX": 0.009200004,
                        "rotY": 180.003952,
                        "rotZ": 7.108003,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Fumée Étouffante",
                      "Description": "Risque. Feu.",
                      "GMNotes": "{\"id\":\"63695c96-c63e-445d-963b-a353f3418a82\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque. Feu.\",\"TtsZoopGuid\":\"63695c96-c63e-445d-963b-a353f3418a82\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 102000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1020": {
                          "FaceURL": "https://i.ibb.co/nx3QM6R/2275f4d079e6.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00016",
                      "Name": "Card",
                      "Transform": {
                        "posX": -19.8772316,
                        "posY": 1.95470464,
                        "posZ": 23.0003242,
                        "rotX": 0.009141939,
                        "rotY": 180.002518,
                        "rotZ": 6.95164156,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Fumée Étouffante",
                      "Description": "Risque. Feu.",
                      "GMNotes": "{\"id\":\"14269deb-d436-44c2-904b-e7b996955896\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque. Feu.\",\"TtsZoopGuid\":\"14269deb-d436-44c2-904b-e7b996955896\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1019": {
                          "FaceURL": "https://i.ibb.co/9HPyZqDL/d52051f76237.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00015",
                      "Name": "Card",
                      "Transform": {
                        "posX": -20.4910336,
                        "posY": 1.97922885,
                        "posZ": 23.0003529,
                        "rotX": 0.0091468,
                        "rotY": 180.002487,
                        "rotZ": 6.95164156,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Fumée Étouffante",
                      "Description": "Risque. Feu.",
                      "GMNotes": "{\"id\":\"615e5330-497c-40d3-8f54-8a94a2615ffc\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque. Feu.\",\"TtsZoopGuid\":\"615e5330-497c-40d3-8f54-8a94a2615ffc\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101800,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1018": {
                          "FaceURL": "https://i.ibb.co/HTrpTz3H/67493f0d6b1d.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                },
                {
                  "GUID": "e00033",
                  "Name": "Card",
                  "Transform": {
                    "posX": -3.00000334,
                    "posY": 1.507809,
                    "posZ": 3.50000119,
                    "rotX": 0.0108917542,
                    "rotY": 179.997482,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Carrefour de Princeton",
                  "Description": "Grovers Mill. Militaire.",
                  "GMNotes": "{\"id\":\"e178e956-6e2b-4079-ac7d-b412d62597fa\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Grovers Mill. Militaire.\",\"locationFront\":{\"icons\":\"Cross\",\"connections\":\"Triangle|Hourglass\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Cross\",\"connections\":\"Triangle|Hourglass\"},\"TtsZoopGuid\":\"e178e956-6e2b-4079-ac7d-b412d62597fa\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 104200,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1042": {
                      "FaceURL": "https://i.ibb.co/gLVkXW9S/34a8f342ec65.jpg",
                      "BackURL": "https://i.ibb.co/1h2VZGp/8e3003232512.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00034",
                  "Name": "Card",
                  "Transform": {
                    "posX": 1.49999869,
                    "posY": 1.50932133,
                    "posZ": 13.500001,
                    "rotX": 0.0108912811,
                    "rotY": 180.002319,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Rivière Millstone",
                  "Description": "Grovers Mill.",
                  "GMNotes": "{\"id\":\"8be82b97-1d6d-4960-a305-c90f18939347\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Grovers Mill.\",\"locationFront\":{\"icons\":\"Triangle\",\"connections\":\"Cross|Hourglass|Diamond|DoubleSlash\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Triangle\",\"connections\":\"Cross|Hourglass|Diamond|DoubleSlash\"},\"TtsZoopGuid\":\"8be82b97-1d6d-4960-a305-c90f18939347\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 104300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1043": {
                      "FaceURL": "https://i.ibb.co/4R3hXL1T/0ad4f0bf602d.jpg",
                      "BackURL": "https://i.ibb.co/DHcvpCDC/4b7805a35e9c.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00035",
                  "Name": "Card",
                  "Transform": {
                    "posX": 10.5,
                    "posY": 1.50854409,
                    "posZ": 13.500001,
                    "rotX": 0.010891255,
                    "rotY": 180.003,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Domaine Plainsboro",
                  "Description": "Grovers Mill. Militaire.",
                  "GMNotes": "{\"id\":\"c536f6e2-9334-4530-8db7-efeccc25ca43\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Grovers Mill.\",\"locationFront\":{\"icons\":\"Diamond\",\"connections\":\"Triangle|Hourglass|Slash|DoubleSlash\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Diamond\",\"connections\":\"Triangle|Hourglass|Slash|DoubleSlash\"},\"TtsZoopGuid\":\"c536f6e2-9334-4530-8db7-efeccc25ca43\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 104400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1044": {
                      "FaceURL": "https://i.ibb.co/4RFDzGTn/3644b7cfbec2.jpg",
                      "BackURL": "https://i.ibb.co/Z1GHgKyv/a50422cafef3.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00036",
                  "Name": "Card",
                  "Transform": {
                    "posX": 5.999999,
                    "posY": 1.5070318,
                    "posZ": 3.49999952,
                    "rotX": 0.0108915437,
                    "rotY": 180.000214,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "QG de l'Armée",
                  "Description": "Grovers Mill. Militaire.",
                  "GMNotes": "{\"id\":\"38eb4d1d-e83f-4b46-99b6-718b82ddbc7b\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Grovers Mill. Militaire.\",\"locationFront\":{\"icons\":\"Hourglass\",\"connections\":\"Cross|Triangle|Diamond|Slash\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Hourglass\",\"connections\":\"Cross|Triangle|Diamond|Slash\"},\"TtsZoopGuid\":\"38eb4d1d-e83f-4b46-99b6-718b82ddbc7b\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 104500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1045": {
                      "FaceURL": "https://i.ibb.co/zLkQdDy/000d23e810ae.jpg",
                      "BackURL": "https://i.ibb.co/HfDvJkR5/0ce3b9b8b228.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00037",
                  "Name": "Card",
                  "Transform": {
                    "posX": 14.999999,
                    "posY": 1.50625455,
                    "posZ": 3.50000143,
                    "rotX": 0.010891621,
                    "rotY": 180.000092,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Ferme Wilmuth",
                  "Description": "Grovers Mill. Cylindre.",
                  "GMNotes": "{\"id\":\"6cd50436-a4a8-4897-9076-f1604e733e0b\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Grovers Mill. Cylindre.\",\"locationFront\":{\"icons\":\"Slash\",\"connections\":\"Hourglass|Diamond\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Slash\",\"connections\":\"Hourglass|Diamond\"},\"TtsZoopGuid\":\"6cd50436-a4a8-4897-9076-f1604e733e0b\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 104600,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1046": {
                      "FaceURL": "https://i.ibb.co/WpjGBFYP/1f28b7ade2fd.jpg",
                      "BackURL": "https://i.ibb.co/8n9TtNZr/4ef8a25b05b1.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00038",
                  "Name": "Card",
                  "Transform": {
                    "posX": -29.4999943,
                    "posY": 1.78360581,
                    "posZ": 5.999977,
                    "rotX": -5.023314E-06,
                    "rotY": 179.999451,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Deuxième Site d'Atterrissage",
                  "Description": "Grovers Mill. Cylindre.",
                  "GMNotes": "{\"id\":\"49cbe7dd-03b8-4a34-a0db-c88c54759b2d\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Grovers Mill. Cylindre.\",\"locationFront\":{\"icons\":\"DoubleSlash\",\"connections\":\"Triangle|Diamond\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"DoubleSlash\",\"connections\":\"Triangle|Diamond\"},\"TtsZoopGuid\":\"49cbe7dd-03b8-4a34-a0db-c88c54759b2d\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 104700,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1047": {
                      "FaceURL": "https://i.ibb.co/0yVxzy2x/bfdb82fec43c.jpg",
                      "BackURL": "https://i.ibb.co/bj214D9h/e99eabe93804.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0003b",
                  "Name": "Card",
                  "Transform": {
                    "posX": 23.5013,
                    "posY": 1.50380516,
                    "posZ": -5.52299929,
                    "rotX": 0.0108912857,
                    "rotY": 180.002518,
                    "rotZ": 0.00494882232,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Référence",
                  "Description": "Premier Contact",
                  "GMNotes": "{\"id\":\"05e19cff-a9cf-4186-b195-79b7e6576ea7\",\"type\":\"ScenarioReference\",\"class\":\"Mythos\",\"tokens\":{\"front\":{\"Cultist\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-3. En cas d��chec, d�faussez 1 carte prise au hasard dans votre main.\"},\"Skull\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-1. -3 si vous r�solvez un test contre une carte <t>Feu</t>.\"},\"Tablet\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-3. En cas d��chec, d�faussez \\n2 ressources.\"},\"Elder Thing\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-2. -4 si vous �tes dans un lieu <t>Cylindre</t>.\"}},\"back\":{\"Cultist\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-4. D�faussez 1 carte prise au hasard dans votre main.\"},\"Skull\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-2. -4 si vous r�solvez un test contre une carte <t>Feu</t>.\"},\"Tablet\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-4. D�faussez 2 ressources.\"},\"Elder Thing\":{\"modifier\":-999,\"description\":\"<family \\\"ArnoPro-Regular\\\"><size 8.5>-3. -6 si vous �tes dans un lieu <t>Cylindre</t>.\"}}},\"TtsZoopGuid\":\"05e19cff-a9cf-4186-b195-79b7e6576ea7\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1048": {
                      "FaceURL": "https://i.ibb.co/DPGKcY3p/d08cb93cead9.jpg",
                      "BackURL": "https://i.ibb.co/LzhNRP3T/226856ea9cc9.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ],
              "AttachedDecals": [
                {
                  "Transform": {
                    "posX": -0.0021877822,
                    "posY": -0.08963572,
                    "posZ": -0.00288731651,
                    "rotX": 270.0,
                    "rotY": 359.869568,
                    "rotZ": 0.0,
                    "scaleX": 2.00000215,
                    "scaleY": 2.00000238,
                    "scaleZ": 2.00000262
                  },
                  "CustomDecal": {
                    "Name": "dunwich_back",
                    "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
                    "Size": 7.4
                  }
                }
              ]
            },
            {
              "GUID": "8fefa0",
              "Name": "3DText",
              "Transform": {
                "posX": -0.250358582,
                "posY": 3.999987,
                "posZ": 58.4000664,
                "rotX": 89.98022,
                "rotY": 5.65977167E-08,
                "rotZ": 0.0,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "Text": {
                "Text": "La Guerre des Mondes",
                "colorstate": {
                  "r": 0.25,
                  "g": 0.25,
                  "b": 0.25
                },
                "fontSize": 64
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "bd9417",
              "Name": "Custom_Assetbundle",
              "Transform": {
                "posX": 0.0,
                "posY": 4.0,
                "posZ": 54.5,
                "rotX": 0.0,
                "rotY": 179.9735,
                "rotZ": 180.0011,
                "scaleX": 3.0,
                "scaleY": 0.3,
                "scaleZ": 1.5
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "board",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.817645848,
                "g": 0.246824771,
                "b": 0.3458058
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": true,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomAssetbundle": {
                "AssetbundleURL": "chry.me/tts/3droom/floorpad.unity3d",
                "AssetbundleSecondaryURL": "",
                "MaterialIndex": 3,
                "TypeIndex": 4,
                "LoopingEffectIndex": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "AttachedSnapPoints": [
                {
                  "Position": {
                    "x": -1.49868917,
                    "y": -1.990338E-05,
                    "z": 0.998795867
                  },
                  "Rotation": {
                    "x": -6.86714046E-08,
                    "y": 359.989532,
                    "z": 1.07874406E-07
                  }
                },
                {
                  "Position": {
                    "x": -1.49716389,
                    "y": -1.314683E-05,
                    "z": -1.59733415
                  },
                  "Rotation": {
                    "x": -1.760565E-08,
                    "y": 359.9908,
                    "z": 9.473777E-08
                  }
                },
                {
                  "Position": {
                    "x": 1.1892941,
                    "y": 3.072496E-05,
                    "z": 0.995367467
                  },
                  "Rotation": {
                    "x": -3.89740462E-09,
                    "y": 359.973541,
                    "z": 2.72746064E-07
                  }
                }
              ]
            },
            {
              "GUID": "e36f29",
              "Name": "Custom_PDF",
              "Transform": {
                "posX": -20.5,
                "posY": 1.48149931,
                "posZ": -5.0,
                "rotX": 3.128241E-08,
                "rotY": 179.9998,
                "rotZ": 4.896164E-08,
                "scaleX": 2.05722,
                "scaleY": 1.0,
                "scaleZ": 2.05722
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomPDF": {
                "PDFUrl": "https://steamusercontent-a.akamaihd.net/ugc/11926483557725046/B9DF495D1B4D719EFEE3AB6BC4ED8EFB237BAD9B/",
                "PDFPassword": "",
                "PDFPage": 0,
                "PDFPageOffset": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            }
          ],
          "AttachedDecals": [
            {
              "Transform": {
                "posX": -0.0021877822,
                "posY": -0.08963572,
                "posZ": -0.00288731651,
                "rotX": 270.0,
                "rotY": 359.869568,
                "rotZ": 0.0,
                "scaleX": 2.00000215,
                "scaleY": 2.00000238,
                "scaleZ": 2.00000262
              },
              "CustomDecal": {
                "Name": "dunwich_back",
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
                "Size": 7.4
              }
            }
          ]
        },
        {
          "GUID": "5c58c3",
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": 13.0000076,
            "posY": 0.9799972,
            "posZ": 47.0000076,
            "rotX": -4.59404737E-06,
            "rotY": 179.972534,
            "rotZ": 7.59496459E-07,
            "scaleX": 1.20052135,
            "scaleY": 0.249882281,
            "scaleZ": 1.3145982
          },
          "Nickname": "La Sororité des Secrets",
          "Description": "Scénario Indépendants",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj",
            "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089671904/37973808FD8469FE95B3EC17292A2209129F4D55/",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CustomShader": {
              "SpecularColor": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "SpecularIntensity": 0.0,
              "SpecularSharpness": 2.0,
              "FresnelStrength": 0.0
            },
            "CastShadows": true
          },
          "Bag": {
            "Order": 0
          },
          "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
          "LuaScriptState": "{\"ml\":{\"02ab52\":{\"lock\":false,\"pos\":{\"x\":-6.5,\"y\":1.5068,\"z\":15.5},\"rot\":{\"x\":-0.0012,\"y\":60,\"z\":359.9881},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"0578e6\":{\"lock\":false,\"pos\":{\"x\":-6.5,\"y\":1.5057,\"z\":10},\"rot\":{\"x\":0.0097,\"y\":120.0003,\"z\":359.993},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"073f6b\":{\"lock\":false,\"pos\":{\"x\":10.9994,\"y\":1.573,\"z\":7.4991},\"rot\":{\"x\":2.0932,\"y\":180.0005,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"0f3fd7\":{\"lock\":false,\"pos\":{\"x\":-19.5,\"y\":1.8006,\"z\":7.5},\"rot\":{\"x\":0,\"y\":180.0322,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"0f66c8\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.84,\"z\":21.5},\"rot\":{\"x\":0,\"y\":180.0046,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"1be688\":{\"lock\":false,\"pos\":{\"x\":-1.0001,\"y\":1.5754,\"z\":14.4997},\"rot\":{\"x\":2.0936,\"y\":180.006,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1de6db\":{\"lock\":false,\"pos\":{\"x\":-0.5,\"y\":1.5064,\"z\":16},\"rot\":{\"x\":0.005,\"y\":90.0071,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"1e4abc\":{\"lock\":false,\"pos\":{\"x\":-19.4999,\"y\":1.8124,\"z\":4.5003},\"rot\":{\"x\":4.7492,\"y\":0.0038,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"1f075d\":{\"lock\":false,\"pos\":{\"x\":-27.4996,\"y\":1.785,\"z\":4.5005},\"rot\":{\"x\":1.604,\"y\":359.9788,\"z\":-0.0009},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"1fe820\":{\"lock\":false,\"pos\":{\"x\":-33,\"y\":1.8075,\"z\":9.4995},\"rot\":{\"x\":4.1824,\"y\":0.0405,\"z\":0.0001},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"2f676c\":{\"lock\":false,\"pos\":{\"x\":-32.8487,\"y\":1.8323,\"z\":2.516},\"rot\":{\"x\":359.9745,\"y\":179.6459,\"z\":180.0583},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"3382f5\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.4799,\"z\":-4.5001},\"rot\":{\"x\":0,\"y\":180.0002,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"39353a\":{\"lock\":false,\"pos\":{\"x\":-31.5,\"y\":1.84,\"z\":13.5},\"rot\":{\"x\":0,\"y\":180.0038,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"3b7319\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.8208,\"z\":2.5},\"rot\":{\"x\":0.0374,\"y\":179.9922,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"42c2b1\":{\"lock\":false,\"pos\":{\"x\":4.9994,\"y\":1.5748,\"z\":14.4992},\"rot\":{\"x\":2.0932,\"y\":180.0026,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"43d872\":{\"lock\":false,\"pos\":{\"x\":-27.5,\"y\":1.84,\"z\":7.5},\"rot\":{\"x\":0,\"y\":180.0257,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"441a6c\":{\"lock\":false,\"pos\":{\"x\":-26,\"y\":1.84,\"z\":21.5},\"rot\":{\"x\":0,\"y\":180.0011,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"4aa311\":{\"lock\":false,\"pos\":{\"x\":12.5012,\"y\":1.5412,\"z\":-6.0169},\"rot\":{\"x\":0.0109,\"y\":180.0005,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4d16a8\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.506,\"z\":12.5},\"rot\":{\"x\":0.0109,\"y\":179.9854,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"4e1541\":{\"lock\":false,\"pos\":{\"x\":-31.8488,\"y\":1.8807,\"z\":2.5221},\"rot\":{\"x\":359.8821,\"y\":179.6654,\"z\":180.0278},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4f0597\":{\"lock\":false,\"pos\":{\"x\":-27.5,\"y\":1.7836,\"z\":2.5},\"rot\":{\"x\":0.0003,\"y\":179.9989,\"z\":180.0021},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"526b96\":{\"lock\":false,\"pos\":{\"x\":-32.9995,\"y\":1.8346,\"z\":4.5017},\"rot\":{\"x\":7.2996,\"y\":-0.004,\"z\":0.0013},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"56719b\":{\"lock\":false,\"pos\":{\"x\":-20.4998,\"y\":1.771,\"z\":18},\"rot\":{\"x\":0,\"y\":-0.0016,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"5724c7\":{\"lock\":false,\"pos\":{\"x\":-19.4999,\"y\":1.8124,\"z\":13.0002},\"rot\":{\"x\":4.7495,\"y\":0.0032,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"5b3d13\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.771,\"z\":4.5},\"rot\":{\"x\":0,\"y\":359.9775,\"z\":0.0001},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"60ae59\":{\"lock\":false,\"pos\":{\"x\":-26.0002,\"y\":1.84,\"z\":16.5002},\"rot\":{\"x\":0,\"y\":180.0093,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"6167ac\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.6173,\"z\":-2.9971},\"rot\":{\"x\":-0.0006,\"y\":179.9964,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"67581c\":{\"lock\":false,\"pos\":{\"x\":-0.5,\"y\":1.505,\"z\":9},\"rot\":{\"x\":0.0049,\"y\":90.007,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"69eaa5\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5197,\"z\":16},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"70e565\":{\"lock\":false,\"pos\":{\"x\":-19.5001,\"y\":1.8102,\"z\":11.0002},\"rot\":{\"x\":0,\"y\":180.0218,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.5058,\"z\":16},\"rot\":{\"x\":0.005,\"y\":90.01,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"73788b\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5054,\"z\":12.5},\"rot\":{\"x\":0.0109,\"y\":179.9852,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"795808\":{\"lock\":false,\"pos\":{\"x\":-19.5002,\"y\":1.8102,\"z\":2.5001},\"rot\":{\"x\":0,\"y\":180.0413,\"z\":-0.0001},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"7cfdf7\":{\"lock\":false,\"pos\":{\"x\":-33,\"y\":1.8054,\"z\":7.4998},\"rot\":{\"x\":0,\"y\":180.0306,\"z\":180.0002},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"881a7d\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.771,\"z\":23},\"rot\":{\"x\":0,\"y\":0.0004,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"881ff8\":{\"lock\":false,\"pos\":{\"x\":-25.9998,\"y\":1.771,\"z\":18},\"rot\":{\"x\":0,\"y\":-0.0016,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"8ec98a\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.5179,\"z\":9},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"98a9a2\":{\"lock\":false,\"pos\":{\"x\":-24.4997,\"y\":1.8401,\"z\":11},\"rot\":{\"x\":0.0374,\"y\":180.0002,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"99fb3c\":{\"lock\":false,\"pos\":{\"x\":-24.4999,\"y\":1.771,\"z\":12.9941},\"rot\":{\"x\":0,\"y\":0.0112,\"z\":0.0001},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"9a5ecc\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.5045,\"z\":9},\"rot\":{\"x\":0.005,\"y\":90.0047,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"9cc3bc\":{\"lock\":false,\"pos\":{\"x\":-24.5052,\"y\":1.7836,\"z\":7.4813},\"rot\":{\"x\":0,\"y\":180.0001,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9d7725\":{\"lock\":false,\"pos\":{\"x\":4.9992,\"y\":1.5735,\"z\":7.4985},\"rot\":{\"x\":2.0928,\"y\":179.9936,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"a2110f\":{\"lock\":false,\"pos\":{\"x\":-20.4771,\"y\":1.4799,\"z\":-4.5049},\"rot\":{\"x\":0,\"y\":180.0005,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"a81991\":{\"lock\":false,\"pos\":{\"x\":-26,\"y\":1.771,\"z\":23},\"rot\":{\"x\":0,\"y\":0.0005,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"a909b3\":{\"lock\":false,\"pos\":{\"x\":-33.9567,\"y\":1.7837,\"z\":2.5096},\"rot\":{\"x\":-0.0011,\"y\":179.6492,\"z\":179.9913},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b2f07e\":{\"lock\":false,\"pos\":{\"x\":-31.5,\"y\":1.771,\"z\":15},\"rot\":{\"x\":0,\"y\":0.0006,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"c177e4\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.84,\"z\":16.5},\"rot\":{\"x\":0,\"y\":179.9992,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"c4f005\":{\"lock\":false,\"pos\":{\"x\":-34.4999,\"y\":1.771,\"z\":15},\"rot\":{\"x\":0,\"y\":0.0006,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"c8c4b8\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.5049,\"z\":12.5},\"rot\":{\"x\":0.0109,\"y\":179.9998,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d7efd5\":{\"lock\":false,\"pos\":{\"x\":-27.4789,\"y\":1.9412,\"z\":11.0121},\"rot\":{\"x\":0.0376,\"y\":179.9926,\"z\":179.9999},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d81927\":{\"lock\":false,\"pos\":{\"x\":23.5012,\"y\":1.5138,\"z\":-5.523},\"rot\":{\"x\":0.0109,\"y\":180.0027,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"dd1c4f\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5184,\"z\":9},\"rot\":{\"x\":0.0109,\"y\":179.9707,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00007\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.5179,\"z\":9},\"rot\":{\"x\":0.0109,\"y\":180.0007,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00008\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5197,\"z\":16},\"rot\":{\"x\":0.0109,\"y\":179.9704,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00009\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.5192,\"z\":16},\"rot\":{\"x\":0.0109,\"y\":179.9795,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0000a\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5184,\"z\":9},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0000b\":{\"lock\":false,\"pos\":{\"x\":14.5159,\"y\":1.5173,\"z\":8.9797},\"rot\":{\"x\":0.0109,\"y\":179.9761,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0000c\":{\"lock\":false,\"pos\":{\"x\":-3.5001,\"y\":1.5202,\"z\":16},\"rot\":{\"x\":0.0109,\"y\":179.973,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0000d\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.5189,\"z\":9},\"rot\":{\"x\":0.0109,\"y\":179.9983,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0000e\":{\"lock\":false,\"pos\":{\"x\":-9.5,\"y\":1.5201,\"z\":12.5},\"rot\":{\"x\":0.0109,\"y\":179.9771,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e41dcd\":{\"lock\":false,\"pos\":{\"x\":12.501,\"y\":1.5412,\"z\":-6.0168},\"rot\":{\"x\":0.0109,\"y\":180.0002,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"ebba44\":{\"lock\":false,\"pos\":{\"x\":11.5001,\"y\":1.504,\"z\":9},\"rot\":{\"x\":0.005,\"y\":90.0061,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"f00a53\":{\"lock\":false,\"pos\":{\"x\":-34.5,\"y\":1.84,\"z\":13.5},\"rot\":{\"x\":0,\"y\":180.0034,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"fa7d89\":{\"lock\":false,\"pos\":{\"x\":-23,\"y\":1.771,\"z\":24},\"rot\":{\"x\":0,\"y\":0.0007,\"z\":0},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}},\"fd4dd3\":{\"lock\":false,\"pos\":{\"x\":-27.4997,\"y\":1.771,\"z\":12.9593},\"rot\":{\"x\":-0.0001,\"y\":359.9676,\"z\":0.0003},\"tint\":{\"a\":0,\"b\":0,\"g\":0,\"r\":0}}}}",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "073f6b",
              "Name": "Card",
              "Transform": {
                "posX": 10.9995985,
                "posY": 1.50736046,
                "posZ": 7.50081062,
                "rotX": 0.0108907614,
                "rotY": 180.008469,
                "rotZ": 0.004949981,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Susan Matthews",
              "Description": "La Biblioth�caire",
              "GMNotes": "{\"id\":\"768c2c90-e2af-46dc-b2f4-5b4eb019d9e7\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"768c2c90-e2af-46dc-b2f4-5b4eb019d9e7\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1118600,
              "SidewaysCard": false,
              "CustomDeck": {
                "11186": {
                  "FaceURL": "https://i.imgur.com/2Cb92tn.jpeg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "0f3fd7",
              "Name": "Deck",
              "Transform": {
                "posX": -19.5,
                "posY": 1.80055952,
                "posZ": 7.499997,
                "rotX": -5.00688247E-06,
                "rotY": 180.0326,
                "rotZ": 1.12523537E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                1113536,
                1113545
              ],
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "46ff84",
                  "Name": "Card",
                  "Transform": {
                    "posX": -24.5001011,
                    "posY": 1.7835778,
                    "posZ": 6.99988031,
                    "rotX": 0.000278637744,
                    "rotY": 180.031418,
                    "rotZ": -0.00185713056,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Clé Ouvragée",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113536,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "4cb171",
                  "Name": "Card",
                  "Transform": {
                    "posX": -24.5000076,
                    "posY": 1.81641245,
                    "posZ": 6.999995,
                    "rotX": 0.00637933565,
                    "rotY": 180.031387,
                    "rotZ": 359.9922,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "June Winters",
                  "Description": "Vous Accompagne",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113545,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "0f66c8",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -20.4999962,
                "posY": 1.83999956,
                "posZ": 21.5000038,
                "rotX": -4.017043E-06,
                "rotY": 180.004562,
                "rotZ": -8.88020963E-07,
                "scaleX": 0.7,
                "scaleY": 0.7,
                "scaleZ": 0.7
              },
              "Nickname": "Cheryl vous fait confiance",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089707735/3BDBB92799B40E513508B0A1B7B8C959EFC67094/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
              "LuaScriptState": "{\"ml\":{\"2bcde0\":{\"lock\":false,\"pos\":{\"x\":17.501,\"y\":1.5504,\"z\":-6.0196},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"4e9a52\":{\"lock\":false,\"pos\":{\"x\":17.501,\"y\":1.5504,\"z\":-6.0196},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "2bcde0",
                  "Name": "Deck",
                  "Transform": {
                    "posX": 17.501,
                    "posY": 1.55043852,
                    "posZ": -6.0196,
                    "rotX": 0.0108919041,
                    "rotY": 179.999954,
                    "rotZ": 0.004948263,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": false,
                  "SidewaysCard": false,
                  "DeckIDs": [
                    1124900,
                    1124300,
                    1125000,
                    1124000,
                    1124500,
                    1124700
                  ],
                  "CustomDeck": {
                    "11249": {
                      "FaceURL": "https://i.imgur.com/zsSooWW.jpeg",
                      "BackURL": "https://i.imgur.com/W8JMsl0.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "11243": {
                      "FaceURL": "https://i.imgur.com/HYdqA5z.jpeg",
                      "BackURL": "https://i.imgur.com/0eDgHBL.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "11250": {
                      "FaceURL": "https://i.imgur.com/wY37Mwu.jpeg",
                      "BackURL": "https://i.imgur.com/fps3cVe.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "11240": {
                      "FaceURL": "https://i.imgur.com/tHhYcGs.jpeg",
                      "BackURL": "https://i.imgur.com/4SE8QxB.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "11245": {
                      "FaceURL": "https://i.imgur.com/yyf1HY6.jpeg",
                      "BackURL": "https://i.imgur.com/xfyg5GV.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "11247": {
                      "FaceURL": "https://i.imgur.com/fi2YbdY.jpeg",
                      "BackURL": "https://i.imgur.com/2W7uDjs.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "f56e7d",
                      "Name": "Card",
                      "Transform": {
                        "posX": 32.9999771,
                        "posY": 1.49345267,
                        "posZ": 15.0000286,
                        "rotX": 0.000167264181,
                        "rotY": 180.000168,
                        "rotZ": -0.0005619798,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Stopper le Culte",
                      "Description": "",
                      "GMNotes": "{\"id\":\"0e4aeb6e-4b45-4398-9668-70267f7f9605\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"0e4aeb6e-4b45-4398-9668-70267f7f9605\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 1124900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11249": {
                          "FaceURL": "https://i.imgur.com/zsSooWW.jpeg",
                          "BackURL": "https://i.imgur.com/W8JMsl0.jpeg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "f2c915",
                      "Name": "Card",
                      "Transform": {
                        "posX": 33.0,
                        "posY": 1.53369379,
                        "posZ": 15.0,
                        "rotX": 0.0011745037,
                        "rotY": 180.001465,
                        "rotZ": 0.0006186781,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Trouver la Cathédrale",
                      "Description": "",
                      "GMNotes": "{\"id\":\"45cf5fb1-682c-4a1d-b1be-41911ef93af3\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"45cf5fb1-682c-4a1d-b1be-41911ef93af3\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 1124300,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11243": {
                          "FaceURL": "https://i.imgur.com/HYdqA5z.jpeg",
                          "BackURL": "https://i.imgur.com/0eDgHBL.jpeg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "90ebc4",
                      "Name": "Card",
                      "Transform": {
                        "posX": 33.0,
                        "posY": 1.56765676,
                        "posZ": 15.0,
                        "rotX": -4.13098278E-05,
                        "rotY": 180.0,
                        "rotZ": -0.000110220033,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "L'Ombre dans les Arbres",
                      "Description": "",
                      "GMNotes": "{\"id\":\"cfdcc9fe-761f-4bc3-803d-0069ad3532bb\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"cfdcc9fe-761f-4bc3-803d-0069ad3532bb\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 1125000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11250": {
                          "FaceURL": "https://i.imgur.com/wY37Mwu.jpeg",
                          "BackURL": "https://i.imgur.com/fps3cVe.jpeg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00008",
                      "Name": "Card",
                      "Transform": {
                        "posX": 40.00014,
                        "posY": 1.51360822,
                        "posZ": 17.5000019,
                        "rotX": -1.83494558E-06,
                        "rotY": 180.002213,
                        "rotZ": -0.000325864559,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Le Plan de Cheryl, 3ème partie",
                      "Description": "",
                      "GMNotes": "{\"id\":\"f3c7b928-657a-437a-82e3-fc84b2f86146\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"f3c7b928-657a-437a-82e3-fc84b2f86146\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 1124000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11240": {
                          "FaceURL": "https://i.imgur.com/tHhYcGs.jpeg",
                          "BackURL": "https://i.imgur.com/4SE8QxB.jpeg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00007",
                      "Name": "Card",
                      "Transform": {
                        "posX": 40.0,
                        "posY": 1.57833791,
                        "posZ": 17.5,
                        "rotX": 0.651336849,
                        "rotY": 180.0017,
                        "rotZ": 359.549744,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Le Plan de Cheryl, 2ème partie",
                      "Description": "",
                      "GMNotes": "{\"id\":\"98d7c79a-f051-42e4-9562-f9e7d7f27520\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"98d7c79a-f051-42e4-9562-f9e7d7f27520\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 1124500,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11245": {
                          "FaceURL": "https://i.imgur.com/yyf1HY6.jpeg",
                          "BackURL": "https://i.imgur.com/xfyg5GV.jpeg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00006",
                      "Name": "Card",
                      "Transform": {
                        "posX": 40.0,
                        "posY": 1.59800327,
                        "posZ": 17.5,
                        "rotX": 2.837285E-05,
                        "rotY": 180.000443,
                        "rotZ": 359.61795,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Le Plan de Cheryl, 1ère partie",
                      "Description": "",
                      "GMNotes": "{\"id\":\"f418b008-7121-4ae8-b291-433e0797f6b3\",\"type\":\"Act\",\"class\":\"Mythos\",\"clueThresholdPerInvestigator\":3,\"TtsZoopGuid\":\"f418b008-7121-4ae8-b291-433e0797f6b3\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 1124700,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11247": {
                          "FaceURL": "https://i.imgur.com/fi2YbdY.jpeg",
                          "BackURL": "https://i.imgur.com/2W7uDjs.jpeg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                }
              ]
            },
            {
              "GUID": "1be688",
              "Name": "Card",
              "Transform": {
                "posX": -1.00030744,
                "posY": 1.50972748,
                "posZ": 14.5010233,
                "rotX": 0.0108917393,
                "rotY": 179.997574,
                "rotZ": 0.004947717,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "June Winters",
              "Description": "La Chauffeuse",
              "GMNotes": "{\"id\":\"5774ccc1-375d-4b40-9d7a-bd8ded1c2be3\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"5774ccc1-375d-4b40-9d7a-bd8ded1c2be3\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1118500,
              "SidewaysCard": false,
              "CustomDeck": {
                "11185": {
                  "FaceURL": "https://i.imgur.com/6T5t63W.jpeg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "1e4abc",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -19.49992,
                "posY": 1.81239343,
                "posZ": 4.500288,
                "rotX": 4.749114,
                "rotY": 0.00424096826,
                "rotZ": -1.97258832E-05,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Marque du Chasseur\"}",
              "XmlUI": ""
            },
            {
              "GUID": "1f075d",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -27.4996433,
                "posY": 1.78498864,
                "posZ": 4.500467,
                "rotX": 1.60402668,
                "rotY": 359.9786,
                "rotZ": -0.0008890862,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Cathédrale\"}",
              "XmlUI": ""
            },
            {
              "GUID": "1fe820",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -33.00006,
                "posY": 1.80746543,
                "posZ": 9.4994545,
                "rotX": 4.18244839,
                "rotY": 0.04129277,
                "rotZ": 0.000192961452,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Cultistes de la Sororité\"}",
              "XmlUI": ""
            },
            {
              "GUID": "2f676c",
              "Name": "Card",
              "Transform": {
                "posX": -32.8485069,
                "posY": 1.83175945,
                "posZ": 2.51466918,
                "rotX": 359.933167,
                "rotY": 179.660583,
                "rotZ": 180.084183,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Flore Rowe",
              "Description": "",
              "GMNotes": "{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"healthPerInv\": \"true\",\n  \"type\": \"Enemy\",\n  \"victory\": 0\n}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113533,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "3382f5",
              "Name": "Custom_PDF",
              "Transform": {
                "posX": -20.5,
                "posY": 1.48149931,
                "posZ": -4.5001,
                "rotX": -1.51818128E-07,
                "rotY": 180.0002,
                "rotZ": -3.48910376E-08,
                "scaleX": 2.17822933,
                "scaleY": 1.0,
                "scaleZ": 2.17822933
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomPDF": {
                "PDFUrl": "https://steamusercontent-a.akamaihd.net/ugc/14182719605567566/BBA8DF896700C6AD0F53F4D31106F2BA98A6AA41/",
                "PDFPassword": "",
                "PDFPage": 0,
                "PDFPageOffset": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "39353a",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -31.5000038,
                "posY": 1.84000027,
                "posZ": 13.4999962,
                "rotX": -6.18215563E-06,
                "rotY": 180.003845,
                "rotZ": -8.736204E-07,
                "scaleX": 0.7,
                "scaleY": 0.7,
                "scaleZ": 0.7
              },
              "Nickname": "Extérieur",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089690205/2909088E3DDE6C9DD98DB367092BBA4782F5A54F/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
              "LuaScriptState": "{\"ml\":{\"8a7463\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.5176,\"z\":2},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"9024d9\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.5046,\"z\":5.5},\"rot\":{\"x\":0.0109,\"y\":179.9933,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}}}}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "8a7463",
                  "Name": "Card",
                  "Transform": {
                    "posX": -3.500001,
                    "posY": 1.507567,
                    "posZ": 2.00000072,
                    "rotX": 0.0108915213,
                    "rotY": 180.000031,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Extérieur du Manoir Rowe",
                  "Description": "",
                  "GMNotes": "{\"id\":\"eb23da58-eaba-4420-b272-c6e64e38a9c8\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Spade\",\"connections\":\"Clover|TriangleAlt\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Spade\",\"connections\":\"Clover|TriangleAlt\"},\"TtsZoopGuid\":\"eb23da58-eaba-4420-b272-c6e64e38a9c8\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1122600,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11226": {
                      "FaceURL": "https://i.imgur.com/4WTPbTO.jpeg",
                      "BackURL": "https://i.imgur.com/cqIa10O.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "3b7319",
              "Name": "Deck",
              "Transform": {
                "posX": -24.5000458,
                "posY": 1.82081687,
                "posZ": 2.499951,
                "rotX": 0.0374194868,
                "rotY": 179.992462,
                "rotZ": 179.999969,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                1122900,
                1123000,
                1122800,
                1123100,
                1122700,
                1123200
              ],
              "CustomDeck": {
                "11229": {
                  "FaceURL": "https://i.imgur.com/DaHx823.jpeg",
                  "BackURL": "https://i.imgur.com/SfwObK9.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11230": {
                  "FaceURL": "https://i.imgur.com/4bOz9be.jpeg",
                  "BackURL": "https://i.imgur.com/ZPHCQWM.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11228": {
                  "FaceURL": "https://i.imgur.com/c47lGk8.jpeg",
                  "BackURL": "https://i.imgur.com/5fSErgT.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11231": {
                  "FaceURL": "https://i.imgur.com/l5SIsjN.jpeg",
                  "BackURL": "https://i.imgur.com/4CITR2M.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11227": {
                  "FaceURL": "https://i.imgur.com/nyUdPiM.jpeg",
                  "BackURL": "https://i.imgur.com/kDLhAR0.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11232": {
                  "FaceURL": "https://i.imgur.com/UVJ39RC.jpeg",
                  "BackURL": "https://i.imgur.com/izkawD3.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "6a3d01",
                  "Name": "Card",
                  "Transform": {
                    "posX": -28.0000038,
                    "posY": 1.88349843,
                    "posZ": 9.499995,
                    "rotX": -4.961887E-06,
                    "rotY": 180.00087,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sombre Forêt",
                  "Description": "Inquiétante",
                  "GMNotes": "{\"id\":\"e43ee3de-cec2-45fb-a3d3-c5e31d9da634\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"For�t.\",\"locationFront\":{\"connections\":\"TriangleAlt\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"connections\":\"TriangleAlt\"},\"TtsZoopGuid\":\"e43ee3de-cec2-45fb-a3d3-c5e31d9da634\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1122900,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11229": {
                      "FaceURL": "https://i.imgur.com/DaHx823.jpeg",
                      "BackURL": "https://i.imgur.com/SfwObK9.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "8eef67",
                  "Name": "Card",
                  "Transform": {
                    "posX": -19.5000076,
                    "posY": 1.81641066,
                    "posZ": 26.9999962,
                    "rotX": 0.00638607051,
                    "rotY": 180.000122,
                    "rotZ": 359.9922,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sombre Forêt",
                  "Description": "Lugubre",
                  "GMNotes": "{\"id\":\"db024a03-a755-43a5-9c82-c27af196bcd7\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"For�t.\",\"locationFront\":{\"connections\":\"TriangleAlt\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"connections\":\"TriangleAlt\"},\"TtsZoopGuid\":\"db024a03-a755-43a5-9c82-c27af196bcd7\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1123000,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1002": {
                      "FaceURL": "https://i.imgur.com/4bOz9be.jpeg",
                      "BackURL": "https://i.imgur.com/ZPHCQWM.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "32e7d5",
                  "Name": "Card",
                  "Transform": {
                    "posX": -19.4999313,
                    "posY": 1.8700105,
                    "posZ": 26.9999886,
                    "rotX": 0.00121073844,
                    "rotY": 180.000717,
                    "rotZ": 179.97966,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Maison de Campagne ",
                  "Description": "Laissée à l'Abandon",
                  "GMNotes": "{\"id\":\"b7fa5bc4-81ea-439d-8cd0-a272bb581260\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"For�t.\",\"locationFront\":{\"connections\":\"TriangleAlt\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"connections\":\"TriangleAlt\"},\"TtsZoopGuid\":\"b7fa5bc4-81ea-439d-8cd0-a272bb581260\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1122800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11228": {
                      "FaceURL": "https://i.imgur.com/c47lGk8.jpeg",
                      "BackURL": "https://i.imgur.com/5fSErgT.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "3b2129",
                  "Name": "Card",
                  "Transform": {
                    "posX": -19.4999962,
                    "posY": 1.86011779,
                    "posZ": 27.0000038,
                    "rotX": -0.000171115375,
                    "rotY": 180.000092,
                    "rotZ": 180.000916,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sombre Forêt",
                  "Description": "Sépulcrale",
                  "GMNotes": "{\"id\":\"ffae3cf7-172a-4a68-8996-a0d047bdedc5\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"For�t.\",\"locationFront\":{\"connections\":\"TriangleAlt\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"connections\":\"TriangleAlt\"},\"TtsZoopGuid\":\"ffae3cf7-172a-4a68-8996-a0d047bdedc5\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1123100,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1003": {
                      "FaceURL": "https://i.imgur.com/l5SIsjN.jpeg",
                      "BackURL": "https://i.imgur.com/4CITR2M.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "ad1bb3",
                  "Name": "Card",
                  "Transform": {
                    "posX": -19.4999447,
                    "posY": 1.87989485,
                    "posZ": 27.0000172,
                    "rotX": 0.00116040907,
                    "rotY": 180.0009,
                    "rotZ": 179.970169,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Cathédrale Profanée",
                  "Description": "Extérieur",
                  "GMNotes": "{\"id\":\"43a33c72-5659-4c44-8acf-c11c59baad3a\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"For�t. Cath�drale.\",\"locationFront\":{\"icons\":\"HeartAlt\",\"connections\":\"TriangleAlt|CrossAlt\",\"uses\":[{\"countPerInvestigator\":3,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"connections\":\"TriangleAlt\"},\"TtsZoopGuid\":\"43a33c72-5659-4c44-8acf-c11c59baad3a\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1122700,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11227": {
                      "FaceURL": "https://i.imgur.com/nyUdPiM.jpeg",
                      "BackURL": "https://i.imgur.com/kDLhAR0.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "32347d",
                  "Name": "Card",
                  "Transform": {
                    "posX": -19.4999981,
                    "posY": 1.860093,
                    "posZ": 27.0000019,
                    "rotX": -0.00100485852,
                    "rotY": 180.000229,
                    "rotZ": -0.000445888145,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sombre Forêt",
                  "Description": "Sinistre",
                  "GMNotes": "{\"id\":\"f3585432-a3ec-4ae2-a6c3-d29e1efba60b\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"For�t.\",\"locationFront\":{\"connections\":\"TriangleAlt\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"connections\":\"TriangleAlt\"},\"TtsZoopGuid\":\"f3585432-a3ec-4ae2-a6c3-d29e1efba60b\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1123200,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1005": {
                      "FaceURL": "https://i.imgur.com/UVJ39RC.jpeg",
                      "BackURL": "https://i.imgur.com/izkawD3.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "42c2b1",
              "Name": "Card",
              "Transform": {
                "posX": 4.99959469,
                "posY": 1.50920928,
                "posZ": 14.5009108,
                "rotX": 0.01089061,
                "rotY": 180.010529,
                "rotZ": 0.0049502803,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Cheryl Moses",
              "Description": "La Conservatrice",
              "GMNotes": "{\"id\":\"09f573fe-7403-4a4d-84a7-cc38ac29a674\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"09f573fe-7403-4a4d-84a7-cc38ac29a674\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1118700,
              "SidewaysCard": false,
              "CustomDeck": {
                "11187": {
                  "FaceURL": "https://i.imgur.com/0gLtQuD.jpeg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "43d872",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -27.5000019,
                "posY": 1.84000075,
                "posZ": 7.499998,
                "rotX": -5.317482E-06,
                "rotY": 180.025726,
                "rotZ": 6.75114848E-07,
                "scaleX": 0.7,
                "scaleY": 0.7,
                "scaleZ": 0.7
              },
              "Nickname": "Fin",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089688282/A4A694A3F44E6A43A7B762374323859468CC303B/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 2
              },
              "LuaScript": "function onCollisionEnter(collision_info)\r\n  self.shuffle() \r\n self.shuffle() \r\n self.shuffle() \r\nend",
              "LuaScriptState": "{\"ml\":[]}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "309bc8",
                  "Name": "Deck",
                  "Transform": {
                    "posX": -28.0000076,
                    "posY": 1.95597279,
                    "posZ": 15.4999857,
                    "rotX": 0.00705538038,
                    "rotY": 180.007629,
                    "rotZ": -0.002062268,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "SidewaysCard": false,
                  "DeckIDs": [
                    1113547,
                    1113547,
                    1113547,
                    1113547
                  ],
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "5f7e99",
                      "Name": "Card",
                      "Transform": {
                        "posX": -30.0000114,
                        "posY": 1.78357518,
                        "posZ": 6.9999876,
                        "rotX": 0.0003204624,
                        "rotY": 180.031067,
                        "rotZ": -0.002057118,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Appui de la Sororité",
                      "Description": "",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": false,
                      "Hands": true,
                      "CardID": 1113547,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11135": {
                          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                          "NumWidth": 10,
                          "NumHeight": 7,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "a3c1a5",
                      "Name": "Card",
                      "Transform": {
                        "posX": -30.0000057,
                        "posY": 1.816415,
                        "posZ": 7.000002,
                        "rotX": -0.004920561,
                        "rotY": 180.031021,
                        "rotZ": -0.00247699535,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Appui de la Sororité",
                      "Description": "",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": false,
                      "Hands": true,
                      "CardID": 1113547,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11135": {
                          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                          "NumWidth": 10,
                          "NumHeight": 7,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "32ea49",
                      "Name": "Card",
                      "Transform": {
                        "posX": -30.0000038,
                        "posY": 1.85046554,
                        "posZ": 6.99999762,
                        "rotX": 0.00126991852,
                        "rotY": 180.03096,
                        "rotZ": -0.00149992539,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Appui de la Sororité",
                      "Description": "",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": false,
                      "Hands": true,
                      "CardID": 1113547,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11135": {
                          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                          "NumWidth": 10,
                          "NumHeight": 7,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "04d33d",
                      "Name": "Card",
                      "Transform": {
                        "posX": -29.5000019,
                        "posY": 1.8600111,
                        "posZ": 6.999999,
                        "rotX": -0.001976582,
                        "rotY": 180.031036,
                        "rotZ": 0.00187566841,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Appui de la Sororité",
                      "Description": "",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": false,
                      "Hands": true,
                      "CardID": 1113547,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11135": {
                          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                          "NumWidth": 10,
                          "NumHeight": 7,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                },
                {
                  "GUID": "4d90d3",
                  "Name": "Deck",
                  "Transform": {
                    "posX": -28.0000076,
                    "posY": 1.96078718,
                    "posZ": 15.4999847,
                    "rotX": 0.00721072638,
                    "rotY": 180.008453,
                    "rotZ": -0.00215253513,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": false,
                  "SidewaysCard": false,
                  "DeckIDs": [
                    1113500,
                    1113502,
                    1113502,
                    1113502,
                    1113502
                  ],
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "66d7ac",
                      "Name": "Card",
                      "Transform": {
                        "posX": -32.9794,
                        "posY": 1.78363848,
                        "posZ": 3.49967861,
                        "rotX": -0.000307546317,
                        "rotY": 179.989609,
                        "rotZ": 0.0003683985,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Elizabeth Baxter",
                      "Description": "",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": false,
                      "Hands": true,
                      "CardID": 1113500,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11135": {
                          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                          "NumWidth": 10,
                          "NumHeight": 7,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "0ae840",
                      "Name": "Card",
                      "Transform": {
                        "posX": -27.0000076,
                        "posY": 1.7835778,
                        "posZ": 6.999992,
                        "rotX": 0.0002788174,
                        "rotY": 180.030716,
                        "rotZ": -0.00185738038,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rituel de la Sororité",
                      "Description": "",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": false,
                      "Hands": true,
                      "CardID": 1113502,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11135": {
                          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                          "NumWidth": 10,
                          "NumHeight": 7,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "d39148",
                      "Name": "Card",
                      "Transform": {
                        "posX": -27.0000076,
                        "posY": 1.81641233,
                        "posZ": 6.999995,
                        "rotX": 0.006383242,
                        "rotY": 180.030792,
                        "rotZ": 359.9922,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rituel de la Sororité",
                      "Description": "",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": false,
                      "Hands": true,
                      "CardID": 1113502,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11135": {
                          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                          "NumWidth": 10,
                          "NumHeight": 7,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "52a270",
                      "Name": "Card",
                      "Transform": {
                        "posX": -27.0000038,
                        "posY": 1.85046554,
                        "posZ": 6.999998,
                        "rotX": 0.00127226964,
                        "rotY": 180.030914,
                        "rotZ": -0.00150120037,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rituel de la Sororité",
                      "Description": "",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": false,
                      "Hands": true,
                      "CardID": 1113502,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11135": {
                          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                          "NumWidth": 10,
                          "NumHeight": 7,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "734982",
                      "Name": "Card",
                      "Transform": {
                        "posX": -27.0000038,
                        "posY": 1.86009455,
                        "posZ": 6.999998,
                        "rotX": 0.00123738183,
                        "rotY": 180.030975,
                        "rotZ": -0.00145681971,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Rituel de la Sororité",
                      "Description": "",
                      "GMNotes": "",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": false,
                      "Hands": true,
                      "CardID": 1113502,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11135": {
                          "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                          "NumWidth": 10,
                          "NumHeight": 7,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                },
                {
                  "GUID": "085dfb",
                  "Name": "Card",
                  "Transform": {
                    "posX": -28.0,
                    "posY": 1.929391,
                    "posZ": 17.9999981,
                    "rotX": 0.0018324171,
                    "rotY": 180.033386,
                    "rotZ": -0.000401373545,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Lame de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113546,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "441a6c",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -25.9999981,
                "posY": 1.83999956,
                "posZ": 21.5000019,
                "rotX": -5.14632166E-06,
                "rotY": 180.001083,
                "rotZ": -4.733448E-07,
                "scaleX": 0.7,
                "scaleY": 0.7,
                "scaleZ": 0.7
              },
              "Nickname": "June vous fait confiance",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089708213/88EFA42DCCA290CE926906491D1FEBD4DD0D8C21/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
              "LuaScriptState": "{\"ml\":{\"2e97ee\":{\"lock\":false,\"pos\":{\"x\":17.501,\"y\":1.5504,\"z\":-6.0196},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b4f42e\":{\"lock\":false,\"pos\":{\"x\":17.501,\"y\":1.5504,\"z\":-6.0196},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "2e97ee",
                  "Name": "Deck",
                  "Transform": {
                    "posX": 17.501,
                    "posY": 1.55043852,
                    "posZ": -6.0196,
                    "rotX": 0.0108918278,
                    "rotY": 179.999954,
                    "rotZ": 0.00494829938,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": false,
                  "SidewaysCard": false,
                  "DeckIDs": [
                    1124900,
                    1124300,
                    1125000,
                    1124600,
                    1124800,
                    100800
                  ],
                  "CustomDeck": {
                    "11249": {
                      "FaceURL": "https://i.imgur.com/zsSooWW.jpeg",
                      "BackURL": "https://i.imgur.com/W8JMsl0.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "11243": {
                      "FaceURL": "https://i.imgur.com/HYdqA5z.jpeg",
                      "BackURL": "https://i.imgur.com/0eDgHBL.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "11250": {
                      "FaceURL": "https://i.imgur.com/wY37Mwu.jpeg",
                      "BackURL": "https://i.imgur.com/fps3cVe.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "11246": {
                      "FaceURL": "https://i.imgur.com/Nrb5aVg.jpeg",
                      "BackURL": "https://i.imgur.com/QW5yR6V.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "11248": {
                      "FaceURL": "https://i.imgur.com/3Tsv77a.jpeg",
                      "BackURL": "https://i.imgur.com/2rqGhy4.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    },
                    "1008": {
                      "FaceURL": "https://i.imgur.com/TAfxZIU.jpeg",
                      "BackURL": "https://i.imgur.com/JBBbEt5.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "f56e7d",
                      "Name": "Card",
                      "Transform": {
                        "posX": 32.9999771,
                        "posY": 1.49345267,
                        "posZ": 15.0000286,
                        "rotX": 0.000167264181,
                        "rotY": 180.000168,
                        "rotZ": -0.0005619798,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Stopper le Culte",
                      "Description": "",
                      "GMNotes": "{\"id\":\"0e4aeb6e-4b45-4398-9668-70267f7f9605\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"0e4aeb6e-4b45-4398-9668-70267f7f9605\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 1124900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11249": {
                          "FaceURL": "https://i.imgur.com/zsSooWW.jpeg",
                          "BackURL": "https://i.imgur.com/W8JMsl0.jpeg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "f2c915",
                      "Name": "Card",
                      "Transform": {
                        "posX": 33.0,
                        "posY": 1.53369379,
                        "posZ": 15.0,
                        "rotX": 0.0011745037,
                        "rotY": 180.001465,
                        "rotZ": 0.0006186781,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Trouver la Cathédrale",
                      "Description": "",
                      "GMNotes": "{\"id\":\"45cf5fb1-682c-4a1d-b1be-41911ef93af3\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"45cf5fb1-682c-4a1d-b1be-41911ef93af3\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 1124300,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11243": {
                          "FaceURL": "https://i.imgur.com/HYdqA5z.jpeg",
                          "BackURL": "https://i.imgur.com/0eDgHBL.jpeg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "90ebc4",
                      "Name": "Card",
                      "Transform": {
                        "posX": 33.0,
                        "posY": 1.56765676,
                        "posZ": 15.0,
                        "rotX": -4.13098278E-05,
                        "rotY": 180.0,
                        "rotZ": -0.000110220033,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "L'Ombre dans les Arbres",
                      "Description": "",
                      "GMNotes": "{\"id\":\"cfdcc9fe-761f-4bc3-803d-0069ad3532bb\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"cfdcc9fe-761f-4bc3-803d-0069ad3532bb\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 1125000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11250": {
                          "FaceURL": "https://i.imgur.com/wY37Mwu.jpeg",
                          "BackURL": "https://i.imgur.com/fps3cVe.jpeg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "15e9bc",
                      "Name": "Card",
                      "Transform": {
                        "posX": 33.0,
                        "posY": 1.49346447,
                        "posZ": 20.5,
                        "rotX": 2.1447012E-07,
                        "rotY": 180.0,
                        "rotZ": -9.306644E-07,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Le Plan de June, 3ème partie ",
                      "Description": "",
                      "GMNotes": "{\"id\":\"b643a012-94f6-436f-9375-d7023e2af1e9\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"b643a012-94f6-436f-9375-d7023e2af1e9\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 1124600,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11246": {
                          "FaceURL": "https://i.imgur.com/Nrb5aVg.jpeg",
                          "BackURL": "https://i.imgur.com/QW5yR6V.jpeg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "330395",
                      "Name": "Card",
                      "Transform": {
                        "posX": 33.0,
                        "posY": 1.54387414,
                        "posZ": 20.5,
                        "rotX": -4.80733752E-06,
                        "rotY": 179.998611,
                        "rotZ": 359.621216,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Le Plan de June, 2ème partie ",
                      "Description": "",
                      "GMNotes": "{\"id\":\"0205b8b9-750c-41bd-8253-5bf4d3dc522d\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"0205b8b9-750c-41bd-8253-5bf4d3dc522d\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 1124800,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "11248": {
                          "FaceURL": "https://i.imgur.com/3Tsv77a.jpeg",
                          "BackURL": "https://i.imgur.com/2rqGhy4.jpeg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "a60c52",
                      "Name": "Card",
                      "Transform": {
                        "posX": 33.0,
                        "posY": 1.582298,
                        "posZ": 20.5,
                        "rotX": -3.3472993E-06,
                        "rotY": 179.987045,
                        "rotZ": 359.4522,
                        "scaleX": 0.714285731,
                        "scaleY": 1.0,
                        "scaleZ": 0.714285731
                      },
                      "Nickname": "Le Plan de June, 1ère partie ",
                      "Description": "",
                      "GMNotes": "{\"id\":\"25d04133-1171-4f8f-8b44-c5d64506ab99\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"25d04133-1171-4f8f-8b44-c5d64506ab99\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "ScenarioCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100800,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1008": {
                          "FaceURL": "https://i.imgur.com/TAfxZIU.jpeg",
                          "BackURL": "https://i.imgur.com/JBBbEt5.jpeg",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": true,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                }
              ]
            },
            {
              "GUID": "4e1541",
              "Name": "Card",
              "Transform": {
                "posX": -31.8484859,
                "posY": 1.88130248,
                "posZ": 2.52026,
                "rotX": 359.933136,
                "rotY": 179.67392,
                "rotZ": 180.084167,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Mélissande Rowe",
              "Description": "",
              "GMNotes": "{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"healthPerInv\": \"true\",\n  \"type\": \"Enemy\",\n  \"victory\": 0\n}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113534,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "4f0597",
              "Name": "Card",
              "Transform": {
                "posX": -27.50006,
                "posY": 1.78357542,
                "posZ": 2.49993682,
                "rotX": 0.00031767707,
                "rotY": 179.999008,
                "rotZ": 180.00206,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Cathédrale Profanée",
              "Description": "Intérieur",
              "GMNotes": "{\"id\":\"21f77aba-50f0-41d1-b25e-a897f3679035\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Cath�drale.\",\"locationFront\":{\"icons\":\"CrossAlt\",\"connections\":\"HeartAlt\",\"uses\":[{\"count\":0,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"CrossAlt\",\"connections\":\"HeartAlt\"},\"TtsZoopGuid\":\"21f77aba-50f0-41d1-b25e-a897f3679035\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1123800,
              "SidewaysCard": false,
              "CustomDeck": {
                "11238": {
                  "FaceURL": "https://i.imgur.com/lohnEmO.jpeg",
                  "BackURL": "https://i.imgur.com/jZOl3oH.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "526b96",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -32.9996872,
                "posY": 1.83414531,
                "posZ": 4.5017004,
                "rotX": 7.255658,
                "rotY": 0.006919983,
                "rotZ": 0.00287983147,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Grand Ancien\"}",
              "XmlUI": ""
            },
            {
              "GUID": "56719b",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -20.4997978,
                "posY": 1.77099991,
                "posZ": 18.0000019,
                "rotX": 5.07113E-06,
                "rotY": -0.00159178372,
                "rotZ": -2.80591451E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Porte de Chambre\"}",
              "XmlUI": ""
            },
            {
              "GUID": "5724c7",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -19.4998951,
                "posY": 1.81239974,
                "posZ": 13.0002127,
                "rotX": 4.749849,
                "rotY": 0.00268227584,
                "rotZ": 4.21139157E-05,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Soutiens d'histoire\"}",
              "XmlUI": ""
            },
            {
              "GUID": "5b3d13",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -24.5000362,
                "posY": 1.7710017,
                "posZ": 4.49996233,
                "rotX": -8.695576E-06,
                "rotY": 359.978058,
                "rotZ": 8.483868E-05,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Sombre Forêt\"}",
              "XmlUI": ""
            },
            {
              "GUID": "60ae59",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -26.0002,
                "posY": 1.84,
                "posZ": 16.5002,
                "rotX": -5.22017262E-06,
                "rotY": 180.0093,
                "rotZ": -5.846983E-10,
                "scaleX": 0.7,
                "scaleY": 0.7,
                "scaleZ": 0.7
              },
              "Nickname": "Couloirs",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089688918/CEEFA5B521D8919F0534A5D97EAA11F2976204EB/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
              "LuaScriptState": "{\"ml\":{\"04d7e2\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.5069,\"z\":21.5},\"rot\":{\"x\":0.0097,\"y\":120.0071,\"z\":359.993},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"20d435\":{\"lock\":false,\"pos\":{\"x\":-0.5,\"y\":1.5074,\"z\":21.5},\"rot\":{\"x\":0.0012,\"y\":239.9885,\"z\":0.0119},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"3381b1\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5068,\"z\":19.5},\"rot\":{\"x\":0.0109,\"y\":179.9799,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"35fc2b\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5081,\"z\":26.5},\"rot\":{\"x\":0.0109,\"y\":179.9816,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"7cecff\":{\"lock\":false,\"pos\":{\"x\":-0.5,\"y\":1.5079,\"z\":24},\"rot\":{\"x\":0.0097,\"y\":120.0068,\"z\":359.993},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"b38d57\":{\"lock\":false,\"pos\":{\"x\":5.5,\"y\":1.5074,\"z\":24},\"rot\":{\"x\":0.0012,\"y\":240.0269,\"z\":0.0119},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e00001\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.5224,\"z\":30},\"rot\":{\"x\":0.0109,\"y\":179.9778,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00002\":{\"lock\":false,\"pos\":{\"x\":2.5,\"y\":1.521,\"z\":23},\"rot\":{\"x\":0.0109,\"y\":180.0149,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "d56d8d",
                  "Name": "Card",
                  "Transform": {
                    "posX": -26.5,
                    "posY": 1.93675709,
                    "posZ": 16.4999981,
                    "rotX": 0.00217534648,
                    "rotY": 180.015518,
                    "rotZ": 180.000778,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Long Couloir",
                  "Description": "",
                  "GMNotes": "{\"id\":\"85f6f15d-88d3-4260-a193-848b2e3b8919\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Circle\",\"connections\":\"Triangle|Cross|Square\",\"uses\":[{\"count\":0,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Circle\",\"connections\":\"Triangle|Cross|Square\"},\"TtsZoopGuid\":\"85f6f15d-88d3-4260-a193-848b2e3b8919\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1114000,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11140": {
                      "FaceURL": "https://i.imgur.com/wrRMbxq.jpeg",
                      "BackURL": "https://i.imgur.com/oitDkgE.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00001",
                  "Name": "Card",
                  "Transform": {
                    "posX": 2.49999928,
                    "posY": 1.51237142,
                    "posZ": 30.0000019,
                    "rotX": 0.0108934408,
                    "rotY": 179.977814,
                    "rotZ": 180.004944,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Bureau",
                  "Description": "",
                  "GMNotes": "{\"id\":\"1c255a84-db39-431f-9438-6f44a2fdae69\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Cross\",\"connections\":\"Circle\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Cross\",\"connections\":\"Circle\"},\"TtsZoopGuid\":\"1c255a84-db39-431f-9438-6f44a2fdae69\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1114100,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11141": {
                      "FaceURL": "https://i.imgur.com/PxUQVP5.jpeg",
                      "BackURL": "https://i.imgur.com/WFBIXmz.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "6167ac",
              "Name": "Deck",
              "Transform": {
                "posX": 30.5,
                "posY": 1.61727989,
                "posZ": -2.9971,
                "rotX": -0.0005909924,
                "rotY": 179.996384,
                "rotZ": 180.001068,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                1113503,
                1114600,
                1113507,
                1113509,
                1113504,
                1113503,
                1113510,
                1113506,
                1113504,
                1113507,
                1113511,
                1113511,
                1113505,
                1113509,
                1113512,
                1114600,
                1113505,
                1113506,
                1113510,
                1113512
              ],
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11146": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081380298/050D1F1439C7CA8E319D3B9F171C9735729157E8/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081380659/DC874CC7730BC2F4B0F3C4EECAFD6AD6155DC610/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "67e0a9",
                  "Name": "Card",
                  "Transform": {
                    "posX": 13.5944519,
                    "posY": 1.52029526,
                    "posZ": 23.9998932,
                    "rotX": 0.0107071372,
                    "rotY": 179.999649,
                    "rotZ": 180.00351,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "La Proie d'une Ombre",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113503,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "ae0d3f",
                  "Name": "CardCustom",
                  "Transform": {
                    "posX": 8.089256,
                    "posY": 1.76462364,
                    "posZ": 23.9995136,
                    "rotX": 0.005170027,
                    "rotY": 179.9934,
                    "rotZ": 180.722839,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Jusqu'en Enfer",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1114600,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11146": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081380298/050D1F1439C7CA8E319D3B9F171C9735729157E8/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081380659/DC874CC7730BC2F4B0F3C4EECAFD6AD6155DC610/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "2c8c42",
                  "Name": "Card",
                  "Transform": {
                    "posX": 6.861105,
                    "posY": 1.55525792,
                    "posZ": 23.99979,
                    "rotX": 359.982483,
                    "rotY": 180.000244,
                    "rotZ": 179.980484,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "30 Jours de Nuits",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113507,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "2ad174",
                  "Name": "Card",
                  "Transform": {
                    "posX": 12.3707857,
                    "posY": 1.64940166,
                    "posZ": 23.9997253,
                    "rotX": 359.984131,
                    "rotY": 179.996353,
                    "rotZ": 181.0354,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Le Jeu de la Dame",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113509,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "48a802",
                  "Name": "Card",
                  "Transform": {
                    "posX": 4.41638,
                    "posY": 1.63721371,
                    "posZ": 23.9991131,
                    "rotX": 0.07432357,
                    "rotY": 180.004456,
                    "rotZ": 180.46489,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Le Bal des Vampires",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113504,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "ac531a",
                  "Name": "Card",
                  "Transform": {
                    "posX": 3.18860555,
                    "posY": 1.53287768,
                    "posZ": 23.9998245,
                    "rotX": 0.03799305,
                    "rotY": 180.002213,
                    "rotZ": 179.429489,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "La Proie d'une Ombre",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113503,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "af7f6b",
                  "Name": "Card",
                  "Transform": {
                    "posX": 6.24966,
                    "posY": 1.63085186,
                    "posZ": 23.9995842,
                    "rotX": 0.08091548,
                    "rotY": 180.01,
                    "rotZ": 181.929749,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Liaisons Dangeureuses",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113510,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "feabb6",
                  "Name": "Card",
                  "Transform": {
                    "posX": 7.472673,
                    "posY": 1.6295259,
                    "posZ": 23.9995785,
                    "rotX": 359.957428,
                    "rotY": 179.984818,
                    "rotZ": 180.916336,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Melancholia",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113506,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "3f0e38",
                  "Name": "Card",
                  "Transform": {
                    "posX": 8.69856548,
                    "posY": 1.69647431,
                    "posZ": 23.999651,
                    "rotX": 0.00527220825,
                    "rotY": 179.996277,
                    "rotZ": 180.748169,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Le Bal des Vampires",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113504,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "543727",
                  "Name": "Card",
                  "Transform": {
                    "posX": 12.9852486,
                    "posY": 1.69408846,
                    "posZ": 23.9999046,
                    "rotX": 359.983856,
                    "rotY": 179.9878,
                    "rotZ": 181.056076,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "30 Jours de Nuits",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113507,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "94ad80",
                  "Name": "Card",
                  "Transform": {
                    "posX": 3.80215216,
                    "posY": 1.59883034,
                    "posZ": 23.9993744,
                    "rotX": 0.0238885749,
                    "rotY": 179.995056,
                    "rotZ": 178.896179,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sans un Bruit",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113511,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "ec5216",
                  "Name": "Card",
                  "Transform": {
                    "posX": 9.919761,
                    "posY": 1.56675029,
                    "posZ": 23.9997921,
                    "rotX": 0.01989832,
                    "rotY": 179.995743,
                    "rotZ": 180.791885,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sans un Bruit",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113511,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "5c241a",
                  "Name": "Card",
                  "Transform": {
                    "posX": 10.5318689,
                    "posY": 1.53245652,
                    "posZ": 23.9997883,
                    "rotX": 0.00200645439,
                    "rotY": 179.995026,
                    "rotZ": 180.616943,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Détour Mortel",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113505,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "7f754a",
                  "Name": "Card",
                  "Transform": {
                    "posX": 9.30896,
                    "posY": 1.62852728,
                    "posZ": 23.9997616,
                    "rotX": 359.977478,
                    "rotY": 179.999069,
                    "rotZ": 180.848511,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Le Jeu de la Dame",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113509,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e23f63",
                  "Name": "Card",
                  "Transform": {
                    "posX": 5.643735,
                    "posY": 1.58129489,
                    "posZ": 23.99887,
                    "rotX": 0.00689220568,
                    "rotY": 180.012665,
                    "rotZ": 179.922012,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "L'Associée du Diable",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113512,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "deaa60",
                  "Name": "CardCustom",
                  "Transform": {
                    "posX": 5.03150558,
                    "posY": 1.549668,
                    "posZ": 23.9989357,
                    "rotX": -0.004679016,
                    "rotY": 179.997055,
                    "rotZ": 181.485657,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Jusqu'en Enfer",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1114600,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11146": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081380298/050D1F1439C7CA8E319D3B9F171C9735729157E8/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081380659/DC874CC7730BC2F4B0F3C4EECAFD6AD6155DC610/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "c4f091",
                  "Name": "Card",
                  "Transform": {
                    "posX": 11.1457329,
                    "posY": 1.57315457,
                    "posZ": 23.9997749,
                    "rotX": 359.985718,
                    "rotY": 179.997,
                    "rotZ": 180.88678,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Détour Mortel",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113505,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "26c902",
                  "Name": "Card",
                  "Transform": {
                    "posX": 8.5,
                    "posY": 2.18900132,
                    "posZ": 24.0,
                    "rotX": 359.98996,
                    "rotY": 179.995789,
                    "rotZ": 202.780823,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Melancholia",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113506,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "f0a587",
                  "Name": "Card",
                  "Transform": {
                    "posX": 11.7599649,
                    "posY": 1.60770559,
                    "posZ": 23.99977,
                    "rotX": 359.984131,
                    "rotY": 179.996323,
                    "rotZ": 181.0354,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Liaisons Dangeureuses",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113510,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "6c7e72",
                  "Name": "Card",
                  "Transform": {
                    "posX": 14.2041817,
                    "posY": 1.57347834,
                    "posZ": 23.999855,
                    "rotX": 0.0106915,
                    "rotY": 179.9996,
                    "rotZ": 180.017075,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "L'Associée du Diable",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113512,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "69eaa5",
              "Name": "Card",
              "Transform": {
                "posX": 2.49999928,
                "posY": 1.50971019,
                "posZ": 16.0000019,
                "rotX": 0.0108915074,
                "rotY": 180.000015,
                "rotZ": 180.004959,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Salle à Manger",
              "Description": "",
              "GMNotes": "{\"id\":\"5d75ca74-5097-4522-8400-54343c484cbb\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Square\",\"connections\":\"Diamond|Circle|Slash|DoubleSlash\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Square\",\"connections\":\"Diamond|Circle|Slash|DoubleSlash\"},\"TtsZoopGuid\":\"5d75ca74-5097-4522-8400-54343c484cbb\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 100700,
              "SidewaysCard": false,
              "CustomDeck": {
                "1007": {
                  "FaceURL": "https://i.imgur.com/GbEk7cY.jpeg",
                  "BackURL": "https://i.imgur.com/DRR6yEk.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "70e565",
              "Name": "Deck",
              "Transform": {
                "posX": -19.5000763,
                "posY": 1.81018519,
                "posZ": 11.0002117,
                "rotX": 2.40695153E-05,
                "rotY": 180.022018,
                "rotZ": -0.000139824828,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                1118800,
                1123900,
                1118900,
                1119000
              ],
              "CustomDeck": {
                "11188": {
                  "FaceURL": "https://i.imgur.com/Cqr0wMD.jpeg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "11239": {
                  "FaceURL": "https://i.imgur.com/ORFDhCH.jpeg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "11189": {
                  "FaceURL": "https://i.imgur.com/vckADcU.jpeg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "11190": {
                  "FaceURL": "https://i.imgur.com/ShT0703.jpeg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "e00006",
                  "Name": "Card",
                  "Transform": {
                    "posX": -22.0,
                    "posY": 1.81641352,
                    "posZ": 24.5000057,
                    "rotX": -0.00490917452,
                    "rotY": 180.024826,
                    "rotZ": -0.00248915656,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Carolyn Clay",
                  "Description": "L'Artiste",
                  "GMNotes": "{\"id\":\"f15be23c-bfd6-4162-af89-2095ce0cdfe2\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"f15be23c-bfd6-4162-af89-2095ce0cdfe2\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Asset",
                    "PlayerCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1118800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11188": {
                      "FaceURL": "https://i.imgur.com/Cqr0wMD.jpeg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00002",
                  "Name": "Card",
                  "Transform": {
                    "posX": -22.0,
                    "posY": 1.8504895,
                    "posZ": 24.5000019,
                    "rotX": -0.000180661242,
                    "rotY": 180.0339,
                    "rotZ": -0.0009768999,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Eileen Shepherd",
                  "Description": "La Banqui�re",
                  "GMNotes": "{\"id\":\"bdf63f80-b7e8-4544-9688-a941d8a3da9e\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"bdf63f80-b7e8-4544-9688-a941d8a3da9e\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Asset",
                    "PlayerCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1123900,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1001": {
                      "FaceURL": "https://i.imgur.com/ORFDhCH.jpeg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00005",
                  "Name": "Card",
                  "Transform": {
                    "posX": -21.9999981,
                    "posY": 1.86009324,
                    "posZ": 24.5000019,
                    "rotX": -0.00100304186,
                    "rotY": 180.024887,
                    "rotZ": -0.000446697319,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Linda Wolf",
                  "Description": "L'�tudiante",
                  "GMNotes": "{\"id\":\"22bfa679-274b-47e3-8ee1-1408c23c4516\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"22bfa679-274b-47e3-8ee1-1408c23c4516\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Asset",
                    "PlayerCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1118900,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11189": {
                      "FaceURL": "https://i.imgur.com/vckADcU.jpeg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00004",
                  "Name": "Card",
                  "Transform": {
                    "posX": -21.999773,
                    "posY": 1.78357375,
                    "posZ": 24.5000439,
                    "rotX": 0.000321991771,
                    "rotY": 180.025543,
                    "rotZ": -0.00205634441,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Diane Parrish",
                  "Description": "La Journaliste",
                  "GMNotes": "{\"id\":\"e16841cf-c002-4cdd-9b11-e5b6e46f5065\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"e16841cf-c002-4cdd-9b11-e5b6e46f5065\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Asset",
                    "PlayerCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1119000,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11190": {
                      "FaceURL": "https://i.imgur.com/ShT0703.jpeg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "795808",
              "Name": "Deck",
              "Transform": {
                "posX": -19.50022,
                "posY": 1.81018662,
                "posZ": 2.50007987,
                "rotX": 1.61748158E-05,
                "rotY": 180.041336,
                "rotZ": -8.918241E-05,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                1113501,
                1113501,
                1113501,
                1113501
              ],
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "016e17",
                  "Name": "Card",
                  "Transform": {
                    "posX": -27.00001,
                    "posY": 1.81535923,
                    "posZ": 10.4999943,
                    "rotX": 0.009127817,
                    "rotY": 180.030823,
                    "rotZ": 359.988647,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Marque du Chasseur",
                  "Description": "Vous êtes marqué",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113501,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "11dffd",
                  "Name": "Card",
                  "Transform": {
                    "posX": -27.0000038,
                    "posY": 1.85046518,
                    "posZ": 10.4999981,
                    "rotX": 0.00127327058,
                    "rotY": 180.030716,
                    "rotZ": -0.00150537747,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Marque du Chasseur",
                  "Description": "Vous êtes marqué",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113501,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "a77d14",
                  "Name": "Card",
                  "Transform": {
                    "posX": -27.0000153,
                    "posY": 1.78357017,
                    "posZ": 10.49999,
                    "rotX": 0.000353756681,
                    "rotY": 180.030945,
                    "rotZ": -0.00234723231,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Marque du Chasseur",
                  "Description": "Vous êtes marqué",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113501,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "a77d14",
                  "Name": "Card",
                  "Transform": {
                    "posX": -27.0000038,
                    "posY": 1.86009443,
                    "posZ": 10.4999981,
                    "rotX": 0.00124038651,
                    "rotY": 180.030777,
                    "rotZ": -0.00146128668,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Marque du Chasseur",
                  "Description": "Vous êtes marqué",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 1113501,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "7cfdf7",
              "Name": "Deck",
              "Transform": {
                "posX": -33.0000648,
                "posY": 1.805372,
                "posZ": 7.499744,
                "rotX": 1.72800865E-05,
                "rotY": 180.000046,
                "rotZ": 180.0001,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                1113550,
                1113549,
                1113548
              ],
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "1b5cbf",
                  "Name": "Card",
                  "Transform": {
                    "posX": -23.0,
                    "posY": 1.83353162,
                    "posZ": 2.99998832,
                    "rotX": 0.000473960536,
                    "rotY": 180.0014,
                    "rotZ": 179.999512,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "June Winters",
                  "Description": "Loyale au Culte",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113550,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "651fc4",
                  "Name": "Card",
                  "Transform": {
                    "posX": -23.5005455,
                    "posY": 1.78357267,
                    "posZ": 2.99945378,
                    "rotX": 0.000325963338,
                    "rotY": 179.999985,
                    "rotZ": 180.002213,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Cheryl Moses",
                  "Description": "Loyale au Culte",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113549,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "29923b",
                  "Name": "Card",
                  "Transform": {
                    "posX": -24.0001411,
                    "posY": 1.888625,
                    "posZ": 3.00002241,
                    "rotX": 0.0006828426,
                    "rotY": 180.000046,
                    "rotZ": 179.98761,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Eileen Shepherd",
                  "Description": "Loyale au Culte",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113548,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "881a7d",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -20.4999962,
                "posY": 1.77099943,
                "posZ": 23.0000019,
                "rotX": 4.93281141E-06,
                "rotY": 0.000294216647,
                "rotZ": 1.72135358E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Si Cheryl vous fait confiance\"}",
              "XmlUI": ""
            },
            {
              "GUID": "881ff8",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -25.9998,
                "posY": 1.77099991,
                "posZ": 18.0,
                "rotX": 4.555153E-06,
                "rotY": -0.00160003477,
                "rotZ": 1.58468822E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Long Couloir\"}",
              "XmlUI": ""
            },
            {
              "GUID": "8ec98a",
              "Name": "Card",
              "Transform": {
                "posX": 8.499999,
                "posY": 1.50786138,
                "posZ": 9.000001,
                "rotX": 0.0108915819,
                "rotY": 180.000031,
                "rotZ": 180.004959,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Cuisine",
              "Description": "",
              "GMNotes": "{\"id\":\"0d1ffb70-eee1-44e0-8440-fb9604ee9717\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Heart\",\"connections\":\"DoubleSlash|Slash|Moon\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Heart\",\"connections\":\"DoubleSlash|Slash|Moon\"},\"TtsZoopGuid\":\"0d1ffb70-eee1-44e0-8440-fb9604ee9717\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 100600,
              "SidewaysCard": false,
              "CustomDeck": {
                "1006": {
                  "FaceURL": "https://i.imgur.com/SqVLJIM.jpeg",
                  "BackURL": "https://i.imgur.com/R0klsNs.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "98a9a2",
              "Name": "Deck",
              "Transform": {
                "posX": -24.4997044,
                "posY": 1.84007275,
                "posZ": 10.9999876,
                "rotX": 0.0374321565,
                "rotY": 180.000137,
                "rotZ": 179.999969,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Sororité Delta",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                1113515,
                1113513,
                1113517,
                1113515,
                1113514,
                1113514,
                1113516,
                1113517,
                1113516,
                1113513
              ],
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "080d4c",
                  "Name": "Card",
                  "Transform": {
                    "posX": -1.00068021,
                    "posY": 1.521913,
                    "posZ": 26.0000076,
                    "rotX": 0.010892313,
                    "rotY": 179.998352,
                    "rotZ": 180.004944,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Escrimeuse de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113515,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "521716",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.94490957,
                    "posY": 1.58205152,
                    "posZ": 25.9988632,
                    "rotX": 0.0112259174,
                    "rotY": 179.993988,
                    "rotZ": 180.0092,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Tireuse de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113513,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "03d685",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.33195066,
                    "posY": 1.54799926,
                    "posZ": 25.9987278,
                    "rotX": 0.0125307795,
                    "rotY": 179.992172,
                    "rotZ": 180.3777,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sentinelle de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113517,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "7e4141",
                  "Name": "Card",
                  "Transform": {
                    "posX": -7.38946724,
                    "posY": 1.57209957,
                    "posZ": 25.99984,
                    "rotX": 0.010323979,
                    "rotY": 180.001129,
                    "rotZ": 180.098328,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Escrimeuse de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113515,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "348999",
                  "Name": "Card",
                  "Transform": {
                    "posX": -5.549405,
                    "posY": 1.52235425,
                    "posZ": 25.9991055,
                    "rotX": 0.0104752472,
                    "rotY": 179.995056,
                    "rotZ": 180.001816,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Assassin de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113514,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "df2adf",
                  "Name": "Card",
                  "Transform": {
                    "posX": 1.49911022,
                    "posY": 1.52169716,
                    "posZ": 25.9999866,
                    "rotX": 0.0108917961,
                    "rotY": 179.995773,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Assassin de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113514,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "1dc2b3",
                  "Name": "Card",
                  "Transform": {
                    "posX": -6.16136265,
                    "posY": 1.6669271,
                    "posZ": 25.99905,
                    "rotX": 0.0104771089,
                    "rotY": 179.998047,
                    "rotZ": 180.12648,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Pisteuse de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113516,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "a2235a",
                  "Name": "Card",
                  "Transform": {
                    "posX": -24.99998,
                    "posY": 1.9181962,
                    "posZ": 10.5000706,
                    "rotX": -0.000825362164,
                    "rotY": 179.999817,
                    "rotZ": 0.004314848,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sentinelle de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113517,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "88273a",
                  "Name": "Card",
                  "Transform": {
                    "posX": -6.77526236,
                    "posY": 1.62147152,
                    "posZ": 25.9995365,
                    "rotX": 0.010326121,
                    "rotY": 179.999023,
                    "rotZ": 180.098328,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Pisteuse de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113516,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "fd11b2",
                  "Name": "Card",
                  "Transform": {
                    "posX": -8.003305,
                    "posY": 1.52261245,
                    "posZ": 26.0000343,
                    "rotX": 0.0100774905,
                    "rotY": 180.000259,
                    "rotZ": 179.998856,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Tireuse de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113513,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "99fb3c",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -24.4999,
                "posY": 1.7710011,
                "posZ": 12.9940958,
                "rotX": -1.32178347E-05,
                "rotY": 0.0114427516,
                "rotZ": 0.000108776228,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Sororité Delta\"}",
              "XmlUI": ""
            },
            {
              "GUID": "9cc3bc",
              "Name": "CardCustom",
              "Transform": {
                "posX": -24.5052242,
                "posY": 1.78360569,
                "posZ": 7.48127556,
                "rotX": -4.998772E-06,
                "rotY": 180.000122,
                "rotZ": 1.672974E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Elizabeth Baxter",
              "Description": "",
              "GMNotes": "{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 4,\n  \"healthPerInv\": \"true\",\n  \"id\": \"99999\",\n  \"traits\": \"Avatar. Sororite. Elite.\",\n  \"type\": \"Enemy\",\n  \"victory\": 1\n}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1164900,
              "SidewaysCard": false,
              "CustomDeck": {
                "11649": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/9450058643502699861/371DEDAE79590FC5A3C8F352EFD3167291235C75/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/13277738114665983763/DC874CC7730BC2F4B0F3C4EECAFD6AD6155DC610/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "9d7725",
              "Name": "Card",
              "Transform": {
                "posX": 4.999394,
                "posY": 1.50787854,
                "posZ": 7.50020933,
                "rotX": 0.0108913546,
                "rotY": 180.001556,
                "rotZ": 0.00494858529,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Mary Rowe ",
              "Description": "Matriarche",
              "GMNotes": "{\"id\":\"c8bd418a-0b1f-43fc-87f2-7aef12fe210a\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"Humano�de. Sororit�.\",\"TtsZoopGuid\":\"c8bd418a-0b1f-43fc-87f2-7aef12fe210a\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1118400,
              "SidewaysCard": false,
              "CustomDeck": {
                "11184": {
                  "FaceURL": "https://i.imgur.com/vf3PEhn.jpeg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "a81991",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -25.9999981,
                "posY": 1.77099943,
                "posZ": 23.0000019,
                "rotX": 4.81723055E-06,
                "rotY": 0.000545055664,
                "rotZ": 1.96715945E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Si June vous fait confiance\"}",
              "XmlUI": ""
            },
            {
              "GUID": "a909b3",
              "Name": "Card",
              "Transform": {
                "posX": -33.9567451,
                "posY": 1.78374231,
                "posZ": 2.5093,
                "rotX": -0.000928998168,
                "rotY": 179.650681,
                "rotZ": 179.991409,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Zae'hielle",
              "Description": "",
              "GMNotes": "{\n  \"class\": \"Mythos\",\n  \"cycle\": \"Standalone\",\n  \"health\": 8,\n  \"healthPerInv\": \"true\",\n  \"type\": \"Enemy\",\n  \"victory\": 0\n}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113535,
              "SidewaysCard": false,
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "b2f07e",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -31.5000038,
                "posY": 1.77100015,
                "posZ": 14.9999981,
                "rotX": 4.889429E-06,
                "rotY": 0.000707541651,
                "rotZ": 1.64532636E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Acte 3\"}",
              "XmlUI": ""
            },
            {
              "GUID": "c177e4",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -20.4999981,
                "posY": 1.84000015,
                "posZ": 16.5000019,
                "rotX": -6.99051952E-06,
                "rotY": 179.999268,
                "rotZ": -1.83543747E-07,
                "scaleX": 0.7,
                "scaleY": 0.7,
                "scaleZ": 0.7
              },
              "Nickname": "Chambres",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.614982545,
                "g": 0.0,
                "b": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089689365/F5B537745B3529B117E7190C40BDD224E443EED9/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
              "LuaScriptState": "{\"ml\":{\"e00003\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.52,\"z\":20},\"rot\":{\"x\":0.0109,\"y\":179.9758,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00004\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.522,\"z\":25.5},\"rot\":{\"x\":0.0109,\"y\":179.9745,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00005\":{\"lock\":false,\"pos\":{\"x\":8.5,\"y\":1.521,\"z\":25.5},\"rot\":{\"x\":0.0109,\"y\":179.9751,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00006\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.521,\"z\":20},\"rot\":{\"x\":0.0109,\"y\":179.9759,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "e00003",
                  "Name": "Card",
                  "Transform": {
                    "posX": -3.500047,
                    "posY": 1.52203393,
                    "posZ": 25.500021,
                    "rotX": 0.0108936746,
                    "rotY": 179.9747,
                    "rotZ": 180.004944,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Chambre de Linda",
                  "Description": "",
                  "GMNotes": "{\"id\":\"8b990471-6879-4e2a-8c8b-ae0a2fe18cf2\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe. Chambre.\",\"locationFront\":{\"icons\":\"Triangle\",\"connections\":\"Circle\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Triangle\",\"connections\":\"Circle\"},\"TtsZoopGuid\":\"8b990471-6879-4e2a-8c8b-ae0a2fe18cf2\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1114200,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11142": {
                      "FaceURL": "https://i.imgur.com/DQxjDtW.jpeg",
                      "BackURL": "https://i.imgur.com/3jqdDYC.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00004",
                  "Name": "Card",
                  "Transform": {
                    "posX": -3.50000477,
                    "posY": 1.52098835,
                    "posZ": 20.00006,
                    "rotX": 0.0108936271,
                    "rotY": 179.975937,
                    "rotZ": 180.004944,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Chambre de Carolyn",
                  "Description": "",
                  "GMNotes": "{\"id\":\"113bdd1c-b067-4d3d-b3f9-6b07394aacf3\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe. Chambre.\",\"locationFront\":{\"icons\":\"Triangle\",\"connections\":\"Circle\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Triangle\",\"connections\":\"Circle\"},\"TtsZoopGuid\":\"113bdd1c-b067-4d3d-b3f9-6b07394aacf3\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1114300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11143": {
                      "FaceURL": "https://i.imgur.com/OkWP9yE.jpeg",
                      "BackURL": "https://i.imgur.com/Ys82xi3.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00005",
                  "Name": "Card",
                  "Transform": {
                    "posX": 8.5,
                    "posY": 1.519952,
                    "posZ": 20.0000477,
                    "rotX": 0.01089357,
                    "rotY": 179.976669,
                    "rotZ": 180.004944,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Chambre de Diane",
                  "Description": "",
                  "GMNotes": "{\"id\":\"829d0790-b049-40db-939a-f3901e3873c3\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe. Chambre.\",\"locationFront\":{\"icons\":\"Triangle\",\"connections\":\"Circle\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Triangle\",\"connections\":\"Circle\"},\"TtsZoopGuid\":\"829d0790-b049-40db-939a-f3901e3873c3\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1114400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11144": {
                      "FaceURL": "https://i.imgur.com/k2TqXJD.jpeg",
                      "BackURL": "https://i.imgur.com/5I4Wucf.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00006",
                  "Name": "Card",
                  "Transform": {
                    "posX": 8.5,
                    "posY": 1.52099752,
                    "posZ": 25.50003,
                    "rotX": 0.0108935172,
                    "rotY": 179.976532,
                    "rotZ": 180.004944,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Chambre d'Eileen",
                  "Description": "",
                  "GMNotes": "{\"id\":\"649e6fdc-ad92-40f6-8668-ebc664b32eb6\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe. Chambre.\",\"locationFront\":{\"icons\":\"Triangle\",\"connections\":\"Circle\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Triangle\",\"connections\":\"Circle\"},\"TtsZoopGuid\":\"649e6fdc-ad92-40f6-8668-ebc664b32eb6\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1114500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11145": {
                      "FaceURL": "https://i.imgur.com/3Dbt50L.jpeg",
                      "BackURL": "https://i.imgur.com/TsL8uNe.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "c4f005",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -34.4999046,
                "posY": 1.77100015,
                "posZ": 14.9999971,
                "rotX": 4.46116655E-06,
                "rotY": 0.0007936697,
                "rotZ": -1.28181782E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Acte 4\"}",
              "XmlUI": ""
            },
            {
              "GUID": "d7efd5",
              "Name": "Deck",
              "Transform": {
                "posX": -27.4789276,
                "posY": 1.94117141,
                "posZ": 11.0120764,
                "rotX": 0.0375584662,
                "rotY": 179.992569,
                "rotZ": 179.999924,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Sororité Omega",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                1113531,
                1113532,
                1113522,
                1113521,
                1113527,
                1113524,
                1113528,
                1113519,
                1113526,
                1113519,
                1113523,
                1113532,
                1113525,
                1113520,
                1113522,
                1113530,
                1113528,
                1113523,
                1113527,
                1113529,
                1113524,
                1113532,
                1113529,
                1113520,
                1113532,
                1113521,
                1113530,
                1113525,
                1113526,
                1113530,
                1113531
              ],
              "CustomDeck": {
                "11135": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                  "NumWidth": 10,
                  "NumHeight": 7,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "256196",
                  "Name": "Card",
                  "Transform": {
                    "posX": -59.5000076,
                    "posY": 0.9936078,
                    "posZ": -11.0000076,
                    "rotX": -5.08564E-06,
                    "rotY": 179.999969,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Championne de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113531,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "f6a528",
                  "Name": "Card",
                  "Transform": {
                    "posX": -62.0000076,
                    "posY": 0.9936069,
                    "posZ": -0.5000039,
                    "rotX": -4.9137484E-06,
                    "rotY": 179.9999,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Rejeton de Zae",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113532,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "12e080",
                  "Name": "Card",
                  "Transform": {
                    "posX": -52.0,
                    "posY": 0.993607461,
                    "posZ": -7.49999952,
                    "rotX": -4.9516475E-06,
                    "rotY": 180.00029,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Accords Discordants",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113522,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "3f8cc0",
                  "Name": "Card",
                  "Transform": {
                    "posX": -59.5000038,
                    "posY": 0.993606865,
                    "posZ": -0.500006,
                    "rotX": -4.98950658E-06,
                    "rotY": 180.0,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Lune Sanglante",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113521,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "60a3a0",
                  "Name": "Card",
                  "Transform": {
                    "posX": -59.5,
                    "posY": 0.9936075,
                    "posZ": -7.499999,
                    "rotX": -5.001074E-06,
                    "rotY": 180.00029,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Lypémanie",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113527,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "4f5d78",
                  "Name": "Card",
                  "Transform": {
                    "posX": -47.0000076,
                    "posY": 0.9936071,
                    "posZ": -4.00000143,
                    "rotX": -4.9715195E-06,
                    "rotY": 180.00029,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Barrière de Roses",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113524,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "3e8750",
                  "Name": "Card",
                  "Transform": {
                    "posX": -64.50002,
                    "posY": 0.9936069,
                    "posZ": -0.5000063,
                    "rotX": -4.681757E-06,
                    "rotY": 180.00029,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Torpeur Écarlate",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113528,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "6ad069",
                  "Name": "Card",
                  "Transform": {
                    "posX": -61.9824066,
                    "posY": 0.9936072,
                    "posZ": -3.98317719,
                    "rotX": -5.09432857E-06,
                    "rotY": 180.000092,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Le Sang Appelle le Sang",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113519,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "dce375",
                  "Name": "Card",
                  "Transform": {
                    "posX": -64.49999,
                    "posY": 0.9936075,
                    "posZ": -7.49999857,
                    "rotX": -5.25115547E-06,
                    "rotY": 180.000336,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Désir Brûlant",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113526,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "7b6f9b",
                  "Name": "Card",
                  "Transform": {
                    "posX": -52.0,
                    "posY": 0.9936068,
                    "posZ": -0.5000012,
                    "rotX": -4.96192251E-06,
                    "rotY": 180.000092,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Le Sang Appelle le Sang",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113519,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e969d2",
                  "Name": "Card",
                  "Transform": {
                    "posX": -47.0,
                    "posY": 0.9936074,
                    "posZ": -7.500008,
                    "rotX": -5.094686E-06,
                    "rotY": 180.0001,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Pensées Impures",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113523,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "b5774b",
                  "Name": "Card",
                  "Transform": {
                    "posX": -62.0000038,
                    "posY": 0.9936078,
                    "posZ": -10.9999981,
                    "rotX": -4.995386E-06,
                    "rotY": 180.000259,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Rejeton de Zae",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113532,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "93ba78",
                  "Name": "Card",
                  "Transform": {
                    "posX": -57.0,
                    "posY": 0.993607163,
                    "posZ": -4.00000048,
                    "rotX": -5.083278E-06,
                    "rotY": 180.00029,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Lueur Sororale",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113525,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "f44202",
                  "Name": "Card",
                  "Transform": {
                    "posX": -49.5,
                    "posY": 0.9936077,
                    "posZ": -11.0000029,
                    "rotX": -4.99430962E-06,
                    "rotY": 180.000061,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Danse de la Reine Rouge",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113520,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "b23344",
                  "Name": "Card",
                  "Transform": {
                    "posX": -47.0000038,
                    "posY": 0.9936077,
                    "posZ": -11.0000029,
                    "rotX": -5.06005063E-06,
                    "rotY": 180.000259,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Accords Discordants",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113522,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "2cdf27",
                  "Name": "Card",
                  "Transform": {
                    "posX": -54.5,
                    "posY": 0.993606865,
                    "posZ": -0.500001,
                    "rotX": -4.90569846E-06,
                    "rotY": 180.000092,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Paladine Résolue",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113530,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "ae67ee",
                  "Name": "Card",
                  "Transform": {
                    "posX": -52.0000153,
                    "posY": 0.9936071,
                    "posZ": -4.000009,
                    "rotX": -5.05548633E-06,
                    "rotY": 180.000687,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Torpeur Écarlate",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113528,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "301ff9",
                  "Name": "Card",
                  "Transform": {
                    "posX": -57.0000153,
                    "posY": 0.993607461,
                    "posZ": -7.50001144,
                    "rotX": -4.90586854E-06,
                    "rotY": 180.0001,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Pensées Impures",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113523,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "b8f8c8",
                  "Name": "Card",
                  "Transform": {
                    "posX": -54.50002,
                    "posY": 0.993607461,
                    "posZ": -7.500008,
                    "rotX": -5.092552E-06,
                    "rotY": 180.000519,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Lypémanie",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113527,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "b92569",
                  "Name": "Card",
                  "Transform": {
                    "posX": -49.5000076,
                    "posY": 0.9936074,
                    "posZ": -7.5,
                    "rotX": -5.07905861E-06,
                    "rotY": 180.0007,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Émissaire",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113529,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "b1efb9",
                  "Name": "Card",
                  "Transform": {
                    "posX": -49.5,
                    "posY": 0.9936068,
                    "posZ": -0.5000035,
                    "rotX": -5.0194335E-06,
                    "rotY": 180.0002,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Barrière de Roses",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113524,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "f53dca",
                  "Name": "Card",
                  "Transform": {
                    "posX": -57.0,
                    "posY": 0.9936078,
                    "posZ": -10.9999943,
                    "rotX": -5.00885653E-06,
                    "rotY": 180.00029,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Rejeton de Zae",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113532,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "986ec9",
                  "Name": "Card",
                  "Transform": {
                    "posX": -54.5000038,
                    "posY": 0.993607759,
                    "posZ": -11.0000057,
                    "rotX": -5.07216E-06,
                    "rotY": 180.000137,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Émissaire",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113529,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "1c8750",
                  "Name": "Card",
                  "Transform": {
                    "posX": -62.0,
                    "posY": 0.9936075,
                    "posZ": -7.499999,
                    "rotX": -5.110051E-06,
                    "rotY": 180.0003,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Danse de la Reine Rouge",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113520,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "91ada9",
                  "Name": "Card",
                  "Transform": {
                    "posX": -54.5000076,
                    "posY": 0.993607163,
                    "posZ": -4.000003,
                    "rotX": -4.942063E-06,
                    "rotY": 180.000229,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Rejeton de Zae",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113532,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "6cbbdc",
                  "Name": "Card",
                  "Transform": {
                    "posX": -59.5000153,
                    "posY": 0.9936072,
                    "posZ": -4.000014,
                    "rotX": -4.9975547E-06,
                    "rotY": 180.000381,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Lune Sanglante",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113521,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "551947",
                  "Name": "Card",
                  "Transform": {
                    "posX": -64.5,
                    "posY": 0.9936072,
                    "posZ": -3.99999976,
                    "rotX": -5.140649E-06,
                    "rotY": 180.000046,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Paladine Résolue",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113530,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "50fc5d",
                  "Name": "Card",
                  "Transform": {
                    "posX": -47.0000038,
                    "posY": 0.9936068,
                    "posZ": -0.5000058,
                    "rotX": -4.896277E-06,
                    "rotY": 179.9999,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Lueur Sororale",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113525,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "a0ee49",
                  "Name": "Card",
                  "Transform": {
                    "posX": -52.0,
                    "posY": 0.993607759,
                    "posZ": -11.0000019,
                    "rotX": -5.03337333E-06,
                    "rotY": 180.000351,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Désir Brûlant",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113526,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "a14ea5",
                  "Name": "Card",
                  "Transform": {
                    "posX": -49.5,
                    "posY": 0.9936071,
                    "posZ": -4.00000048,
                    "rotX": -5.01998329E-06,
                    "rotY": 180.0003,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Paladine Résolue",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113530,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "eaadfa",
                  "Name": "Card",
                  "Transform": {
                    "posX": -57.0000076,
                    "posY": 0.993606865,
                    "posZ": -0.5000046,
                    "rotX": -4.91180253E-06,
                    "rotY": 179.9999,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Championne de la Sororité",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1113531,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11135": {
                      "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081308542/72E6A76C9AEAE86EEC09D0CD77E2BCFE358D4BA3/",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081309583/B837307921E2709B45C6C6470E58A8A8522FB916/",
                      "NumWidth": 10,
                      "NumHeight": 7,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "d81927",
              "Name": "CardCustom",
              "Transform": {
                "posX": 23.5012,
                "posY": 1.50380516,
                "posZ": -5.523006,
                "rotX": 0.0108912159,
                "rotY": 180.002777,
                "rotZ": 0.00494868075,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Référence",
              "Description": "La Sororité des Secrets",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113600,
              "SidewaysCard": false,
              "CustomDeck": {
                "11136": {
                  "FaceURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081311176/66972D39948CF966DC8358784E1F9158C0EF0752/",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792081311270/4C1AF894CA8A5E75937117387D7C98BAB61D4AF4/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00009",
              "Name": "Card",
              "Transform": {
                "posX": 8.5,
                "posY": 1.509192,
                "posZ": 15.999999,
                "rotX": 0.01089325,
                "rotY": 179.979645,
                "rotZ": 180.004944,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Salle de Bain",
              "Description": "",
              "GMNotes": "{\"id\":\"e286c685-09c2-479a-9d6d-91a8847954b9\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Slash\",\"connections\":\"Square|Heart\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Slash\",\"connections\":\"Square|Heart\"},\"TtsZoopGuid\":\"e286c685-09c2-479a-9d6d-91a8847954b9\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 1113900,
              "SidewaysCard": false,
              "CustomDeck": {
                "11139": {
                  "FaceURL": "https://i.imgur.com/9oydexq.jpeg",
                  "BackURL": "https://i.imgur.com/yM9wxFB.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e0000a",
              "Name": "Card",
              "Transform": {
                "posX": 2.499996,
                "posY": 1.50837958,
                "posZ": 9.000001,
                "rotX": 0.0108914617,
                "rotY": 179.999908,
                "rotZ": 180.004959,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Salon",
              "Description": "",
              "GMNotes": "{\"id\":\"25d7dfeb-0c44-4109-abc0-647d765e2125\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"DoubleSlash\",\"connections\":\"Clover|Square|Heart\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"DoubleSlash\",\"connections\":\"Clover|Square|Heart\"},\"TtsZoopGuid\":\"25d7dfeb-0c44-4109-abc0-647d765e2125\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 100900,
              "SidewaysCard": false,
              "CustomDeck": {
                "1009": {
                  "FaceURL": "https://i.imgur.com/GvyXgwt.jpeg",
                  "BackURL": "https://i.imgur.com/JK2KEYB.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e0000b",
              "Name": "Card",
              "Transform": {
                "posX": 14.5159,
                "posY": 1.50733793,
                "posZ": 8.979701,
                "rotX": 0.0108936084,
                "rotY": 179.976227,
                "rotZ": 180.004944,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Cave",
              "Description": "",
              "GMNotes": "{\"id\":\"e2320dae-f246-4c7c-b044-a1f87d2ef31e\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Moon\",\"connections\":\"Heart\",\"uses\":[{\"countPerInvestigator\":3,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Moon\",\"connections\":\"Heart\"},\"TtsZoopGuid\":\"e2320dae-f246-4c7c-b044-a1f87d2ef31e\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 101000,
              "SidewaysCard": false,
              "CustomDeck": {
                "1010": {
                  "FaceURL": "https://i.imgur.com/GrQIirN.jpeg",
                  "BackURL": "https://i.imgur.com/Qs5BuI8.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e0000c",
              "Name": "Card",
              "Transform": {
                "posX": -3.50010037,
                "posY": 1.5102284,
                "posZ": 16.0000019,
                "rotX": 0.010893859,
                "rotY": 179.97316,
                "rotZ": 180.004944,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Jardin Nord",
              "Description": "",
              "GMNotes": "{\"id\":\"8ab270e8-60a0-40f2-ac3d-95acddfd0152\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Diamond\",\"connections\":\"T|Square|Clover\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Diamond\",\"connections\":\"T|Square|Clover\"},\"TtsZoopGuid\":\"8ab270e8-60a0-40f2-ac3d-95acddfd0152\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 101100,
              "SidewaysCard": false,
              "CustomDeck": {
                "1011": {
                  "FaceURL": "https://i.imgur.com/5SPKYHl.jpeg",
                  "BackURL": "https://i.imgur.com/iFOZotX.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e0000d",
              "Name": "Card",
              "Transform": {
                "posX": -3.50000072,
                "posY": 1.50889766,
                "posZ": 9.000001,
                "rotX": 0.0108917207,
                "rotY": 179.998322,
                "rotZ": 180.004959,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Jardin Sud",
              "Description": "",
              "GMNotes": "{\"id\":\"887ee088-0bc4-4910-854e-6e236ea63e32\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"Clover\",\"connections\":\"T|Diamond|DoubleSlash|Spade\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Clover\",\"connections\":\"T|Diamond|DoubleSlash|Spade\"},\"TtsZoopGuid\":\"887ee088-0bc4-4910-854e-6e236ea63e32\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 101200,
              "SidewaysCard": false,
              "CustomDeck": {
                "1012": {
                  "FaceURL": "https://i.imgur.com/29VgnT3.jpeg",
                  "BackURL": "https://i.imgur.com/EPUuuJp.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e0000e",
              "Name": "Card",
              "Transform": {
                "posX": -9.50002,
                "posY": 1.51008117,
                "posZ": 12.5000019,
                "rotX": 0.0108935656,
                "rotY": 179.976669,
                "rotZ": 180.004944,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Dépendance",
              "Description": "",
              "GMNotes": "{\"id\":\"76546ac8-34ab-4546-97fb-dd09cba7fe1b\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Manoir Rowe.\",\"locationFront\":{\"icons\":\"T\",\"connections\":\"Diamond|Clover\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"T\",\"connections\":\"Diamond|Clover\"},\"TtsZoopGuid\":\"76546ac8-34ab-4546-97fb-dd09cba7fe1b\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 101300,
              "SidewaysCard": false,
              "CustomDeck": {
                "1013": {
                  "FaceURL": "https://i.imgur.com/NvU7Wce.jpeg",
                  "BackURL": "https://i.imgur.com/87PFtIJ.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e41dcd",
              "Name": "Deck",
              "Transform": {
                "posX": 12.5009985,
                "posY": 1.53124309,
                "posZ": -6.0167985,
                "rotX": 0.0108918827,
                "rotY": 180.00032,
                "rotZ": 0.004948235,
                "scaleX": 0.714285731,
                "scaleY": 1.0,
                "scaleZ": 0.714285731
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                1124100,
                1124400,
                1124200,
                1125100
              ],
              "CustomDeck": {
                "11241": {
                  "FaceURL": "https://i.imgur.com/0NhQlni.jpeg",
                  "BackURL": "https://i.imgur.com/3Bi2ZnR.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11244": {
                  "FaceURL": "https://i.imgur.com/ThNUBcM.jpeg",
                  "BackURL": "https://i.imgur.com/af3EkFN.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11242": {
                  "FaceURL": "https://i.imgur.com/gWOpuKT.jpeg",
                  "BackURL": "https://i.imgur.com/ErNGdZY.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "11251": {
                  "FaceURL": "https://i.imgur.com/Zo1IC8h.jpeg",
                  "BackURL": "https://i.imgur.com/CnWGB6t.jpeg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "e00005",
                  "Name": "Card",
                  "Transform": {
                    "posX": 31.0000076,
                    "posY": 1.49346447,
                    "posZ": 13.0000372,
                    "rotX": -2.95377532E-07,
                    "rotY": 180.0002,
                    "rotZ": 9.922385E-07,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Heure Fatidique",
                  "Description": "",
                  "GMNotes": "{\"id\":\"3b03fc8b-a3df-4859-b8d8-82961e524a03\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":6,\"TtsZoopGuid\":\"3b03fc8b-a3df-4859-b8d8-82961e524a03\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1124100,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11241": {
                      "FaceURL": "https://i.imgur.com/0NhQlni.jpeg",
                      "BackURL": "https://i.imgur.com/3Bi2ZnR.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00004",
                  "Name": "Card",
                  "Transform": {
                    "posX": 31.0,
                    "posY": 1.5562135,
                    "posZ": 13.0,
                    "rotX": 0.006924083,
                    "rotY": 180.001434,
                    "rotZ": 0.8356511,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Lune Écarlate",
                  "Description": "",
                  "GMNotes": "{\"id\":\"2982e60a-afc1-48c6-96bd-3e1483098241\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":7,\"TtsZoopGuid\":\"2982e60a-afc1-48c6-96bd-3e1483098241\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1124400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11244": {
                      "FaceURL": "https://i.imgur.com/ThNUBcM.jpeg",
                      "BackURL": "https://i.imgur.com/af3EkFN.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00003",
                  "Name": "Card",
                  "Transform": {
                    "posX": 31.0,
                    "posY": 1.56765342,
                    "posZ": 13.0,
                    "rotX": -0.000225508862,
                    "rotY": 180.000061,
                    "rotZ": -7.81074E-05,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Les Soupçons de Baxter",
                  "Description": "",
                  "GMNotes": "{\"id\":\"b77cf7f3-42e7-40b9-8b80-6cfd2dd2acbb\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":12,\"TtsZoopGuid\":\"b77cf7f3-42e7-40b9-8b80-6cfd2dd2acbb\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1124200,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11242": {
                      "FaceURL": "https://i.imgur.com/gWOpuKT.jpeg",
                      "BackURL": "https://i.imgur.com/ErNGdZY.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00002",
                  "Name": "Card",
                  "Transform": {
                    "posX": 31.0,
                    "posY": 1.5772754,
                    "posZ": 13.0,
                    "rotX": -8.92444441E-05,
                    "rotY": 180.001175,
                    "rotZ": 0.000128415137,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Une Fête Mystérieuse",
                  "Description": "",
                  "GMNotes": "{\"id\":\"a11eb23d-a3fc-4d7c-863c-e382748b352a\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":6,\"TtsZoopGuid\":\"a11eb23d-a3fc-4d7c-863c-e382748b352a\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1125100,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11251": {
                      "FaceURL": "https://i.imgur.com/Zo1IC8h.jpeg",
                      "BackURL": "https://i.imgur.com/CnWGB6t.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "f00a53",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -34.5000153,
                "posY": 1.84000027,
                "posZ": 13.4999838,
                "rotX": -5.06458446E-06,
                "rotY": 180.003311,
                "rotZ": -7.052609E-09,
                "scaleX": 0.7,
                "scaleY": 0.7,
                "scaleZ": 0.7
              },
              "Nickname": "Chemin Écarlate",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/14175792089690860/3BD852E6582370EFBCC59EA31C032920713A5C33/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor +2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=1000, width=1000,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n       label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n       position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n       font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n      label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n      position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n          font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n        })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n            self.createButton({\r\n                label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n            })\r\n            self.createButton({\r\n                label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n            })\r\n        end\r\n    end\r\n\r\n    self.createButton({\r\n        label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n        position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\nend\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---  \r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend",
              "LuaScriptState": "{\"ml\":{\"1d2ed2\":{\"lock\":false,\"pos\":{\"x\":3.5,\"y\":1.5034,\"z\":2},\"rot\":{\"x\":0.005,\"y\":90.027,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"2841af\":{\"lock\":false,\"pos\":{\"x\":-0.0006,\"y\":1.5037,\"z\":2},\"rot\":{\"x\":0.005,\"y\":90.0336,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d549b8\":{\"lock\":false,\"pos\":{\"x\":7.5,\"y\":1.5166,\"z\":2},\"rot\":{\"x\":0.0109,\"y\":180.0003,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "d549b8",
                  "Name": "Card",
                  "Transform": {
                    "posX": 7.49999952,
                    "posY": 1.50661707,
                    "posZ": 2.00000119,
                    "rotX": 0.0108915493,
                    "rotY": 180.00029,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Chemin Écarlate",
                  "Description": "",
                  "GMNotes": "{\"id\":\"e9d6aec3-3c03-440b-8777-9472af9a33ae\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"Chemin.\",\"locationFront\":{\"icons\":\"TriangleAlt\",\"connections\":\"Spade\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"TriangleAlt\",\"connections\":\"Spade\"},\"TtsZoopGuid\":\"e9d6aec3-3c03-440b-8777-9472af9a33ae\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 1122500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "11225": {
                      "FaceURL": "https://i.imgur.com/vYsI8eX.jpeg",
                      "BackURL": "https://i.imgur.com/zYUJhnT.jpeg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "fa7d89",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -22.9999962,
                "posY": 1.77099943,
                "posZ": 24.0000038,
                "rotX": 4.89856257E-06,
                "rotY": 0.000589675561,
                "rotZ": -4.81602633E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":300,\"text\":\"Mise en place\"}",
              "XmlUI": ""
            },
            {
              "GUID": "fd4dd3",
              "Name": "Custom_Model",
              "Transform": {
                "posX": -27.4997215,
                "posY": 1.77100265,
                "posZ": 12.9592838,
                "rotX": -5.284931E-05,
                "rotY": 359.967773,
                "rotZ": 0.0003250452,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Text Tool",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.0,
                "g": 0.0,
                "b": 0.0,
                "a": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": false,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": false,
              "Tooltip": false,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomMesh": {
                "MeshURL": "https://steamusercontent-a.akamaihd.net/ugc/1478820768302617365/27883B7913E0E69143C3AA03493B7E7C4E8C29C0/",
                "DiffuseURL": "",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 1,
                "TypeIndex": 0,
                "CastShadows": true
              },
              "LuaScript": "-- Code for bag to identify text tool objects\r\nmovableTextTool_cowgoesmoo33 = true\r\n\r\n-- Number of characters before the text box width expands.\r\nEXPAND_INTERVAL = 20\r\n\r\n-- This table controls what is passed between save/load\r\ndata = {}\r\n\r\nfunction onLoad(saved_data)\r\n  if saved_data ~= '' then\r\n    data = JSON.decode(saved_data)\r\n    if data.text ~= '' then\r\n      self.interactable = data.interactable\r\n      staticMode()\r\n      return\r\n    end\r\n  else\r\n    data = {size=200, color=Color(0,0,0), text='', interactable=true,\r\n        enter_to_finish=false, autolock=false, autolift=false,\r\n        hover_height=0.05, box_transparency=1}\r\n  end\r\n\r\n  inputMode()\r\nend\r\n\r\n-- True if in the middle of delay after pressing Enter (with enter_to_finish on)\r\nfinishing = false\r\nfunction input_func(obj, color, input, stillEditing)\r\n  local params = getBox(input)\r\n  if params then\r\n    params.value = input\r\n    self.editInput(params)\r\n  end\r\n\r\n  if not stillEditing then\r\n    data.text = input\r\n    updateState()\r\n    if input ~= '' then staticMode(color) end\r\n  elseif data.enter_to_finish then\r\n    -- If enter is pressed: remove last newline and force finish\r\n    if not finishing and input:sub(-1) == '\\n' then\r\n      finishing = true\r\n      -- Delay to avoid user's Enter keypress being detected (opens chat box)\r\n      Wait.frames(function()\r\n        input = input:sub(1, -2)\r\n        data.text = input\r\n        updateState()\r\n        if input ~= '' then staticMode(color) else inputMode() end\r\n        finishing = false\r\n      end, 10)\r\n    end\r\n  end\r\nend\r\n\r\n-- When the inpupt box appears and lets the player type in it.\r\nfunction inputMode()\r\n  self.clearContextMenu()\r\n  self.clearInputs()\r\n  self.clearButtons()\r\n\r\n  local size = getBox(data.text, true)\r\n\r\n  self.createInput({\r\n    input_function = \"input_func\",\r\n    function_owner = self,\r\n    label          = \"Type Here\",\r\n    alignment      = 3,\r\n    position       = {x=0, y=data.hover_height, z=0},\r\n    rotation       = {0, 180, 0},\r\n    width          = size.width,\r\n    height         = size.height,\r\n    color          = getBackground(data.color),\r\n    font_color     = data.color,\r\n    font_size      = data.size,\r\n    value          = data.text,\r\n  })\r\n\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\nend\r\n\r\n-- When the input box disappears and displays the text.\r\nfunction staticMode(player)\r\n  self.clearContextMenu()\r\n  if data.autolock then\r\n    self.locked = true\r\n  end\r\n  if self.getInputs() and #self.getInputs() ~= 0 then\r\n    self.removeInput(0)\r\n  end\r\n\r\n  -- Clear from selecting player\r\n  if player then\r\n    self.removeFromPlayerSelection(player)\r\n  end\r\n\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  self.createButton({\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=self,\r\n    position={0,data.hover_height,0}, rotation={0,180,0}, height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  })\r\n\r\n  self.addContextMenuItem('Edit Text', function(color)\r\n    self.removeFromPlayerSelection(color)\r\n    inputMode()\r\n  end)\r\n  self.addContextMenuItem('Clear', function(color)\r\n    applyMultiple(color, 'clear', _, true)\r\n  end)\r\n  self.addContextMenuItem('Color: Object Tint', function(color)\r\n    applyMultiple(color, 'setColor')\r\n  end)\r\n  self.addContextMenuItem('Color: Player', function(color)\r\n    applyMultiple(color, 'setColor', {Color.fromString(color)})\r\n  end)\r\n  self.addContextMenuItem('Color: Black', function(color)\r\n    applyMultiple(color, 'setColor', {Color(0,0,0)})\r\n  end)\r\n  self.addContextMenuItem('Color: White', function(color)\r\n    applyMultiple(color, 'setColor', {Color(1,1,1)})\r\n  end)\r\n  self.addContextMenuItem('Size: Increase', function(color)\r\n    applyMultiple(color, 'changeSize', {50})\r\n  end, true)\r\n  self.addContextMenuItem('Size: Decrease', function(color)\r\n    applyMultiple(color, 'changeSize', {-50})\r\n  end, true)\r\n  self.addContextMenuItem('Permanently Attach', attemptAttach)\r\n  self.addContextMenuItem('Permalock', function(color)\r\n    applyMultiple(color, 'permalock', _, true)\r\n  end)\r\nend\r\n\r\nfunction changeSize(params)\r\n  local delta = params[1]\r\n  local newSize = data.size + delta\r\n  if newSize > 800  or newSize < 50 then\r\n    return\r\n  end\r\n  data.size = newSize\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_size=data.size})\r\n  else\r\n    local size = getBox(data.text, true)\r\n    self.editInput({width=size.width, height=size.height, font_size=data.size})\r\n  end\r\nend\r\n\r\nfunction setColor(params)\r\n  if params and params[1] then\r\n    data.color = params[1]\r\n  else\r\n    data.color = self.getColorTint():setAt('a', 1) -- Take on color of object tint\r\n  end\r\n  updateState()\r\n  if self.getButtons() and #self.getButtons() ~= 0 then\r\n    self.editButton({font_color=data.color})\r\n  else\r\n    self.editInput({font_color=data.color, color=getBackground(data.color)})\r\n  end\r\nend\r\n\r\nfunction getBackground(color) --determines whether to use black or white depending on luminance\r\n  local r,g,b = Color(color):get()\r\n\r\n  local lum = 0.2126*r + 0.7152*g + 0.0722*b\r\n  if lum > 0.75 then\r\n    return {0.2,0.2,0.2, data.box_transparency}\r\n  else\r\n    return {1,1,1, data.box_transparency}\r\n  end\r\nend\r\n\r\nfunction clear()\r\n  data.text = ''\r\n  updateState()\r\n  inputMode()\r\nend\r\n\r\nfunction permalock()\r\n  self.interactable = false\r\n  data.interactable = false\r\n  updateState()\r\nend\r\n\r\nlocal target_script = [[\r\nfunction onLoad(script_state)\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    for _,entry in ipairs(state) do\r\n      self.createButton(entry)\r\n    end\r\n    self.addContextMenuItem('Clear All Text', function(color)\r\n      self.clearContextMenu()\r\n      self.clearButtons()\r\n      self.script_state = ''\r\n      self.script_code = ''\r\n    end)\r\n  end\r\nend\r\n]]\r\n\r\nfunction attemptAttach(player_color)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  local attachee\r\n  local attachers = {}\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if obj ~= self then\r\n        table.insert(attachers, obj)\r\n      end\r\n    else\r\n      if attachee then\r\n        broadcastToColor(\"More than one target selected.\", player_color)\r\n        return\r\n      else\r\n        attachee = obj\r\n      end\r\n    end\r\n  end\r\n  if attachee then\r\n    local code = attachee.script_code\r\n    if code and code ~= '' and code ~= target_script then\r\n      broadcastToColor(\"Warning: script on card has been overriden. Rewind time to undo.\", player_color)\r\n    end\r\n    for i,attacher in ipairs(attachers) do\r\n      attacher.call('attach', {target = attachee})\r\n    end\r\n    attach({target = attachee})\r\n    local type, flip = attachee.type, attachee.getRotation().z\r\n    if (type == 'Card' or type == 'Deck') and flip > 175 and flip < 185 then\r\n      broadcastToColor(\"Warning: text will not display if card or deck is facing down.\", player_color)\r\n    end\r\n  else\r\n    broadcastToColor(\"You must have a target object in your selection (using click-and-drag or Ctrl+Click) to use this option.\", player_color)\r\n  end\r\nend\r\n\r\nfunction attach(params)\r\n  local target = params.target\r\n  local displayText = data.text\r\n  if data.enter_to_finish then\r\n    displayText = displayText:gsub('%[n%]', '\\n')\r\n  end\r\n\r\n  local textRotation = self.getRotation():sub(target.getRotation())\r\n    :add(Vector(180, 0, 180))\r\n\r\n  local textPosition = target.positionToLocal(\r\n    self.getPosition():add(Vector(0, data.hover_height, 0))\r\n  )\r\n  textPosition.x = -textPosition.x\r\n\r\n  local textScale = {}\r\n  textScale.x = self.getScale().x / target.getScale().x\r\n  textScale.y = self.getScale().x / target.getScale().y\r\n  textScale.z = self.getScale().x / target.getScale().z\r\n\r\n  local details = {\r\n    label=displayText,\r\n    click_function=\"none\",\r\n    function_owner=nil,\r\n    position=textPosition,\r\n    rotation=textRotation,\r\n    scale=textScale,\r\n    height=0, width=0,\r\n    font_color=data.color, font_size=data.size\r\n  }\r\n\r\n  target.createButton(details)\r\n\r\n  local script_state = target.script_state\r\n  if script_state and script_state ~= '' then\r\n    local state = JSON.decode(script_state)\r\n    table.insert(state, details)\r\n    target.script_state = JSON.encode(state)\r\n  else\r\n    target.script_state = JSON.encode({[1]=details})\r\n  end\r\n\r\n  target.script_code = target_script\r\n\r\n  self.destruct()\r\nend\r\n\r\nfunction applyMultiple(player_color, func_string, params, static_only)\r\n  local objs = Player[player_color].getSelectedObjects()\r\n  for _,obj in ipairs(objs) do\r\n    if obj.getVar('movableTextTool_cowgoesmoo33') then\r\n      if not static_only or obj.call('isStatic') then\r\n        obj.call(func_string, params)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction isStatic()\r\n  local input = self.getInputs()\r\n  return not input or #input == 0\r\nend\r\n\r\nfunction getBox(input, force)\r\n  local maxLength, lineCount = EXPAND_INTERVAL, 1\r\n  local lineLength = 0\r\n  for i = 1, #input do\r\n    local c = input:sub(i,i)\r\n    if c == '\\n' then\r\n      lineCount = lineCount + 1\r\n      if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n      lineLength = 0\r\n    else\r\n      lineLength = lineLength + 1\r\n    end\r\n  end\r\n  if lineLength > maxLength then maxLength = (math.floor(lineLength / EXPAND_INTERVAL) + 1) * EXPAND_INTERVAL end\r\n\r\n  newWidth = data.size * maxLength * 0.9\r\n  newHeight = data.size * lineCount + 23\r\n\r\n  if force or boxWidth ~= newWidth or boxHeight ~= newHeight then\r\n    boxWidth, boxHeight = newWidth, newHeight\r\n    return {width = boxWidth, height = boxHeight}\r\n  end\r\n  return nil\r\nend\r\n\r\ntemp_lift = nil\r\nfunction onPickUp(player_color)\r\n  if data.autolift then\r\n    local player = Player[player_color]\r\n    temp_lift = player.lift_height\r\n    player.lift_height = 0\r\n  end\r\nend\r\n\r\nfunction onDrop(player_color)\r\n  if data.autolift and temp_lift then\r\n    Player[player_color].lift_height = temp_lift\r\n  end\r\nend\r\n\r\n-- Should be called every time data is modified, allows info to be saved on copy/paste\r\nfunction updateState()\r\n  self.script_state = JSON.encode(data)\r\nend\r\n\r\nfunction onSave()\r\n  self.script_state = JSON.encode(data)\r\n  return self.script_state\r\nend",
              "LuaScriptState": "{\"autolift\":false,\"autolock\":false,\"box_transparency\":1,\"color\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1},\"enter_to_finish\":false,\"hover_height\":0.05,\"interactable\":true,\"size\":200,\"text\":\"Sororité Omega\"}",
              "XmlUI": ""
            }
          ],
          "AttachedDecals": [
            {
              "Transform": {
                "posX": -0.0021877822,
                "posY": -0.08963572,
                "posZ": -0.00288731651,
                "rotX": 270.0,
                "rotY": 359.869568,
                "rotZ": 0.0,
                "scaleX": 2.00000215,
                "scaleY": 2.00000238,
                "scaleZ": 2.00000262
              },
              "CustomDecal": {
                "Name": "dunwich_back",
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
                "Size": 7.4
              }
            }
          ]
        },
        {
          "GUID": "c38458",
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": 8.000001,
            "posY": 0.9799972,
            "posZ": 47.0,
            "rotX": -4.926009E-06,
            "rotY": 179.997055,
            "rotZ": 2.81642343E-07,
            "scaleX": 1.20052135,
            "scaleY": 0.249882281,
            "scaleZ": 1.3145982
          },
          "Nickname": "L'Étrange Cas du Dr Jekyll et Mr Hyde",
          "Description": "Scenario ",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj",
            "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/11925850707830415/7ED48DF559525AF388EDAABCDEED4EE9D25E872A/",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CustomShader": {
              "SpecularColor": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "SpecularIntensity": 0.0,
              "SpecularSharpness": 2.0,
              "FresnelStrength": 0.0
            },
            "CastShadows": true
          },
          "Bag": {
            "Order": 0
          },
          "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
          "LuaScriptState": "{\"ml\":{\"01baa0\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.5047,\"z\":6},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"0bfd15\":{\"lock\":false,\"pos\":{\"x\":-24.0012,\"y\":1.84,\"z\":11.9999},\"rot\":{\"x\":0,\"y\":179.9717,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"115bb9\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.675,\"z\":-2.9971},\"rot\":{\"x\":-0.0006,\"y\":180,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"1aee54\":{\"lock\":false,\"pos\":{\"x\":-33.0013,\"y\":1.84,\"z\":12.0019},\"rot\":{\"x\":0,\"y\":179.9715,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"4df57e\":{\"lock\":false,\"pos\":{\"x\":6.5,\"y\":1.5056,\"z\":15},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"5990ee\":{\"lock\":false,\"pos\":{\"x\":-21,\"y\":1.84,\"z\":12},\"rot\":{\"x\":0,\"y\":179.9714,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"5a174e\":{\"lock\":false,\"pos\":{\"x\":-30.0017,\"y\":1.84,\"z\":12.0009},\"rot\":{\"x\":0,\"y\":179.9716,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"5b38c6\":{\"lock\":false,\"pos\":{\"x\":11.5,\"y\":1.5034,\"z\":6},\"rot\":{\"x\":0.0049,\"y\":90,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":11.5,\"y\":1.506,\"z\":19.5},\"rot\":{\"x\":0.005,\"y\":90.0119,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"8f5543\":{\"lock\":false,\"pos\":{\"x\":17.5881,\"y\":1.536,\"z\":-6.1821},\"rot\":{\"x\":0.0109,\"y\":180.0016,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"b72770\":{\"lock\":false,\"pos\":{\"x\":16.5,\"y\":1.5047,\"z\":15},\"rot\":{\"x\":359.9891,\"y\":0.0001,\"z\":-0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"b96f10\":{\"lock\":false,\"pos\":{\"x\":1.5,\"y\":1.5034,\"z\":1.5},\"rot\":{\"x\":0.0049,\"y\":89.9845,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"cccf8b\":{\"lock\":false,\"pos\":{\"x\":3,\"y\":1.502,\"z\":-5.4999},\"rot\":{\"x\":0.0109,\"y\":180.0129,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.701960802078247,\"g\":0.800000011920929,\"r\":0.874509811401367}},\"cf26dc\":{\"lock\":false,\"pos\":{\"x\":1.5,\"y\":1.5051,\"z\":10.5},\"rot\":{\"x\":0.005,\"y\":90.012,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"d03f97\":{\"lock\":false,\"pos\":{\"x\":11.5,\"y\":1.5051,\"z\":15},\"rot\":{\"x\":0.0112,\"y\":135,\"z\":-0.0042},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"e00001\":{\"lock\":false,\"pos\":{\"x\":6.5,\"y\":1.5183,\"z\":10.5},\"rot\":{\"x\":0.0109,\"y\":179.999,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0000c\":{\"lock\":false,\"pos\":{\"x\":16.5,\"y\":1.5192,\"z\":19.5},\"rot\":{\"x\":0.0109,\"y\":179.989,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0000d\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.5175,\"z\":1.5},\"rot\":{\"x\":0.0109,\"y\":179.9736,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00010\":{\"lock\":false,\"pos\":{\"x\":8.9984,\"y\":1.5183,\"z\":11.5212},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00033\":{\"lock\":false,\"pos\":{\"x\":-20.0001,\"y\":1.7836,\"z\":2.9998},\"rot\":{\"x\":0,\"y\":180.0027,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00034\":{\"lock\":false,\"pos\":{\"x\":23.5013,\"y\":1.5138,\"z\":-5.523},\"rot\":{\"x\":0.0109,\"y\":180.0017,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00035\":{\"lock\":false,\"pos\":{\"x\":-30.0005,\"y\":1.7836,\"z\":2.9995},\"rot\":{\"x\":0,\"y\":180.0023,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00036\":{\"lock\":false,\"pos\":{\"x\":-27.0004,\"y\":1.7836,\"z\":2.9996},\"rot\":{\"x\":0,\"y\":180.0016,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00037\":{\"lock\":false,\"pos\":{\"x\":-24.0003,\"y\":1.7836,\"z\":2.9997},\"rot\":{\"x\":0,\"y\":180.0014,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00039\":{\"lock\":false,\"pos\":{\"x\":12.5322,\"y\":1.5146,\"z\":-6.1239},\"rot\":{\"x\":0.0109,\"y\":180.0004,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f68191\":{\"lock\":false,\"pos\":{\"x\":-27.001,\"y\":1.84,\"z\":12.0009},\"rot\":{\"x\":0,\"y\":179.9717,\"z\":0},\"tint\":{\"a\":1,\"b\":0,\"g\":0,\"r\":0.614982545375824}},\"ff692a\":{\"lock\":false,\"pos\":{\"x\":1.5,\"y\":1.5043,\"z\":6},\"rot\":{\"x\":0.0112,\"y\":135,\"z\":-0.0042},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}}}}",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "0bfd15",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -24.0012,
                "posY": 1.84000051,
                "posZ": 11.9998989,
                "rotX": -3.89024171E-06,
                "rotY": 179.97171,
                "rotZ": -4.9995316E-07,
                "scaleX": 0.7,
                "scaleY": 0.7,
                "scaleZ": 0.7
              },
              "Nickname": "Usine Chimique",
              "Description": "Place au hasard le lieu",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.614982545,
                "g": 0.0,
                "b": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/2056496969220294708/CB8F5014E5C291C1E482E3B199E59C0F56C27D9F/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
              "LuaScriptState": "{\"ml\":{\"e00008\":{\"lock\":false,\"pos\":{\"x\":-3.5,\"y\":1.5192,\"z\":10.5},\"rot\":{\"x\":0.0109,\"y\":180.0011,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00009\":{\"lock\":false,\"pos\":{\"x\":-24.0023,\"y\":1.7836,\"z\":7.5044},\"rot\":{\"x\":0,\"y\":179.9973,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "e00008",
                  "Name": "Card",
                  "Transform": {
                    "posX": -3.50000453,
                    "posY": 1.50918281,
                    "posZ": 10.500001,
                    "rotX": 0.0108913863,
                    "rotY": 180.001114,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Usine Chimique",
                  "Description": "Quartier Nord.",
                  "GMNotes": "{\"id\":\"337c280e-bc74-4b25-9455-5be102c79c9b\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Quartier Nord.\",\"locationFront\":{\"icons\":\"HeartAlt\",\"connections\":\"SquareAlt|HourglassAlt|DiamondAlt\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"HeartAlt\",\"connections\":\"SquareAlt|HourglassAlt|DiamondAlt\"},\"TtsZoopGuid\":\"337c280e-bc74-4b25-9455-5be102c79c9b\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 100700,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1007": {
                      "FaceURL": "https://i.ibb.co/5Wsb3wR7/a6fffcaf1565.jpg",
                      "BackURL": "https://i.ibb.co/0jd7GdVM/91d8acb84021.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00009",
                  "Name": "Card",
                  "Transform": {
                    "posX": -24.0023079,
                    "posY": 1.78360569,
                    "posZ": 7.504393,
                    "rotX": -4.821923E-06,
                    "rotY": 179.997345,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Usine Chimique",
                  "Description": "Quartier Nord.",
                  "GMNotes": "{\"id\":\"5317f197-4a6a-4642-9c44-749fb333c66e\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Quartier Nord.\",\"locationFront\":{\"icons\":\"HeartAlt\",\"connections\":\"SquareAlt|HourglassAlt|DiamondAlt\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"HeartAlt\",\"connections\":\"SquareAlt|HourglassAlt|DiamondAlt\"},\"TtsZoopGuid\":\"5317f197-4a6a-4642-9c44-749fb333c66e\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 100800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1008": {
                      "FaceURL": "https://i.ibb.co/cKBGX8Nv/bf10d874aaa1.jpg",
                      "BackURL": "https://i.ibb.co/7trQm7xW/cf53b72f24f1.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "115bb9",
              "Name": "Deck",
              "Transform": {
                "posX": 30.5,
                "posY": 1.67504823,
                "posZ": -2.9971,
                "rotX": -0.0005911059,
                "rotY": 180.0,
                "rotZ": 180.001068,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                104500,
                104400,
                104300,
                104200,
                104100,
                104000,
                103900,
                103800,
                103700,
                103600,
                103500,
                103400,
                103300,
                103200,
                103100,
                103000,
                102900,
                102800,
                102700,
                102600,
                102500,
                102400,
                102300,
                102200,
                102100,
                102000,
                101900,
                101800,
                101700,
                101600,
                101500,
                101400
              ],
              "CustomDeck": {
                "1045": {
                  "FaceURL": "https://i.ibb.co/TBYSmhF2/3ce07cbacba0.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1044": {
                  "FaceURL": "https://i.ibb.co/Z6bSRFvx/4bcede36b109.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1043": {
                  "FaceURL": "https://i.ibb.co/MxQjHCPk/6aa48194d8b3.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1042": {
                  "FaceURL": "https://i.ibb.co/TMFvqXN0/e6f763cd05bb.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1041": {
                  "FaceURL": "https://i.ibb.co/Y4fmbmSg/cef653c3a697.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1040": {
                  "FaceURL": "https://i.ibb.co/tMh9XB2y/3b81117325f1.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1039": {
                  "FaceURL": "https://i.ibb.co/whJQDS6T/94a9036b54df.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1038": {
                  "FaceURL": "https://i.ibb.co/FkP3K8Kn/af087163ecbe.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1037": {
                  "FaceURL": "https://i.ibb.co/gZCMSz8k/00edc9a27fdf.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1036": {
                  "FaceURL": "https://i.ibb.co/G4JXRc6t/3ee33c8e4022.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1035": {
                  "FaceURL": "https://i.ibb.co/Ngzgx1Wj/749f057be0c9.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1034": {
                  "FaceURL": "https://i.ibb.co/RkyS6mrv/9f0e356b5f06.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1033": {
                  "FaceURL": "https://i.ibb.co/zhmyrHKS/42255a85a072.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1032": {
                  "FaceURL": "https://i.ibb.co/nNL6XhyZ/5ae73bfdd6a5.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1031": {
                  "FaceURL": "https://i.ibb.co/bjjYxmc1/c2f1a5994662.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1030": {
                  "FaceURL": "https://i.ibb.co/WRkyWM8/3da8c679b990.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1029": {
                  "FaceURL": "https://i.ibb.co/ZrY4zq6/6754a75a4e55.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1028": {
                  "FaceURL": "https://i.ibb.co/vCb8jNc2/2353f2debbe5.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1027": {
                  "FaceURL": "https://i.ibb.co/Nnj6cpB7/d6f7e1203c15.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1026": {
                  "FaceURL": "https://i.ibb.co/607w8GLx/582f1f730d05.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1025": {
                  "FaceURL": "https://i.ibb.co/TxHssZZT/959e42debe29.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1024": {
                  "FaceURL": "https://i.ibb.co/HpYN63yc/7a2bb2d5e0d5.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1023": {
                  "FaceURL": "https://i.ibb.co/0R1wcXGn/4ea9bccdbeb9.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1022": {
                  "FaceURL": "https://i.ibb.co/v6PjQL8r/987cfa9f091d.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1021": {
                  "FaceURL": "https://i.ibb.co/SXWSs2Pz/e45852f50007.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1020": {
                  "FaceURL": "https://i.ibb.co/ksVXZG3M/e687231ef352.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1019": {
                  "FaceURL": "https://i.ibb.co/bMF4sysT/e8468c9dc4cd.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1018": {
                  "FaceURL": "https://i.ibb.co/ksrVX404/2421ecd04f11.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1017": {
                  "FaceURL": "https://i.ibb.co/Gvdy8Ks4/382cdf458371.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1016": {
                  "FaceURL": "https://i.ibb.co/VcwvXqwF/3ba313364d5c.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1015": {
                  "FaceURL": "https://i.ibb.co/Sw0QJ9Yh/888a20438ba7.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1014": {
                  "FaceURL": "https://i.ibb.co/rGQkZzq6/6a26a6f707d9.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "e00030",
                  "Name": "Card",
                  "Transform": {
                    "posX": -34.9999161,
                    "posY": 1.78360391,
                    "posZ": 27.5000381,
                    "rotX": -5.15466263E-06,
                    "rotY": 179.99968,
                    "rotZ": 6.91276455E-07,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Déferlante de Chairs",
                  "Description": "Risque.",
                  "GMNotes": "{\"id\":\"20f4ea07-a0bc-46d2-9704-e13312dd5e57\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque.\",\"TtsZoopGuid\":\"20f4ea07-a0bc-46d2-9704-e13312dd5e57\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1045": {
                      "FaceURL": "https://i.ibb.co/TBYSmhF2/3ce07cbacba0.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0002f",
                  "Name": "Card",
                  "Transform": {
                    "posX": -35.0,
                    "posY": 1.84299326,
                    "posZ": 27.5,
                    "rotX": 2.00466329E-05,
                    "rotY": 180.003937,
                    "rotZ": 0.712074,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Déferlante de Chairs",
                  "Description": "Risque.",
                  "GMNotes": "{\"id\":\"cd30eee2-2add-4d58-80e6-3c74046c1f67\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque.\",\"TtsZoopGuid\":\"cd30eee2-2add-4d58-80e6-3c74046c1f67\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1044": {
                      "FaceURL": "https://i.ibb.co/Z6bSRFvx/4bcede36b109.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0002e",
                  "Name": "Card",
                  "Transform": {
                    "posX": -35.0,
                    "posY": 1.86330545,
                    "posZ": 27.5,
                    "rotX": 0.000130452,
                    "rotY": 180.0017,
                    "rotZ": -3.78381665E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Déferlante de Chairs",
                  "Description": "Risque.",
                  "GMNotes": "{\"id\":\"7485721f-ccf5-47b3-9e15-8d345b5750c1\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque.\",\"TtsZoopGuid\":\"7485721f-ccf5-47b3-9e15-8d345b5750c1\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1043": {
                      "FaceURL": "https://i.ibb.co/MxQjHCPk/6aa48194d8b3.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0002d",
                  "Name": "Card",
                  "Transform": {
                    "posX": -35.5,
                    "posY": 1.87293434,
                    "posZ": 27.5,
                    "rotX": 0.00010432821,
                    "rotY": 180.003159,
                    "rotZ": -0.0002833853,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "L'Offre et la Demande",
                  "Description": "Manigance.",
                  "GMNotes": "{\"id\":\"5da80add-b6b1-41f1-bab5-b214365b6255\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Manigance.\",\"TtsZoopGuid\":\"5da80add-b6b1-41f1-bab5-b214365b6255\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104200,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1042": {
                      "FaceURL": "https://i.ibb.co/TMFvqXN0/e6f763cd05bb.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0002c",
                  "Name": "Card",
                  "Transform": {
                    "posX": -35.0,
                    "posY": 1.88256145,
                    "posZ": 27.5,
                    "rotX": -0.000103662707,
                    "rotY": 180.001083,
                    "rotZ": -2.44461753E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "L'Offre et la Demande",
                  "Description": "Manigance.",
                  "GMNotes": "{\"id\":\"1aa8fdc9-31c2-4c58-925f-db977a5b3861\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Manigance.\",\"TtsZoopGuid\":\"1aa8fdc9-31c2-4c58-925f-db977a5b3861\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104100,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1041": {
                      "FaceURL": "https://i.ibb.co/Y4fmbmSg/cef653c3a697.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0002b",
                  "Name": "Card",
                  "Transform": {
                    "posX": -35.0,
                    "posY": 1.89218938,
                    "posZ": 27.5,
                    "rotX": -9.757506E-05,
                    "rotY": 180.001617,
                    "rotZ": -4.804099E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Serviteur de Yog-Sothoth",
                  "Description": "Humanoïde. Sorcier.",
                  "GMNotes": "{\"id\":\"65bf511c-c9a4-4025-a187-8997383ca13f\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de. Sorcier.\",\"TtsZoopGuid\":\"65bf511c-c9a4-4025-a187-8997383ca13f\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104000,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1040": {
                      "FaceURL": "https://i.ibb.co/tMh9XB2y/3b81117325f1.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0002a",
                  "Name": "Card",
                  "Transform": {
                    "posX": -35.0,
                    "posY": 1.90181768,
                    "posZ": 27.5,
                    "rotX": -0.00010377328,
                    "rotY": 180.0009,
                    "rotZ": -1.71251249E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Serviteur de Yog-Sothoth",
                  "Description": "Humanoïde. Sorcier.",
                  "GMNotes": "{\"id\":\"4d1b44a3-f0b5-4f7e-9a76-a7b951a3aa9e\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de. Sorcier.\",\"TtsZoopGuid\":\"4d1b44a3-f0b5-4f7e-9a76-a7b951a3aa9e\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103900,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1039": {
                      "FaceURL": "https://i.ibb.co/whJQDS6T/94a9036b54df.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00029",
                  "Name": "Card",
                  "Transform": {
                    "posX": -35.0,
                    "posY": 1.911445,
                    "posZ": 27.5,
                    "rotX": -0.000119098833,
                    "rotY": 180.004181,
                    "rotZ": -0.000146304956,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Serviteur de Yog-Sothoth",
                  "Description": "Humanoïde. Sorcier.",
                  "GMNotes": "{\"id\":\"2329e98a-44ed-45a0-b901-d6cddb9c51c1\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de. Sorcier.\",\"TtsZoopGuid\":\"2329e98a-44ed-45a0-b901-d6cddb9c51c1\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1038": {
                      "FaceURL": "https://i.ibb.co/FkP3K8Kn/af087163ecbe.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00028",
                  "Name": "Card",
                  "Transform": {
                    "posX": -35.0,
                    "posY": 1.91566825,
                    "posZ": 28.0,
                    "rotX": 0.000378551078,
                    "rotY": 179.999725,
                    "rotZ": 359.843536,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sculpteur Profane",
                  "Description": "Humanoïde. Sorcier.",
                  "GMNotes": "{\"id\":\"1b4e7f20-3e0c-46fd-a063-c90fd86a8b05\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de. Sorcier.\",\"TtsZoopGuid\":\"1b4e7f20-3e0c-46fd-a063-c90fd86a8b05\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103700,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1037": {
                      "FaceURL": "https://i.ibb.co/gZCMSz8k/00edc9a27fdf.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00027",
                  "Name": "Card",
                  "Transform": {
                    "posX": -35.0,
                    "posY": 1.93070471,
                    "posZ": 27.5,
                    "rotX": 2.8688064E-05,
                    "rotY": 180.003616,
                    "rotZ": -0.0001442363,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sculpteur Profane",
                  "Description": "Humanoïde. Sorcier.",
                  "GMNotes": "{\"id\":\"8f61e1f3-8c0d-41da-9e3b-c1ba94043617\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Humano�de. Sorcier.\",\"TtsZoopGuid\":\"8f61e1f3-8c0d-41da-9e3b-c1ba94043617\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103600,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1036": {
                      "FaceURL": "https://i.ibb.co/G4JXRc6t/3ee33c8e4022.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00026",
                  "Name": "Card",
                  "Transform": {
                    "posX": -35.0,
                    "posY": 1.94033039,
                    "posZ": 27.5,
                    "rotX": -8.523341E-05,
                    "rotY": 180.00119,
                    "rotZ": -4.751271E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Bête Difforme",
                  "Description": "Créature. Monstre. Abomination.",
                  "GMNotes": "{\"id\":\"96e7b368-d7b5-4e95-afdf-232017802498\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Cr�ature. Monstre. Abomination.\",\"TtsZoopGuid\":\"96e7b368-d7b5-4e95-afdf-232017802498\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1035": {
                      "FaceURL": "https://i.ibb.co/Ngzgx1Wj/749f057be0c9.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00025",
                  "Name": "Card",
                  "Transform": {
                    "posX": -35.01302,
                    "posY": 1.9458729,
                    "posZ": 27.5150146,
                    "rotX": 0.0006219832,
                    "rotY": 180.004242,
                    "rotZ": -0.00027213135,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Bête Difforme",
                  "Description": "Créature. Monstre. Abomination.",
                  "GMNotes": "{\"id\":\"8067d8a5-87c0-475b-8351-dd176497531d\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Cr�ature. Monstre. Abomination.\",\"TtsZoopGuid\":\"8067d8a5-87c0-475b-8351-dd176497531d\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1034": {
                      "FaceURL": "https://i.ibb.co/RkyS6mrv/9f0e356b5f06.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00024",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 1.95958984,
                    "posZ": 26.0,
                    "rotX": 3.48965332E-05,
                    "rotY": 180.0016,
                    "rotZ": -0.0001666388,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Marque du Portail",
                  "Description": "Malédiction.",
                  "GMNotes": "{\"id\":\"80640513-b2b0-402e-a878-6c63f10a7a9e\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Mal�diction.\",\"TtsZoopGuid\":\"80640513-b2b0-402e-a878-6c63f10a7a9e\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1033": {
                      "FaceURL": "https://i.ibb.co/zhmyrHKS/42255a85a072.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00023",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 1.96921539,
                    "posZ": 26.0,
                    "rotX": 0.000104090177,
                    "rotY": 180.001236,
                    "rotZ": -2.455244E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Marque du Portail",
                  "Description": "Malédiction.",
                  "GMNotes": "{\"id\":\"7ba499b9-4797-467e-a5c0-4ae10a5c87ef\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Mal�diction.\",\"TtsZoopGuid\":\"7ba499b9-4797-467e-a5c0-4ae10a5c87ef\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103200,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1032": {
                      "FaceURL": "https://i.ibb.co/nNL6XhyZ/5ae73bfdd6a5.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00022",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 1.97884476,
                    "posZ": 26.0,
                    "rotX": 3.2141972E-05,
                    "rotY": 180.003143,
                    "rotZ": -9.43173363E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Marque du Portail",
                  "Description": "Malédiction.",
                  "GMNotes": "{\"id\":\"943d5482-e694-4a5c-869b-8ab9970266e1\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Mal�diction.\",\"TtsZoopGuid\":\"943d5482-e694-4a5c-869b-8ab9970266e1\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103100,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1031": {
                      "FaceURL": "https://i.ibb.co/bjjYxmc1/c2f1a5994662.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00021",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 1.98847175,
                    "posZ": 26.0,
                    "rotX": 9.946145E-05,
                    "rotY": 180.0013,
                    "rotZ": -1.6584243E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Création de Chair",
                  "Description": "Monstre. Abomination.",
                  "GMNotes": "{\"id\":\"d018f887-1640-4b6b-bcbd-e2013e694895\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Abomination.\",\"TtsZoopGuid\":\"d018f887-1640-4b6b-bcbd-e2013e694895\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103000,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1030": {
                      "FaceURL": "https://i.ibb.co/WRkyWM8/3da8c679b990.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00020",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 1.99809921,
                    "posZ": 26.0,
                    "rotX": 9.0688045E-05,
                    "rotY": 180.001877,
                    "rotZ": -4.313375E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Création de Chair",
                  "Description": "Monstre. Abomination.",
                  "GMNotes": "{\"id\":\"e0b22dac-a6b6-47df-b988-e18de8271701\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Abomination.\",\"TtsZoopGuid\":\"e0b22dac-a6b6-47df-b988-e18de8271701\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102900,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1029": {
                      "FaceURL": "https://i.ibb.co/ZrY4zq6/6754a75a4e55.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0001f",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 2.007728,
                    "posZ": 26.0,
                    "rotX": -7.702937E-05,
                    "rotY": 180.000381,
                    "rotZ": -8.035671E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Création de Chair",
                  "Description": "Monstre. Abomination.",
                  "GMNotes": "{\"id\":\"e7bfb108-f0cc-4c8e-8537-fbcf6159b566\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<size 8>Monstre. Abomination.\",\"TtsZoopGuid\":\"e7bfb108-f0cc-4c8e-8537-fbcf6159b566\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1028": {
                      "FaceURL": "https://i.ibb.co/vCb8jNc2/2353f2debbe5.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0001e",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 2.017356,
                    "posZ": 26.0,
                    "rotX": -6.61007361E-05,
                    "rotY": 180.001572,
                    "rotZ": -1.571123E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Mal Purulent",
                  "Description": "Manigance.",
                  "GMNotes": "{\"id\":\"d64e8e69-fc70-4863-9a7c-b5a9c63784d3\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Manigance.\",\"TtsZoopGuid\":\"d64e8e69-fc70-4863-9a7c-b5a9c63784d3\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102700,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1027": {
                      "FaceURL": "https://i.ibb.co/Nnj6cpB7/d6f7e1203c15.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0001d",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.5,
                    "posY": 2.02697635,
                    "posZ": 26.0,
                    "rotX": 0.000256510655,
                    "rotY": 180.001511,
                    "rotZ": -0.0005277339,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Mal Purulent",
                  "Description": "Manigance.",
                  "GMNotes": "{\"id\":\"9f6f72ba-337c-4d9c-8bf0-11fcd4ae6376\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Manigance.\",\"TtsZoopGuid\":\"9f6f72ba-337c-4d9c-8bf0-11fcd4ae6376\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102600,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1026": {
                      "FaceURL": "https://i.ibb.co/607w8GLx/582f1f730d05.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0001c",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 2.036612,
                    "posZ": 26.0,
                    "rotX": -6.734514E-05,
                    "rotY": 180.001038,
                    "rotZ": -1.38814512E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Interférence Captivante",
                  "Description": "Malédiction.",
                  "GMNotes": "{\"id\":\"60ba22cd-4ee3-4e79-900a-bc0024f95e55\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Mal�diction.\",\"TtsZoopGuid\":\"60ba22cd-4ee3-4e79-900a-bc0024f95e55\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1025": {
                      "FaceURL": "https://i.ibb.co/TxHssZZT/959e42debe29.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0001b",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 2.04624,
                    "posZ": 26.0,
                    "rotX": -5.87990871E-05,
                    "rotY": 180.002121,
                    "rotZ": -4.2367E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Interférence Captivante",
                  "Description": "Malédiction.",
                  "GMNotes": "{\"id\":\"fb8cd304-6449-4766-9c1f-9d44b241519f\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Mal�diction.\",\"TtsZoopGuid\":\"fb8cd304-6449-4766-9c1f-9d44b241519f\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1024": {
                      "FaceURL": "https://i.ibb.co/HpYN63yc/7a2bb2d5e0d5.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0001a",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 2.05586839,
                    "posZ": 26.0,
                    "rotX": -6.40375147E-05,
                    "rotY": 180.0018,
                    "rotZ": -1.15929743E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Interférence Captivante",
                  "Description": "Malédiction.",
                  "GMNotes": "{\"id\":\"00900c1f-5fd8-411a-96d3-751bab4abef6\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Mal�diction.\",\"TtsZoopGuid\":\"00900c1f-5fd8-411a-96d3-751bab4abef6\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1023": {
                      "FaceURL": "https://i.ibb.co/0R1wcXGn/4ea9bccdbeb9.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00019",
                  "Name": "Card",
                  "Transform": {
                    "posX": -30.5,
                    "posY": 2.06549859,
                    "posZ": 26.0,
                    "rotX": 3.0710562E-06,
                    "rotY": 180.001358,
                    "rotZ": -2.7874994E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Croissance Rampante",
                  "Description": "Risque.",
                  "GMNotes": "{\"id\":\"d972d708-31c3-4873-a65f-27bc58ea4d64\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque.\",\"TtsZoopGuid\":\"d972d708-31c3-4873-a65f-27bc58ea4d64\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102200,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1022": {
                      "FaceURL": "https://i.ibb.co/v6PjQL8r/987cfa9f091d.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00018",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 2.07512474,
                    "posZ": 26.0,
                    "rotX": -6.258716E-05,
                    "rotY": 180.001083,
                    "rotZ": -5.45202556E-06,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Croissance Rampante",
                  "Description": "Risque.",
                  "GMNotes": "{\"id\":\"fa207a01-94c0-44cb-b103-3a4a8e77f5a4\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque.\",\"TtsZoopGuid\":\"fa207a01-94c0-44cb-b103-3a4a8e77f5a4\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102100,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1021": {
                      "FaceURL": "https://i.ibb.co/SXWSs2Pz/e45852f50007.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00017",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 2.08475232,
                    "posZ": 26.0,
                    "rotX": -6.244414E-05,
                    "rotY": 180.003311,
                    "rotZ": -3.21442676E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Croissance Rampante",
                  "Description": "Risque.",
                  "GMNotes": "{\"id\":\"49606210-1a22-424d-9252-3e463530e006\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque.\",\"TtsZoopGuid\":\"49606210-1a22-424d-9252-3e463530e006\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102000,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1020": {
                      "FaceURL": "https://i.ibb.co/ksVXZG3M/e687231ef352.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00016",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.5,
                    "posY": 2.09437418,
                    "posZ": 26.0,
                    "rotX": 0.000211003484,
                    "rotY": 180.001984,
                    "rotZ": -0.000451876316,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Déversement Chimique",
                  "Description": "Risque.",
                  "GMNotes": "{\"id\":\"c3016014-ab35-4e31-8753-b4434dfe315f\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque.\",\"TtsZoopGuid\":\"c3016014-ab35-4e31-8753-b4434dfe315f\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 101900,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1019": {
                      "FaceURL": "https://i.ibb.co/bMF4sysT/e8468c9dc4cd.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00015",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 2.104009,
                    "posZ": 26.0,
                    "rotX": -4.7180336E-05,
                    "rotY": 180.0044,
                    "rotZ": -3.944732E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Déversement Chimique",
                  "Description": "Risque.",
                  "GMNotes": "{\"id\":\"d71b619e-1b51-49ec-89dc-55e8c05afe95\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Risque.\",\"TtsZoopGuid\":\"d71b619e-1b51-49ec-89dc-55e8c05afe95\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 101800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1018": {
                      "FaceURL": "https://i.ibb.co/ksrVX404/2421ecd04f11.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00014",
                  "Name": "Card",
                  "Transform": {
                    "posX": -30.9911728,
                    "posY": 2.10955572,
                    "posZ": 26.0202618,
                    "rotX": 0.0003943047,
                    "rotY": 180.000717,
                    "rotZ": -0.000465191726,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Hurlement Brutal",
                  "Description": "Terreur.",
                  "GMNotes": "{\"id\":\"37f022dc-73f6-481c-99d0-caba4b9e99a1\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur.\",\"TtsZoopGuid\":\"37f022dc-73f6-481c-99d0-caba4b9e99a1\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 101700,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1017": {
                      "FaceURL": "https://i.ibb.co/Gvdy8Ks4/382cdf458371.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00013",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 2.1232636,
                    "posZ": 25.5,
                    "rotX": -3.66593158E-05,
                    "rotY": 180.001038,
                    "rotZ": -4.570556E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Hurlement Brutal",
                  "Description": "Terreur.",
                  "GMNotes": "{\"id\":\"4d214a30-7977-4f3d-ac96-38921a0b3010\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Terreur.\",\"TtsZoopGuid\":\"4d214a30-7977-4f3d-ac96-38921a0b3010\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 101600,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1016": {
                      "FaceURL": "https://i.ibb.co/VcwvXqwF/3ba313364d5c.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00012",
                  "Name": "Card",
                  "Transform": {
                    "posX": -31.0,
                    "posY": 2.13289356,
                    "posZ": 26.0,
                    "rotX": -4.95752865E-05,
                    "rotY": 180.0009,
                    "rotZ": -5.826503E-05,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Mutation Agressive",
                  "Description": "Pouvoir.",
                  "GMNotes": "{\"id\":\"ea63a2ab-826f-4166-8373-d1a2dd5b322e\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Pouvoir.\",\"TtsZoopGuid\":\"ea63a2ab-826f-4166-8373-d1a2dd5b322e\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 101500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1015": {
                      "FaceURL": "https://i.ibb.co/Sw0QJ9Yh/888a20438ba7.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00011",
                  "Name": "Card",
                  "Transform": {
                    "posX": -30.9965363,
                    "posY": 2.138449,
                    "posZ": 25.9783821,
                    "rotX": -4.05673381E-05,
                    "rotY": 180.0043,
                    "rotZ": -0.000231257523,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Mutation Agressive",
                  "Description": "Pouvoir.",
                  "GMNotes": "{\"id\":\"4289764b-1391-4f7c-b670-fb38ea9d96d3\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<size 8>Pouvoir.\",\"TtsZoopGuid\":\"4289764b-1391-4f7c-b670-fb38ea9d96d3\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 101400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1014": {
                      "FaceURL": "https://i.ibb.co/rGQkZzq6/6a26a6f707d9.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "1aee54",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -33.00131,
                "posY": 1.84000051,
                "posZ": 12.001893,
                "rotX": -4.9958303E-06,
                "rotY": 179.9714,
                "rotZ": -2.02972984E-07,
                "scaleX": 0.7,
                "scaleY": 0.7,
                "scaleZ": 0.7
              },
              "Nickname": "Boutique de Gravure",
              "Description": "Place au hasard le lieu",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.614982545,
                "g": 0.0,
                "b": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/1988932521659261269/AACFC5A7E2B2828E449B2979907F1D94C4C5469C/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
              "LuaScriptState": "{\"ml\":{\"e00006\":{\"lock\":false,\"pos\":{\"x\":6.5005,\"y\":1.5166,\"z\":1.5},\"rot\":{\"x\":0.0109,\"y\":179.9992,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00007\":{\"lock\":false,\"pos\":{\"x\":-33.0002,\"y\":1.7836,\"z\":7.4998},\"rot\":{\"x\":0,\"y\":180.0059,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "e00006",
                  "Name": "Card",
                  "Transform": {
                    "posX": 6.50049973,
                    "posY": 1.50660837,
                    "posZ": 1.50000083,
                    "rotX": 0.0108916648,
                    "rotY": 179.9992,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Boutique de Gravure",
                  "Description": "Quartier Nord.",
                  "GMNotes": "{\"id\":\"d59d6961-4b42-4426-a93c-53c4280b17c0\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Quartier Nord.\",\"locationFront\":{\"icons\":\"DiamondAlt\",\"connections\":\"SquareAlt|CrossAlt|TriangleAlt|HourglassAlt|HeartAlt\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"DiamondAlt\",\"connections\":\"SquareAlt|CrossAlt|TriangleAlt|HourglassAlt|HeartAlt\"},\"TtsZoopGuid\":\"d59d6961-4b42-4426-a93c-53c4280b17c0\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 100500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1005": {
                      "FaceURL": "https://i.ibb.co/7t2FK3nC/602d16d99751.jpg",
                      "BackURL": "https://i.ibb.co/fzRW4c2K/7e12894d353d.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00007",
                  "Name": "Card",
                  "Transform": {
                    "posX": -33.0002022,
                    "posY": 1.78360569,
                    "posZ": 7.49979639,
                    "rotX": -4.88991736E-06,
                    "rotY": 180.005951,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Boutique de Gravure",
                  "Description": "Quartier Nord.",
                  "GMNotes": "{\"id\":\"878d0da6-fdc4-430d-940e-7fa88ca9a189\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Quartier Nord\",\"locationFront\":{\"icons\":\"DiamondAlt\",\"connections\":\"SquareAlt|CrossAlt|TriangleAlt|HourglassAlt|HeartAlt\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"DiamondAlt\",\"connections\":\"SquareAlt|CrossAlt|TriangleAlt|HourglassAlt|HeartAlt\"},\"TtsZoopGuid\":\"878d0da6-fdc4-430d-940e-7fa88ca9a189\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 100600,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1006": {
                      "FaceURL": "https://i.ibb.co/JRwpbjr7/6cf1b4ce7ff1.jpg",
                      "BackURL": "https://i.ibb.co/fzRW4c2K/7e12894d353d.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "5990ee",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -21.0,
                "posY": 1.84000051,
                "posZ": 12.0,
                "rotX": -5.2841433E-06,
                "rotY": 179.9714,
                "rotZ": 1.601189E-07,
                "scaleX": 0.7,
                "scaleY": 0.7,
                "scaleZ": 0.7
              },
              "Nickname": "Tannerie",
              "Description": "Place au hasard le lieu",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.614982545,
                "g": 0.0,
                "b": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/2040743837313337555/48C5185AFDA1F41D2B89F9C0C875F42AA47FD440/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
              "LuaScriptState": "{\"ml\":{\"e0000a\":{\"lock\":false,\"pos\":{\"x\":6.5,\"y\":1.52,\"z\":19.5},\"rot\":{\"x\":0.0109,\"y\":179.9922,\"z\":180.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0000b\":{\"lock\":false,\"pos\":{\"x\":-21,\"y\":1.7836,\"z\":7.5},\"rot\":{\"x\":0,\"y\":179.9917,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "e0000a",
                  "Name": "Card",
                  "Transform": {
                    "posX": 6.499999,
                    "posY": 1.51003,
                    "posZ": 19.5000019,
                    "rotX": 0.0108922105,
                    "rotY": 179.992218,
                    "rotZ": 180.004944,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Tannerie",
                  "Description": "Quartier Nord.",
                  "GMNotes": "{\"id\":\"56b9d069-ea79-42ac-8561-d70e6134ea33\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Quartier Nord.\",\"locationFront\":{\"icons\":\"CircleAlt\",\"connections\":\"SquareAlt|DoubleSlashAlt|CrossAlt\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"CircleAlt\",\"connections\":\"SquareAlt|DoubleSlashAlt|CrossAlt\"},\"TtsZoopGuid\":\"56b9d069-ea79-42ac-8561-d70e6134ea33\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 100900,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1009": {
                      "FaceURL": "https://i.ibb.co/r279ctJv/09084f130bcc.jpg",
                      "BackURL": "https://i.ibb.co/xK7WzdS4/d7e67f879f23.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0000b",
                  "Name": "Card",
                  "Transform": {
                    "posX": -21.0,
                    "posY": 1.78360569,
                    "posZ": 7.49999475,
                    "rotX": -4.922525E-06,
                    "rotY": 179.991669,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Tannerie",
                  "Description": "Quartier Nord.",
                  "GMNotes": "{\"id\":\"d562cac8-3575-437a-bde0-732f91090cc0\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Quartier Nord.\",\"locationFront\":{\"icons\":\"CircleAlt\",\"connections\":\"SquareAlt|DoubleSlashAlt|CrossAlt\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"CircleAlt\",\"connections\":\"SquareAlt|DoubleSlashAlt|CrossAlt\"},\"TtsZoopGuid\":\"d562cac8-3575-437a-bde0-732f91090cc0\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 101000,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1010": {
                      "FaceURL": "https://i.ibb.co/9m3nbhkh/50a2fdf5897b.jpg",
                      "BackURL": "https://i.ibb.co/xK7WzdS4/d7e67f879f23.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "5a174e",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -30.0017033,
                "posY": 1.84000051,
                "posZ": 12.0008965,
                "rotX": -5.21370976E-06,
                "rotY": 179.971573,
                "rotZ": 6.07132E-07,
                "scaleX": 0.7,
                "scaleY": 0.7,
                "scaleZ": 0.7
              },
              "Nickname": "Bureau des Informations",
              "Description": "Place au hasard le lieu",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.614982545,
                "g": 0.0,
                "b": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/1988932521659245104/7B1C2164A753181108452C97908B20F2F40F3F11/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
              "LuaScriptState": "{\"ml\":{\"e00004\":{\"lock\":false,\"pos\":{\"x\":16.5,\"y\":1.5157,\"z\":1.5},\"rot\":{\"x\":0.0109,\"y\":179.9995,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00005\":{\"lock\":false,\"pos\":{\"x\":-30.0001,\"y\":1.7836,\"z\":7.4999},\"rot\":{\"x\":0,\"y\":180.0016,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "e00004",
                  "Name": "Card",
                  "Transform": {
                    "posX": 16.5,
                    "posY": 1.50574481,
                    "posZ": 1.50000012,
                    "rotX": 0.0108915493,
                    "rotY": 179.999542,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Bureau des Importations",
                  "Description": "Quartier Nord.",
                  "GMNotes": "{\"id\":\"c02017f7-0ba1-4887-8502-e5f32f553a8c\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Quartier Nord.\",\"locationFront\":{\"icons\":\"TriangleAlt\",\"connections\":\"SquareAlt|CrossAlt|DiamondAlt\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"TriangleAlt\",\"connections\":\"SquareAlt|CrossAlt|DiamondAlt\"},\"TtsZoopGuid\":\"c02017f7-0ba1-4887-8502-e5f32f553a8c\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 100300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1003": {
                      "FaceURL": "https://i.ibb.co/WWJCBT6G/9f12c2ba363b.jpg",
                      "BackURL": "https://i.ibb.co/PG3c3s3X/c26ad9042d48.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00005",
                  "Name": "Card",
                  "Transform": {
                    "posX": -30.0001068,
                    "posY": 1.78360569,
                    "posZ": 7.49989271,
                    "rotX": -4.94951655E-06,
                    "rotY": 180.001572,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Bureau des Importations",
                  "Description": "Quartier Nord.",
                  "GMNotes": "{\"id\":\"eba7b44b-c631-41c6-8f8d-73d58f145f9f\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Quartier Nord.\",\"locationFront\":{\"icons\":\"TriangleAlt\",\"connections\":\"SquareAlt|CrossAlt|DiamondAlt\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"TriangleAlt\",\"connections\":\"SquareAlt|CrossAlt|DiamondAlt\"},\"TtsZoopGuid\":\"eba7b44b-c631-41c6-8f8d-73d58f145f9f\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 100400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1004": {
                      "FaceURL": "https://i.ibb.co/Zp4XL9FK/a7946eb3544c.jpg",
                      "BackURL": "https://i.ibb.co/PG3c3s3X/c26ad9042d48.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "8f5543",
              "Name": "Deck",
              "Transform": {
                "posX": 17.5881,
                "posY": 1.5259583,
                "posZ": -6.18209839,
                "rotX": 0.0108916927,
                "rotY": 180.0015,
                "rotZ": 0.0049485,
                "scaleX": 0.714285731,
                "scaleY": 1.0,
                "scaleZ": 0.714285731
              },
              "Nickname": "Deck Acte",
              "Description": "L'Étrange Cas du Dr. Jekyll et M. Hyde",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                105400,
                105300,
                105200
              ],
              "CustomDeck": {
                "1054": {
                  "FaceURL": "https://i.ibb.co/k23ZCSjN/47d0248c9aaf.jpg",
                  "BackURL": "https://i.ibb.co/KnjKKDr/ea7b4016c651.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "1053": {
                  "FaceURL": "https://i.ibb.co/xSN8cGrC/66942affb6f9.jpg",
                  "BackURL": "https://i.ibb.co/4gDP4qcb/8eb54e54549f.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "1052": {
                  "FaceURL": "https://i.ibb.co/d08F1j20/65701ec5bd9b.jpg",
                  "BackURL": "https://i.ibb.co/zH42t8S3/6a93461dcd69.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "e0003c",
                  "Name": "Card",
                  "Transform": {
                    "posX": -21.0000038,
                    "posY": 1.78360307,
                    "posZ": 7.499986,
                    "rotX": 3.22068845E-05,
                    "rotY": 180.000519,
                    "rotZ": -0.000124955754,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Le Goût de sa Propre Médecine",
                  "Description": "Acte 3",
                  "GMNotes": "{\"id\":\"4c47e821-c91d-4831-b1cf-a92aaac4d495\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"4c47e821-c91d-4831-b1cf-a92aaac4d495\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 105400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1054": {
                      "FaceURL": "https://i.ibb.co/k23ZCSjN/47d0248c9aaf.jpg",
                      "BackURL": "https://i.ibb.co/KnjKKDr/ea7b4016c651.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0003b",
                  "Name": "Card",
                  "Transform": {
                    "posX": -21.0,
                    "posY": 1.82938576,
                    "posZ": 7.5,
                    "rotX": 0.000797028537,
                    "rotY": 180.000061,
                    "rotZ": -0.000497732661,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Matériaux Essentiels",
                  "Description": "Acte 2",
                  "GMNotes": "{\"id\":\"821b9800-1cb1-464d-a679-e367e4cc768d\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"821b9800-1cb1-464d-a679-e367e4cc768d\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 105300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1053": {
                      "FaceURL": "https://i.ibb.co/xSN8cGrC/66942affb6f9.jpg",
                      "BackURL": "https://i.ibb.co/4gDP4qcb/8eb54e54549f.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0003a",
                  "Name": "Card",
                  "Transform": {
                    "posX": -21.0,
                    "posY": 1.86330736,
                    "posZ": 7.5,
                    "rotX": 0.0001348106,
                    "rotY": 179.999954,
                    "rotZ": -8.33821541E-05,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Le Carnet d'un Dément",
                  "Description": "Acte 1",
                  "GMNotes": "{\"id\":\"1ee7c1c6-660f-4ca5-b5a2-4318ae01a61d\",\"type\":\"Act\",\"class\":\"Mythos\",\"clueThresholdPerInvestigator\":3,\"TtsZoopGuid\":\"1ee7c1c6-660f-4ca5-b5a2-4318ae01a61d\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 105200,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1052": {
                      "FaceURL": "https://i.ibb.co/d08F1j20/65701ec5bd9b.jpg",
                      "BackURL": "https://i.ibb.co/zH42t8S3/6a93461dcd69.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "cccf8b",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": 2.99999928,
                "posY": 1.49197531,
                "posZ": -5.499898,
                "rotX": 0.0108903935,
                "rotY": 180.0129,
                "rotZ": 0.004950947,
                "scaleX": 1.6428808,
                "scaleY": 1.0,
                "scaleZ": 1.6428808
              },
              "Nickname": "Mise en place du Chaos Bag",
              "Description": "L'Étrange Cas du Dr Jekyll et Mr Hyde",
              "GMNotes": "{\"data\":\"Jekyll_Hide\",\"easy\":false,\"expert\":false,\"hard\":true,\"normal\":true,\"standalone\":false}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.8745098,
                "g": 0.8,
                "b": 0.7019608
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/",
                "ImageSecondaryURL": "https://steamusercontent-a.akamaihd.net/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "\r\njacqueline_guid = '42cd6e'\r\n\r\nbuttonparams = {\r\n   ['easy'] = {label = \"Facile\", click_function = 'modeEasy', z_i = -0.2},\r\n   ['normal'] = {label = \"Standard\", click_function = 'modeNormal', z_i = 0.1},\r\n   ['hard'] = {label = \"Difficile\", click_function = 'modeHard', z_i = 0.4},\r\n   ['expert'] = {label = \"Expert\", click_function = 'modeExpert', z_i = 0.7},\r\n   ['standalone'] = {label = \"Indépendant\", click_function = 'modeStandalone', z_i = 0},\r\n}\r\n\r\nfunction onLoad()\r\n\r\n    metadata = JSON.decode(self.getGMNotes())\r\n    buttontable = {}\r\n    for key, value in pairs(buttonparams) do\r\n        if metadata[key] == true then\r\n            table.insert(buttontable,value)\r\n        end\r\n        \r\n    end\r\n\r\n    for _, button in pairs(buttontable) do\r\n        local data = {\r\n            click_function = button.click_function, \r\n            function_owner = self, \r\n            label = button.label, \r\n            position = {0, 0.1, button.z_i}, \r\n            scale = {0.3, 0.5, 0.3}, \r\n            width = 1500, \r\n            height = 400, \r\n            font_size = 250, \r\n            tooltip = \"Chaos bag du mode \"..button.label,\r\n            color = {0.5647, 0.4627, 0.2353, 1}, \r\n            font_color = {0.9041, 0.8313, 0.7356, 1},\r\n            hover_color = {99/255, 85/255, 48/255},\r\n            press_color = {192/255, 152/255, 94/255} }\r\n        self.createButton(data)\r\n        \r\n    end\r\n    jacqueline = getObjectFromGUID(jacqueline_guid)\r\n    chaosdata = jacqueline.getTable('chaosdata')\r\nend\r\n\r\nfunction modeEasy()\r\n    local  params ={}\r\n     params.mode = 'easy'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeNormal()\r\n      local  params ={}\r\n       params.mode = 'normal'\r\n       params.data = metadata.data\r\n       jacqueline.call('setChaosBag', params)\r\n    \r\nend\r\n\r\nfunction modeHard()\r\n    local  params ={}\r\n     params.mode = 'hard'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeExpert()\r\n    local  params ={}\r\n     params.mode = 'expert'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeStandalone()\r\n    local  params ={}\r\n     params.mode = 'standalone'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00001",
              "Name": "Card",
              "Transform": {
                "posX": 6.499999,
                "posY": 1.50831926,
                "posZ": 10.500001,
                "rotX": 0.010891621,
                "rotY": 179.999008,
                "rotZ": 180.004959,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Place Nord",
              "Description": "Quartier Nord.",
              "GMNotes": "{\"id\":\"249d0fd5-2700-45a8-997d-07d420de7e5f\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Quartier Nord.\",\"locationFront\":{\"icons\":\"SquareAlt\",\"connections\":\"CircleAlt|CrossAlt|TriangleAlt|DiamondAlt|HeartAlt\",\"uses\":[{\"count\":0,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"SquareAlt\",\"connections\":\"CircleAlt|CrossAlt|TriangleAlt|DiamondAlt|HeartAlt\"},\"TtsZoopGuid\":\"249d0fd5-2700-45a8-997d-07d420de7e5f\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 100000,
              "SidewaysCard": false,
              "CustomDeck": {
                "1000": {
                  "FaceURL": "https://i.ibb.co/jPdsVtfC/555ff381c9fc.jpg",
                  "BackURL": "https://i.ibb.co/G49Xr1G4/183553bd64b8.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e0000c",
              "Name": "Card",
              "Transform": {
                "posX": 16.5,
                "posY": 1.50916648,
                "posZ": 19.5000076,
                "rotX": 0.0108925262,
                "rotY": 179.989044,
                "rotZ": 180.004944,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Dépôt Ferroviaire",
              "Description": "Quartier Nord.",
              "GMNotes": "{\"id\":\"5ff8e514-4d4f-4806-8ebf-2aa9ff149e59\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Quartier Nord.\",\"locationFront\":{\"icons\":\"DoubleSlashAlt\",\"connections\":\"CircleAlt|CrossAlt\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"DoubleSlashAlt\",\"connections\":\"CircleAlt|CrossAlt\"},\"TtsZoopGuid\":\"5ff8e514-4d4f-4806-8ebf-2aa9ff149e59\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 101100,
              "SidewaysCard": false,
              "CustomDeck": {
                "1011": {
                  "FaceURL": "https://i.ibb.co/PGM051Lc/5e1ec349cfda.jpg",
                  "BackURL": "https://i.ibb.co/0p5scRbX/b339ee33c52f.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e0000d",
              "Name": "Card",
              "Transform": {
                "posX": -3.50000072,
                "posY": 1.507472,
                "posZ": 1.5000006,
                "rotX": 0.0108938348,
                "rotY": 179.973648,
                "rotZ": 180.004944,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Usine Désaffectée",
              "Description": "Quartier Nord.",
              "GMNotes": "{\"id\":\"164207db-1274-44fc-be1a-e88c16fcbef3\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Quartier Nord.\",\"locationFront\":{\"icons\":\"HourglassAlt\",\"connections\":\"HeartAlt|DiamondAlt\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"HourglassAlt\",\"connections\":\"HeartAlt|DiamondAlt\"},\"TtsZoopGuid\":\"164207db-1274-44fc-be1a-e88c16fcbef3\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 101200,
              "SidewaysCard": false,
              "CustomDeck": {
                "1012": {
                  "FaceURL": "https://i.ibb.co/1Jf6h6H9/7540f3c99122.jpg",
                  "BackURL": "https://i.ibb.co/j9jZ5WG2/ab9010f5b93a.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00010",
              "Name": "Card",
              "Transform": {
                "posX": 8.998399,
                "posY": 1.50829756,
                "posZ": 11.5212011,
                "rotX": 0.01089155,
                "rotY": 179.999969,
                "rotZ": 0.00494819647,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Henry Jekyll",
              "Description": "Dernier Bastion de Moralité",
              "GMNotes": "{\"id\":\"c969e568-24f4-4c8d-af0a-a5fe824ef1a8\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<size 8>M�dical.\",\"TtsZoopGuid\":\"c969e568-24f4-4c8d-af0a-a5fe824ef1a8\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 101300,
              "SidewaysCard": false,
              "CustomDeck": {
                "1013": {
                  "FaceURL": "https://i.ibb.co/jZxjLCSR/3aa236193e2c.jpg",
                  "BackURL": "https://i.ibb.co/6Jrbh8pX/fd6bbd1602d8.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00033",
              "Name": "Card",
              "Transform": {
                "posX": -20.0001068,
                "posY": 1.783606,
                "posZ": 2.999791,
                "rotX": -5.174833E-06,
                "rotY": 180.002884,
                "rotZ": 6.682352E-08,
                "scaleX": 0.728551149,
                "scaleY": 1.0,
                "scaleZ": 0.728551149
              },
              "Nickname": "Votre Autre Moitié",
              "Description": "L'Identité Libérée",
              "GMNotes": "{\"id\":\"91028e59-812c-445c-bd2a-a1d24618e7f0\",\"type\":\"Investigator\",\"traits\":\"<size 8>Lunatique.\",\"agilityIcons\":4,\"combatIcons\":4,\"intellectIcons\":4,\"willpowerIcons\":4,\"TtsZoopGuid\":\"91028e59-812c-445c-bd2a-a1d24618e7f0\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Investigator",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 104600,
              "SidewaysCard": false,
              "CustomDeck": {
                "1046": {
                  "FaceURL": "https://i.ibb.co/dwBd76Bf/8f41f536e24d.jpg",
                  "BackURL": "https://i.ibb.co/qLLWmLwy/5359363d4267.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00034",
              "Name": "Card",
              "Transform": {
                "posX": 23.5013,
                "posY": 1.50380516,
                "posZ": -5.52300024,
                "rotX": 0.0108913556,
                "rotY": 180.001755,
                "rotZ": 0.004948506,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Référence",
              "Description": "L'Étrange Cas du Dr. Jekyll et M. Hyde",
              "GMNotes": "{\"id\":\"ad8a8c8a-e8c0-41c5-8f01-09c50f1f919a\",\"type\":\"ScenarioReference\",\"class\":\"Mythos\",\"tokens\":{\"front\":{\"Cultist\":{\"modifier\":-2,\"description\":\"-2. Si ce pion est r�v�l� lors d'un test contre un ennemi <t>Sorcier</t>, subissez 1 horreur.\"},\"Skull\":{\"modifier\":-1,\"description\":\"-1 (-3 � la place si Edward Hyde est en jeu).\"},\"Tablet\":{\"modifier\":-2,\"description\":\"-2. Si ce pion est r�v�l� lors d'un test dans le cadre d'une comp�tence <act> ou <fre> imprim�e sur une carte Sc�nario, subissez 1 d�g�t.\"},\"Elder Thing\":{\"modifier\":-4,\"description\":\"-4. En cas d'�chec, d�placez Henry Jekyll de 1 lieu en l'�loignant de vous, ou Edward Hyde de 1 lieu en l'�loignant de vous s'il n'est pas engag� (choisir une option).\"}},\"back\":{\"Cultist\":{\"modifier\":-3,\"description\":\"-3. Si ce pion est r�v�l� lors d'un test contre un ennemi <t>Sorcier</t>, subissez 1 horreur.\"},\"Skull\":{\"modifier\":-2,\"description\":\"-2 (-4 � la place si Edward Hyde est en jeu).\"},\"Tablet\":{\"modifier\":-3,\"description\":\"-3. Si ce pion est r�v�l� lors d'un test dans le cadre d'une comp�tence <act> ou <fre> imprim�e sur une carte Sc�nario, subissez 1 d�g�t.\"},\"Elder Thing\":{\"modifier\":-5,\"description\":\"-5. En cas d'�chec, d�placez Henry Jekyll de 1 lieu en l'�loignant de vous, ou Edward Hyde de 1 lieu en l'�loignant de vous s'il n'est pas engag� (choisir une option).\"}}},\"TtsZoopGuid\":\"ad8a8c8a-e8c0-41c5-8f01-09c50f1f919a\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 104700,
              "SidewaysCard": false,
              "CustomDeck": {
                "1047": {
                  "FaceURL": "https://i.ibb.co/XfkdZbK0/e521d7278421.jpg",
                  "BackURL": "https://i.ibb.co/Zp3VQP4H/935b511aa4a4.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00035",
              "Name": "Card",
              "Transform": {
                "posX": -30.0005226,
                "posY": 1.783606,
                "posZ": 2.99947762,
                "rotX": -5.05761227E-06,
                "rotY": 180.002441,
                "rotZ": 1.492475E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Formule Adaptée",
              "Description": "",
              "GMNotes": "{\"TtsZoopGuid\":\"f652dd03-e877-45aa-ac53-d1a9b6e0722a\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 104800,
              "SidewaysCard": false,
              "CustomDeck": {
                "1048": {
                  "FaceURL": "https://i.ibb.co/Hp4j0D4F/7349540e199a.jpg",
                  "BackURL": "https://i.ibb.co/xtqp3k55/682a14e463d8.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00036",
              "Name": "Card",
              "Transform": {
                "posX": -27.0004215,
                "posY": 1.783606,
                "posZ": 2.99958062,
                "rotX": -5.129852E-06,
                "rotY": 180.001709,
                "rotZ": -2.10594244E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Drogue Trompeuse",
              "Description": "Introspection de l'Âme",
              "GMNotes": "{\"id\":\"fd6dddb5-9da5-43ae-b45f-fef52d3e3eac\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<size 8>Objet. Science.\",\"cost\":3,\"wildIcons\":2,\"TtsZoopGuid\":\"fd6dddb5-9da5-43ae-b45f-fef52d3e3eac\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 104900,
              "SidewaysCard": false,
              "CustomDeck": {
                "1049": {
                  "FaceURL": "https://i.ibb.co/QvjxX669/22c464f70615.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00037",
              "Name": "Card",
              "Transform": {
                "posX": -24.0003128,
                "posY": 1.783606,
                "posZ": 2.99968624,
                "rotX": -5.078974E-06,
                "rotY": 180.001556,
                "rotZ": 1.70387125E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Formule Fondamentale",
              "Description": "Qui êtes vous véritablement?",
              "GMNotes": "{\"id\":\"2f96c5e6-c656-43f6-aeda-b5e2cae9c814\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<size 8>Objet. Science.\",\"cost\":1,\"wildIcons\":2,\"TtsZoopGuid\":\"2f96c5e6-c656-43f6-aeda-b5e2cae9c814\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 105000,
              "SidewaysCard": false,
              "CustomDeck": {
                "1050": {
                  "FaceURL": "https://i.ibb.co/CKYBHWJW/4b50d5598b60.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00039",
              "Name": "Card",
              "Transform": {
                "posX": 12.5322037,
                "posY": 1.5046382,
                "posZ": -6.12391,
                "rotX": 0.0108914888,
                "rotY": 180.0005,
                "rotZ": 0.00494825467,
                "scaleX": 0.714285731,
                "scaleY": 1.0,
                "scaleZ": 0.714285731
              },
              "Nickname": "La Dualité de l'Homme",
              "Description": "Intrigue 1",
              "GMNotes": "{\"id\":\"473cb8fb-e86e-43bf-bd01-8fcd3a507004\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":4,\"TtsZoopGuid\":\"473cb8fb-e86e-43bf-bd01-8fcd3a507004\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 105100,
              "SidewaysCard": false,
              "CustomDeck": {
                "1051": {
                  "FaceURL": "https://i.ibb.co/WvsT1JZj/733f2dc5e88e.jpg",
                  "BackURL": "https://i.ibb.co/Rp9DW5Dv/562c20289c1d.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "f68191",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -27.0010014,
                "posY": 1.84000051,
                "posZ": 12.0008974,
                "rotX": -5.917403E-06,
                "rotY": 179.9717,
                "rotZ": -4.34135274E-07,
                "scaleX": 0.7,
                "scaleY": 0.7,
                "scaleZ": 0.7
              },
              "Nickname": "Pharmacie",
              "Description": "Place au hasard le lieu",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.614982545,
                "g": 0.0,
                "b": 0.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/1936014258275887703/A3B2CB76F0EB526F71A6076E20E5E5CF51C9A02A/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "-- Random memory bag\r\n-- based on Utility memory bag by Directsun (Version 2.7.0)\r\n\r\nlocal CONFIG = {\r\n    MEMORY_GROUP = {\r\n        -- This determines how many frames to wait before actually placing objects onto the table when the \"Place\" button is clicked.\r\n        -- This gives the other bags time to recall their objects.\r\n        -- The delay ONLY occurs if other bags have objects out.\r\n        FRAME_DELAY_BEFORE_PLACING_OBJECTS = 30\r\n    }\r\n}\r\n\r\nmath.randomseed(os.time())\r\n\r\n--[[ Memory Bag Groups ]]\r\n--[[ Utility Memory Bags may be added to a named group, called a \"memory group\".\r\nYou can add a bag to a group through the bag's UI: \"Setup\" > \"Group Name\" (to the left of the bag).\r\nOnly one bag from a group may have it's contents placed on the table at a time.\r\nWhen \"Place\" is clicked on a bag, the other bags in it's memory group are recalled.\r\nBy default a memory bag is not in any group. It's memory group is \"nil\". --]]\r\n\r\nmemoryGroupName = { memoryBag = self }\r\nfunction memoryGroupName:get()\r\n    return self._name\r\nend\r\n\r\nfunction memoryGroupName:set(newName)\r\n    GlobalMemoryGroups:unregisterBagInGroup(self:get(), self.memoryBag.getGUID())\r\n    GlobalMemoryGroups:registerBagInGroup(newName, self.memoryBag.getGUID())\r\n\r\n    if newName == \"\" then\r\n        self._name = nil\r\n    else\r\n        self._name = newName\r\n    end\r\nend\r\n\r\n-- Click the \"Recall\" button on all other bags in my memory group.\r\nfunction recallOtherBagsInMyGroup()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        bag.call('buttonClick_recall')\r\n    end\r\nend\r\n\r\n-- Return \"true\" if another bag in my memory group has any objects out on the table.\r\nfunction anyOtherBagsInMyGroupArePlaced()\r\n    for _, bag in ipairs(getOtherBagsInMyGroup()) do\r\n        local state = bag.call('areAnyOfMyObjectsPlaced')\r\n        if state then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Return \"true\" if at least one object from this memory bag is out on the table.\r\nfunction areAnyOfMyObjectsPlaced()\r\n    for guid, _ in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\nfunction getOtherBagsInMyGroup()\r\n    local bags = {}\r\n    for bagGuid, _ in pairs(GlobalMemoryGroups:getGroup(memoryGroupName:get())) do\r\n        if bagGuid ~= self.getGUID() then\r\n            bag = getObjectFromGUID(bagGuid)\r\n            -- \"bag\" is nill if it has been deleted since the last time onLoad() was called.\r\n            if bag ~= nil then\r\n                table.insert(bags, bag)\r\n            end\r\n        end\r\n    end\r\n    return bags\r\nend\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the names & guids of all memory bag groups.\r\nThe global variable is a table and holds data like this:\r\n{\r\n    'My First Group Name' = {\r\n        '805ebd' = {},\r\n        '35cc21' = {},\r\n        'fc8886' = {},\r\n    },\r\n    'My Second Group Name' = {\r\n        'f50264' = {},\r\n        '5f5f63' = {},\r\n    },\r\n}\r\n--]]\r\nGlobalMemoryGroups = { NAME_OF_GLOBAL_VARIABLE = '_GlobalUtilityMemoryBagGroups' }\r\n\r\n-- Call me inside this script's \"onLoad()\" method!\r\nfunction GlobalMemoryGroups:onLoad(myGuid)\r\n    -- Create and initialize the global variable if it doesn't already exist:\r\n    if self:_getGroups() == nil then\r\n        self:_setGroups({})\r\n    end\r\nend\r\n\r\n-- Return the GUIDs of all bags in the \"groupName\". The return value is a dictionary that maps [GUID -> empty table].\r\nfunction GlobalMemoryGroups:getGroup(groupName)\r\n    guids = self:_getGroups()[groupName] or {}\r\n    return guids\r\nend\r\n\r\n-- Registers a bag in a memory group. Creates a new group if one doesn't exist.\r\nfunction GlobalMemoryGroups:registerBagInGroup(groupName, bagGuid)\r\n    if groupName == nil or groupName == \"\" then\r\n        return\r\n    end\r\n\r\n    self:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    groups[groupName][bagGuid] = {}\r\n    self:_setGroups(groups)\r\nend\r\n\r\n-- Removes this bag from the memory group.\r\nfunction GlobalMemoryGroups:unregisterBagInGroup(groupName, bagGuid)\r\n    local groups = self:_getGroups()\r\n    local group = groups[groupName]\r\n    if group ~= nil then\r\n        group[bagGuid] = nil\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- Return the global variable, which is a table holding all memory group names & guids.\r\nfunction GlobalMemoryGroups:_getGroups()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE)\r\nend\r\n\r\n-- Override the global variable (i.e. the entire table).\r\nfunction GlobalMemoryGroups:_setGroups(newTable)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, newTable)\r\nend\r\n\r\n-- Add a new memory group named \"groupName\" to the global variable, if one doesn't already exist.\r\nfunction GlobalMemoryGroups:_tryCreateNewGroup(groupName)\r\n    local groups = self:_getGroups()\r\n    if groups[groupName] == nil then\r\n        groups[groupName] = {}\r\n        self:_setGroups(groups)\r\n    end\r\nend\r\n\r\n-- This object controls the \"Group Name\" input text field that is part of the bag's ingame UI.\r\ngroupNameInput = {\r\n    greyedOutText     = \"Group Name\",\r\n    widthPerCharacter = 100,\r\n    padding           = 4,\r\n    memoryBag         = self\r\n}\r\nfunction groupNameInput:create(optionalStartingValue)\r\n    local effectiveText = optionalStartingValue or self.greyedOutText\r\n    local width = self:computeWidth(effectiveText)\r\n\r\n    self.memoryBag.createInput({\r\n        label = self.greyedOutText,\r\n        value = optionalStartingValue or nil,\r\n        alignment = 3, -- Center aligned\r\n        input_function = \"groupNameInput_onCharacterTyped\", function_owner = self.memoryBag,\r\n        position = { 2.1, 0.3, 0 }, rotation = { 0, 270, 0 }, width = width, height = 350,\r\n        font_size = 250, color = { 0, 0, 0 }, font_color = { 1, 1, 1 },\r\n    })\r\nend\r\n\r\nfunction groupNameInput:computeWidth(text)\r\n    return (string.len(text) + self.padding) * self.widthPerCharacter\r\nend\r\n\r\nfunction groupNameInput:updatedWidth(text)\r\n    self.memoryBag.editInput({\r\n        index = 0,\r\n        width = self:computeWidth(text)\r\n    })\r\nend\r\n\r\nfunction groupNameInput:onCharacterTyped(text, stillEditing)\r\n    if stillEditing then\r\n        self:updatedWidth(text)\r\n    else\r\n        if text == \"\" then\r\n            self:updatedWidth(self.greyedOutText)\r\n        end\r\n    end\r\nend\r\n\r\nfunction groupNameInput_onCharacterTyped(memoryBag, playerColor, text, stillEditing)\r\n    groupNameInput:onCharacterTyped(text, stillEditing)\r\nend\r\n\r\nfunction groupNameInput:setGroupNameToInputField()\r\n    local inputFields = self.memoryBag.getInputs()\r\n    if inputFields ~= nil then\r\n        -- Get input field 0, which corresponds to the groupNameInput.\r\n        -- Unfortunately \"self.getInputs()\" doesn't return the inputs in a guaranteed order.\r\n        local nameField = nil\r\n        for _, field in ipairs(inputFields) do\r\n            if field.index == 0 then\r\n                nameField = field\r\n            end\r\n        end\r\n\r\n        memoryGroupName:set(nameField.value)\r\n    end\r\nend\r\n\r\nfunction updateSave()\r\n    local data_to_save = { [\"ml\"] = memoryList, [\"groupName\"] = memoryGroupName:get() }\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n    end\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n    GlobalMemoryGroups:onLoad(self.getGUID())\r\n    AllMemoryBagsInScene:add(self.getGUID())\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n        memoryGroupName:set(loaded_data.groupName)\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n        memoryGroupName:set(nil)\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n--Beginning Setup\r\n\r\n--Make setup button\r\nfunction createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.3,2}, rotation={0,0,0}, height=350, width=800,\r\n      font_size=250, color={0,0,0}, font_color={1,1,1}\r\n  })\r\nend\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", { 0.75, 0.75, 1 })\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1 * 1 / self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = { 0.75, 0.25, 0.25, 0.6 }\r\n            local colorMove = { 0, 0, 1, 0.6 }\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function = funcName, function_owner = self,\r\n                position = objPos, rotation = rot, height = 1000, width = 1000,\r\n                color = color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n  --Creates submit and cancel buttons\r\n  function createSetupActionButtons(move)\r\n      self.createButton({\r\n         label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n         position={-1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n         font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n\r\n      if move == false then\r\n        self.createButton({\r\n            label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n            position={1.15,0.3,2.1}, rotation={0,0,0}, height=350, width=1100,\r\n            font_size=250, color={0,0,0}, font_color={0.25,1,0.25}\r\n          })\r\n\r\n          self.createButton({\r\n              label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n              position={-1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n              font_size=250, color={0,0,0}, font_color={1,1,1}\r\n          })\r\n\r\n          if fresh == false then\r\n              self.createButton({\r\n                  label=\"Mise à Jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                  position={1.15,0.3,3.5}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=180, color={0,0,0}, font_color={0.75,0.75,1}\r\n              })\r\n              self.createButton({\r\n                  label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                  position={1.15,0.3,2.8}, rotation={0,0,0}, height=350, width=1100,\r\n                  font_size=250, color={0,0,0}, font_color={1,0.25,0.25}\r\n              })\r\n          end\r\n      end\r\n\r\n      self.createButton({\r\n          label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n          position={0,0.3,-2}, rotation={0,0,0}, height=350, width=800,\r\n          font_size=250, color={0,0,0}, font_color={1,1,1}\r\n      })\r\n  end\r\n\r\n\r\n--During Setup\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = { 0, 0, 1, 0.6 }\r\n    local color = { 0, 1, 0, 0.6 }\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({ index = previousIndex, color = colorMove })\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({ index = index, color = color })\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n            rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n            lock = obj.getLock(),\r\n            tint = obj.getColorTint()\r\n        }\r\n        obj.highlightOn({ 0, 1, 0 })\r\n    else\r\n        color = { 0.75, 0.25, 0.25, 0.6 }\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({ index = index, color = color })\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({ index = index, color = { 0, 1, 0, 0.6 } })\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos = { x = round(pos.x, 4), y = round(pos.y, 4), z = round(pos.z, 4) },\r\n                    rot = { x = round(rot.x, 4), y = round(rot.y, 4), z = round(rot.z, 4) },\r\n                    lock = obj.getLock(),\r\n                    tint = obj.getColorTint()\r\n                }\r\n                obj.highlightOn({ 0, 1, 0 })\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = { 0.75, 0.25, 0.25, 0.6 }\r\n                self.editButton({ index = index, color = color })\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", { 1, 1, 1 })\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", { 1, 0.25, 0.25 })\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", { 0.75, 0.75, 1 })\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", { 0.75, 0.25, 0.25 })\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    groupNameInput:setGroupNameToInputField()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k, v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", { 0.25, 0.75, 0.25 })\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", { 1.0, 0.25, 0.25 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count .. \" Objects Removed\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", { 0.75, 0.75, 1 })\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count .. \" Objects Saved\", { 1, 1, 1 })\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    memoryGroupName:set(nil)\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", { 1, 1, 1 })\r\n    updateSave()\r\nend\r\n\r\n--After Setup\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer au hasard\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0,0.3,2}, rotation={0,0,0}, height=350, width=2000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={0,0.3,2.8}, rotation={0,0,0}, height=350, width=1000,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={2,0.3,0}, rotation={0,90,0}, height=350, width=800,\r\n        font_size=250, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    if anyOtherBagsInMyGroupArePlaced() then\r\n        recallOtherBagsInMyGroup()\r\n        Wait.frames(_placeObjects, CONFIG.MEMORY_GROUP.FRAME_DELAY_BEFORE_PLACING_OBJECTS)\r\n    else\r\n        _placeObjects()\r\n    end\r\nend\r\n\r\nfunction _placeObjects()\r\n    local bagObjList = self.getObjects()\r\n\r\n    -- randomize memorylist position\r\n    local positionList = {}\r\n    for guid, entry in pairs(memoryList) do\r\n        table.insert(positionList, memoryList[guid].pos)\r\n    end\r\n\r\n    for i = #positionList, 2, -1 do\r\n        local j = math.random(i)\r\n        positionList[i], positionList[j] = positionList[j], positionList[i]\r\n    end\r\n\r\n    local i = 1\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos = positionList[i]\r\n        i = i + 1\r\n    end\r\n\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid = guid, position = entry.pos, rotation = entry.rot, smooth = false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés au hasard\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n--Utility functions\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x - p1.x)\r\n    deltaPos.y = (p2.y - p1.y) + yOffset\r\n    deltaPos.z = (p2.z - p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return { x = x, y = desiredPos.y, z = z }\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10 ^ (dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n--[[ This object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample: {'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'} --]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
              "LuaScriptState": "{\"ml\":{\"e00002\":{\"lock\":false,\"pos\":{\"x\":16.5,\"y\":1.5175,\"z\":10.5},\"rot\":{\"x\":0.0109,\"y\":180.0003,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00003\":{\"lock\":false,\"pos\":{\"x\":-27.0001,\"y\":1.7836,\"z\":7.4999},\"rot\":{\"x\":0,\"y\":180.0018,\"z\":180},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}}}}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "e00002",
                  "Name": "Card",
                  "Transform": {
                    "posX": 16.5,
                    "posY": 1.50745559,
                    "posZ": 10.500001,
                    "rotX": 0.010891431,
                    "rotY": 180.00032,
                    "rotZ": 180.004959,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Pharmacie",
                  "Description": "Quartier Nord.",
                  "GMNotes": "{\"id\":\"83e77802-b01b-4744-a69c-9ab1a1db0071\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Quartier Nord.\",\"locationFront\":{\"icons\":\"CrossAlt\",\"connections\":\"SquareAlt|DoubleSlashAlt|TriangleAlt|DiamondAlt|CircleAlt\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"CrossAlt\",\"connections\":\"SquareAlt|DoubleSlashAlt|TriangleAlt|DiamondAlt|CircleAlt\"},\"TtsZoopGuid\":\"83e77802-b01b-4744-a69c-9ab1a1db0071\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 100100,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1001": {
                      "FaceURL": "https://i.ibb.co/XfwrN2bh/4fcc884d5cd8.jpg",
                      "BackURL": "https://i.ibb.co/N6QMQX0n/cda816d8c239.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00003",
                  "Name": "Card",
                  "Transform": {
                    "posX": -27.0001049,
                    "posY": 1.78360569,
                    "posZ": 7.49989271,
                    "rotX": -5.12027054E-06,
                    "rotY": 180.001831,
                    "rotZ": 180.0,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Pharmacie",
                  "Description": "Quartier Nord.",
                  "GMNotes": "{\"id\":\"2fcaaccc-c52b-4b6f-a67f-a431e0c9a6da\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<size 8>Quartier Nord.\",\"locationFront\":{\"icons\":\"CrossAlt\",\"connections\":\"SquareAlt|DoubleSlashAlt|TriangleAlt|DiamondAlt|CircleAlt\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"CrossAlt\",\"connections\":\"SquareAlt|DoubleSlashAlt|TriangleAlt|DiamondAlt|CircleAlt\"},\"TtsZoopGuid\":\"2fcaaccc-c52b-4b6f-a67f-a431e0c9a6da\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Location",
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": false,
                  "Hands": true,
                  "CardID": 100200,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1002": {
                      "FaceURL": "https://i.ibb.co/RF8gmTR/cc8040ab8554.jpg",
                      "BackURL": "https://i.ibb.co/N6QMQX0n/cda816d8c239.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            }
          ],
          "AttachedDecals": [
            {
              "Transform": {
                "posX": -0.0021877822,
                "posY": -0.08963572,
                "posZ": -0.00288731651,
                "rotX": 270.0,
                "rotY": 359.869568,
                "rotZ": 0.0,
                "scaleX": 2.00000215,
                "scaleY": 2.00000238,
                "scaleZ": 2.00000262
              },
              "CustomDecal": {
                "Name": "dunwich_back",
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
                "Size": 7.4
              }
            }
          ]
        },
        {
          "GUID": "f319a5",
          "Name": "Custom_Model_Bag",
          "Transform": {
            "posX": 3.00000548,
            "posY": 0.9799972,
            "posZ": 47.0000038,
            "rotX": -5.05718162E-06,
            "rotY": 179.996765,
            "rotZ": 4.71770818E-07,
            "scaleX": 1.20052135,
            "scaleY": 0.249882281,
            "scaleZ": 1.3145982
          },
          "Nickname": "La Légende du Cavalier Sans Tête",
          "Description": "Scenario",
          "GMNotes": "",
          "AltLookAngle": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          },
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Value": 0,
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "MaterialIndex": -1,
          "MeshIndex": -1,
          "CustomMesh": {
            "MeshURL": "https://raw.githubusercontent.com/RobMayer/TTSLibrary/master/advboxes/tuckbox_h_MSH.obj",
            "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/11925850707831019/3D20A71D13F484BEEBCF572E827CD38FF3DF57E4/",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 3,
            "TypeIndex": 6,
            "CustomShader": {
              "SpecularColor": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "SpecularIntensity": 0.0,
              "SpecularSharpness": 2.0,
              "FresnelStrength": 0.0
            },
            "CastShadows": true
          },
          "Bag": {
            "Order": 0
          },
          "LuaScript": "-- Utility memory bag by Directsun\r\n-- Version 2.7.0\r\n-- Fork of Memory Bag 2.0 by MrStump\r\n--\r\n-- Want to contribute? Create an issue or fork the code on GitHub and submit a pull request:\r\n-- https://github.com/sunflowermans/TTS-UtilityMemoryBag\r\n\r\n\r\nfunction updateSave()\r\n    local data_to_save = {[\"ml\"]=memoryList}\r\n    saved_data = JSON.encode(data_to_save)\r\n    self.script_state = saved_data\r\nend\r\n\r\nfunction combineMemoryFromBagsWithin()\r\n    local bagObjList = self.getObjects()\r\n    for _, bagObj in ipairs(bagObjList) do\r\n        local data = bagObj.lua_script_state\r\n        if data ~= nil then\r\n            local j = JSON.decode(data)\r\n            if j ~= nil and j.ml ~= nil then\r\n                for guid, entry in pairs(j.ml) do\r\n                    memoryList[guid] = entry\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction updateMemoryWithMoves()\r\n    memoryList = memoryListBackup\r\n    --get the first transposed object's coordinates\r\n    local obj = getObjectFromGUID(moveGuid)\r\n\r\n    -- p1 is where needs to go, p2 is where it was\r\n    local refObjPos = memoryList[moveGuid].pos\r\n    local deltaPos = findOffsetDistance(obj.getPosition(), refObjPos, nil)\r\n    local movedRotation = obj.getRotation()\r\n    for guid, entry in pairs(memoryList) do\r\n        memoryList[guid].pos.x = entry.pos.x - deltaPos.x\r\n        memoryList[guid].pos.y = entry.pos.y - deltaPos.y\r\n        memoryList[guid].pos.z = entry.pos.z - deltaPos.z\r\n        -- memoryList[guid].rot.x = movedRotation.x\r\n        -- memoryList[guid].rot.y = movedRotation.y\r\n        -- memoryList[guid].rot.z = movedRotation.z\r\n    end\r\n\r\n    --theList[obj.getGUID()] = {\r\n    --    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n    --    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n    --    lock=obj.getLock()\r\n    --}\r\n    moveList = {}\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n    fresh = true\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        --Set up information off of loaded_data\r\n        memoryList = loaded_data.ml\r\n    else\r\n        --Set up information for if there is no saved saved data\r\n        memoryList = {}\r\n\r\n    end\r\n\r\n    moveList = {}\r\n    moveGuid = nil\r\n\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        fresh = false\r\n        createMemoryActionButtons()\r\n    end\r\nend\r\n\r\n\r\n--Beginning Setup\r\n\r\n\r\n--Make setup button\r\n function createSetupButton()\r\n    self.createButton({\r\n      label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n      position={0,0.1,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n end\r\n\r\n--Triggered by Transpose button\r\nfunction buttonClick_transpose()\r\n    moveGuid = nil\r\n    broadcastToAll(\"Select one object and move it- all objects will move relative to the new location\", {0.75, 0.75, 1})\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(true)\r\n    createSetupActionButtons(true)\r\nend\r\n\r\n--Triggered by setup button,\r\nfunction buttonClick_setup()\r\n    memoryListBackup = duplicateTable(memoryList)\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createButtonsOnAllObjects(false)\r\n    createSetupActionButtons(false)\r\nend\r\n\r\nfunction getAllObjectsInMemory()\r\n    local objTable = {}\r\n    local curObj = {}\r\n\r\n    for guid in pairs(memoryListBackup) do\r\n        curObj = getObjectFromGUID(guid)\r\n        table.insert(objTable, curObj)\r\n    end\r\n\r\n    return objTable\r\n    -- return getAllObjects()\r\nend\r\n\r\n--Creates selection buttons on objects\r\nfunction createButtonsOnAllObjects(move)\r\n    buttonIndexMap = {}\r\n    local howManyButtons = 0\r\n\r\n    local objsToHaveButtons = {}\r\n    if move == true then\r\n        objsToHaveButtons = getAllObjectsInMemory()\r\n    else\r\n        objsToHaveButtons = getAllObjects()\r\n    end\r\n\r\n    for _, obj in ipairs(objsToHaveButtons) do\r\n        if obj ~= self then\r\n            --On a normal bag, the button positions aren't the same size as the bag.\r\n            globalScaleFactor = 1* 1/self.getScale().x\r\n            --Super sweet math to set button positions\r\n            local selfPos = self.getPosition()\r\n            local objPos = obj.getPosition()\r\n            local deltaPos = findOffsetDistance(selfPos, objPos, obj)\r\n            local objPos = rotateLocalCoordinates(deltaPos, self)\r\n            objPos.x = -objPos.x * globalScaleFactor\r\n            objPos.y = objPos.y * globalScaleFactor + 2\r\n            objPos.z = objPos.z * globalScaleFactor * 0.9\r\n            --Workaround for custom PDFs\r\n            if obj.Book then\r\n                objPos.y = objPos.y + 0.5\r\n            end\r\n            --Offset rotation of bag\r\n            local rot = self.getRotation()\r\n            rot.y = -rot.y + 180\r\n            --Create function\r\n            local funcName = \"selectButton_\" .. howManyButtons\r\n            local func = function() buttonClick_selection(obj, move) end\r\n            local color = {0.75,0.25,0.25,0.6}\r\n            local colorMove = {0,0,1,0.6}\r\n            if move == true then\r\n                color = colorMove\r\n            end\r\n            self.setVar(funcName, func)\r\n            self.createButton({\r\n                click_function=funcName, function_owner=self,\r\n                position=objPos, rotation=rot, height=500, width=500,\r\n                color=color,\r\n            })\r\n            buttonIndexMap[obj.getGUID()] = howManyButtons\r\n            howManyButtons = howManyButtons + 1\r\n        end\r\n    end\r\nend\r\n\r\n--Creates submit and cancel buttons\r\nfunction createSetupActionButtons(move)\r\n    self.createButton({\r\n        label=\"Annuler\", click_function=\"buttonClick_cancel\", function_owner=self,\r\n      position={-0.7,0.1,2.1}, rotation={0,0,0}, height=275, width=625,\r\n      font_size=145, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    self.createButton({\r\n        label=\"Valider\", click_function=\"buttonClick_submit\", function_owner=self,\r\n        position={-0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=140, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n\r\n    if move == false then\r\n      self.createButton({\r\n          label=\"Ajouter\", click_function=\"buttonClick_add\", function_owner=self,\r\n          position={0.7,0.3,2.1}, rotation={0,0,0}, height=275, width=625,\r\n          font_size=140, color={0,0,0}, font_color={0.25,1,0.25}\r\n      })\r\n\r\n        self.createButton({\r\n            label=\"Sélection\", click_function=\"editDragSelection\", function_owner=self,\r\n            position={-0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=125, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n\r\n        if fresh == false then\r\n                self.createButton({\r\n                    label=\"Mise à jour\", click_function=\"buttonClick_setNew\", function_owner=self,\r\n                    position={0.7,0.3,3.1}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=105, color={0,0,0}, font_color={0.75,0.75,1}\r\n                })\r\n                self.createButton({\r\n                    label=\"Retirer\", click_function=\"buttonClick_remove\", function_owner=self,\r\n                    position={0.7,0.3,2.6}, rotation={0,0,0}, height=275, width=625,\r\n                    font_size=140, color={0,0,0}, font_color={1,0.25,0.25}\r\n                })\r\n            end\r\n        end\r\n\r\n        self.createButton({\r\n            label=\"Reset\", click_function=\"buttonClick_reset\", function_owner=self,\r\n            position={0,0.3,-2.1}, rotation={0,0,0}, height=275, width=625,\r\n            font_size=165, color={0,0,0}, font_color={1,1,1}\r\n        })\r\n    end\r\n\r\n\r\n--During Setup\r\n\r\n\r\n--Checks or unchecks buttons\r\nfunction buttonClick_selection(obj, move)\r\n    local index = buttonIndexMap[obj.getGUID()]\r\n    local colorMove = {0,0,1,0.6}\r\n    local color = {0,1,0,0.6}\r\n\r\n    previousGuid = selectedGuid\r\n    selectedGuid = obj.getGUID()\r\n\r\n    theList = memoryList\r\n    if move == true then\r\n        theList = moveList\r\n        if previousGuid ~= nil and previousGuid ~= selectedGuid then\r\n            local prevObj = getObjectFromGUID(previousGuid)\r\n            prevObj.highlightOff()\r\n            self.editButton({index=previousIndex, color=colorMove})\r\n            theList[previousGuid] = nil\r\n        end\r\n        previousIndex = index\r\n    end\r\n\r\n    if theList[selectedGuid] == nil then\r\n        self.editButton({index=index, color=color})\r\n        --Adding pos/rot to memory table\r\n        local pos, rot = obj.getPosition(), obj.getRotation()\r\n        --I need to add it like this or it won't save due to indexing issue\r\n        theList[obj.getGUID()] = {\r\n            pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n            rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n            lock=obj.getLock(),\r\n            tint=obj.getColorTint()\r\n        }\r\n        obj.highlightOn({0,1,0})\r\n    else\r\n        color = {0.75,0.25,0.25,0.6}\r\n        if move == true then\r\n            color = colorMove\r\n        end\r\n        self.editButton({index=index, color=color})\r\n        theList[obj.getGUID()] = nil\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\nfunction editDragSelection(bagObj, player, remove)\r\n    local selectedObjs = Player[player].getSelectedObjects()\r\n    if not remove then\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            --Ignore if already in the memory list, or does not have a button\r\n            if index and not memoryList[obj.getGUID()] then\r\n                self.editButton({index=index, color={0,1,0,0.6}})\r\n                --Adding pos/rot to memory table\r\n                local pos, rot = obj.getPosition(), obj.getRotation()\r\n                --I need to add it like this or it won't save due to indexing issue\r\n                memoryList[obj.getGUID()] = {\r\n                    pos={x=round(pos.x,4), y=round(pos.y,4), z=round(pos.z,4)},\r\n                    rot={x=round(rot.x,4), y=round(rot.y,4), z=round(rot.z,4)},\r\n                    lock=obj.getLock(),\r\n                    tint=obj.getColorTint()\r\n                }\r\n                obj.highlightOn({0,1,0})\r\n            end\r\n        end\r\n    else\r\n        for _, obj in ipairs(selectedObjs) do\r\n            local index = buttonIndexMap[obj.getGUID()]\r\n            if index and memoryList[obj.getGUID()] then\r\n                color = {0.75,0.25,0.25,0.6}\r\n                self.editButton({index=index, color=color})\r\n                memoryList[obj.getGUID()] = nil\r\n                obj.highlightOff()\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--Cancels selection process\r\nfunction buttonClick_cancel()\r\n    memoryList = memoryListBackup\r\n    moveList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if next(memoryList) == nil then\r\n        createSetupButton()\r\n    else\r\n        createMemoryActionButtons()\r\n    end\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Sélection annulée\", {1,1,1})\r\n    moveGuid = nil\r\nend\r\n\r\n--Saves selections\r\nfunction buttonClick_submit()\r\n    fresh = false\r\n    if next(moveList) ~= nil then\r\n        for guid in pairs(moveList) do\r\n            moveGuid = guid\r\n        end\r\n        if memoryListBackup[moveGuid] == nil then\r\n            broadcastToAll(\"Item selected for moving is not already in memory\", {1, 0.25, 0.25})\r\n        else\r\n            broadcastToAll(\"Moving all items in memory relative to new objects position!\", {0.75, 0.75, 1})\r\n            self.clearButtons()\r\n            self.clearInputs()\r\n            createMemoryActionButtons()\r\n            local count = 0\r\n            for guid in pairs(moveList) do\r\n                moveGuid = guid\r\n                count = count + 1\r\n                local obj = getObjectFromGUID(guid)\r\n                if obj ~= nil then obj.highlightOff() end\r\n            end\r\n            updateMemoryWithMoves()\r\n            updateSave()\r\n            buttonClick_place()\r\n        end\r\n    elseif next(memoryList) == nil and moveGuid == nil then\r\n        memoryList = memoryListBackup\r\n        broadcastToAll(\"No selections made.\", {0.75, 0.25, 0.25})\r\n    end\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\n    moveGuid = nil\r\nend\r\n\r\nfunction combineTables(first_table, second_table)\r\n    for k,v in pairs(second_table) do first_table[k] = v end\r\nend\r\n\r\nfunction buttonClick_add()\r\n    fresh = false\r\n    combineTables(memoryList, memoryListBackup)\r\n    broadcastToAll(\"Adding internal bags and selections to existing memory\", {0.25, 0.75, 0.25})\r\n    combineMemoryFromBagsWithin()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_remove()\r\n    broadcastToAll(\"Removing Selected Entries From Memory\", {1.0, 0.25, 0.25})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for guid in pairs(memoryList) do\r\n        count = count + 1\r\n        memoryListBackup[guid] = nil\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then obj.highlightOff() end\r\n    end\r\n    broadcastToAll(count..\" Objects Removed\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\nfunction buttonClick_setNew()\r\n    broadcastToAll(\"Setting new position relative to items in memory\", {0.75, 0.75, 1})\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createMemoryActionButtons()\r\n    local count = 0\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        guid = obj.guid\r\n        if memoryListBackup[guid] ~= nil then\r\n            count = count + 1\r\n            memoryListBackup[guid].pos = obj.getPosition()\r\n            memoryListBackup[guid].rot = obj.getRotation()\r\n            memoryListBackup[guid].lock = obj.getLock()\r\n            memoryListBackup[guid].tint = obj.getColorTint()\r\n        end\r\n    end\r\n    broadcastToAll(count..\" Objects Saved\", {1,1,1})\r\n    memoryList = memoryListBackup\r\n    updateSave()\r\nend\r\n\r\n--Resets bag to starting status\r\nfunction buttonClick_reset()\r\n    fresh = true\r\n    memoryList = {}\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    createSetupButton()\r\n    removeAllHighlights()\r\n    broadcastToAll(\"Tool Reset\", {1,1,1})\r\n    updateSave()\r\nend\r\n\r\n\r\n--After Setup\r\n\r\n\r\n--Creates recall and place buttons\r\nfunction createMemoryActionButtons()\r\n    self.createButton({\r\n        label=\"Placer\", click_function=\"buttonClick_place\", function_owner=self,\r\n        position={0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Ranger\", click_function=\"buttonClick_recall\", function_owner=self,\r\n        position={-0.7,0.1,2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    self.createButton({\r\n        label=\"Config\", click_function=\"buttonClick_setup\", function_owner=self,\r\n        position={0,0.1,-2.2}, rotation={0,0,0}, height=275, width=625,\r\n        font_size=150, color={0,0,0}, font_color={1,1,1}\r\n    })\r\n    ---    self.createButton({\r\n    ---      label=\"Bouger\", click_function=\"buttonClick_transpose\", function_owner=self,\r\n    ---      position={-2,0.3,0.8}, rotation={0,270,0}, height=350, width=800,\r\n    ---      font_size=250, color={0,0,0}, font_color={0.75,0.75,1}\r\n    ---\r\nend\r\n\r\n--Sends objects from bag/table to their saved position/rotation\r\nfunction buttonClick_place()\r\n    local bagObjList = self.getObjects()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        --If obj is out on the table, move it to the saved pos/rot\r\n        if obj ~= nil then\r\n            obj.setPositionSmooth(entry.pos)\r\n            obj.setRotationSmooth(entry.rot)\r\n            obj.setLock(entry.lock)\r\n            obj.setColorTint(entry.tint)\r\n        else\r\n            --If obj is inside of the bag\r\n            for _, bagObj in ipairs(bagObjList) do\r\n                if bagObj.guid == guid then\r\n                    local item = self.takeObject({\r\n                        guid=guid, position=entry.pos, rotation=entry.rot, smooth=false\r\n                    })\r\n                    item.setLock(entry.lock)\r\n                    item.setColorTint(entry.tint)\r\n                    break\r\n                end\r\n            end\r\n        end\r\n    end\r\n    broadcastToAll(\"Objets placés\", {1,1,1})\r\nend\r\n\r\n--Recalls objects to bag from table\r\nfunction buttonClick_recall()\r\n    for guid, entry in pairs(memoryList) do\r\n        local obj = getObjectFromGUID(guid)\r\n        if obj ~= nil then self.putObject(obj) end\r\n    end\r\n    broadcastToAll(\"Objets rangés\", {1,1,1})\r\nend\r\n\r\n\r\n--Utility functions\r\n\r\n\r\n--Find delta (difference) between 2 x/y/z coordinates\r\nfunction findOffsetDistance(p1, p2, obj)\r\n    local yOffset = 0\r\n    if obj ~= nil then\r\n        local bounds = obj.getBounds()\r\n        yOffset = (bounds.size.y - bounds.offset.y)\r\n    end\r\n    local deltaPos = {}\r\n    deltaPos.x = (p2.x-p1.x)\r\n    deltaPos.y = (p2.y-p1.y) + yOffset\r\n    deltaPos.z = (p2.z-p1.z)\r\n    return deltaPos\r\nend\r\n\r\n--Used to rotate a set of coordinates by an angle\r\nfunction rotateLocalCoordinates(desiredPos, obj)\r\n    local objPos, objRot = obj.getPosition(), obj.getRotation()\r\n    local angle = math.rad(objRot.y)\r\n    local x = desiredPos.x * math.cos(angle) - desiredPos.z * math.sin(angle)\r\n    local z = desiredPos.x * math.sin(angle) + desiredPos.z * math.cos(angle)\r\n    --return {x=objPos.x+x, y=objPos.y+desiredPos.y, z=objPos.z+z}\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\nfunction rotateMyCoordinates(desiredPos, obj)\r\n    local angle = math.rad(obj.getRotation().y)\r\n    local x = desiredPos.x * math.sin(angle)\r\n    local z = desiredPos.z * math.cos(angle)\r\n    return {x=x, y=desiredPos.y, z=z}\r\nend\r\n\r\n--Coroutine delay, in seconds\r\nfunction wait(time)\r\n    local start = os.time()\r\n    repeat coroutine.yield(0) until os.time() > start + time\r\nend\r\n\r\n--Duplicates a table (needed to prevent it making reference to the same objects)\r\nfunction duplicateTable(oldTable)\r\n    local newTable = {}\r\n    for k, v in pairs(oldTable) do\r\n        newTable[k] = v\r\n    end\r\n    return newTable\r\nend\r\n\r\n--Moves scripted highlight from all objects\r\nfunction removeAllHighlights()\r\n    for _, obj in ipairs(getAllObjects()) do\r\n        obj.highlightOff()\r\n    end\r\nend\r\n\r\n--Round number (num) to the Nth decimal (dec)\r\nfunction round(num, dec)\r\n    local mult = 10^(dec or 0)\r\n    return math.floor(num * mult + 0.5) / mult\r\nend\r\n\r\n\r\n--[[\r\nThis object provides access to a variable stored on the \"Global script\".\r\nThe variable holds the GUIDs for every Utility Memory Bag in the scene.\r\nExample:\r\n{'805ebd', '35cc21', 'fc8886', 'f50264', '5f5f63'}\r\n--]]\r\nAllMemoryBagsInScene = {\r\n    NAME_OF_GLOBAL_VARIABLE = \"_UtilityMemoryBag_AllMemoryBagsInScene\"\r\n}\r\n\r\nfunction AllMemoryBagsInScene:add(guid)\r\n    local guids = Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\n    table.insert(guids, guid)\r\n    Global.setTable(self.NAME_OF_GLOBAL_VARIABLE, guids)\r\nend\r\n\r\nfunction AllMemoryBagsInScene:getGuidList()\r\n    return Global.getTable(self.NAME_OF_GLOBAL_VARIABLE) or {}\r\nend\r\n",
          "LuaScriptState": "{\"ml\":{\"296ff5\":{\"lock\":false,\"pos\":{\"x\":-19,\"y\":1.4799,\"z\":-5},\"rot\":{\"x\":0,\"y\":180,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}},\"40ac5b\":{\"lock\":false,\"pos\":{\"x\":-1,\"y\":1.5061,\"z\":14.5},\"rot\":{\"x\":0.0049,\"y\":90.0001,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"430829\":{\"lock\":false,\"pos\":{\"x\":3,\"y\":1.502,\"z\":-5.5},\"rot\":{\"x\":0.0109,\"y\":180.0128,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.701960802078247,\"g\":0.800000011920929,\"r\":0.874509811401367}},\"4d9264\":{\"lock\":false,\"pos\":{\"x\":1.5,\"y\":1.5069,\"z\":19.5},\"rot\":{\"x\":359.9881,\"y\":330.0001,\"z\":0.0012},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"502457\":{\"lock\":false,\"pos\":{\"x\":9,\"y\":1.5034,\"z\":4.5},\"rot\":{\"x\":0.0049,\"y\":90.0001,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"66b6bf\":{\"lock\":false,\"pos\":{\"x\":4,\"y\":1.5075,\"z\":24},\"rot\":{\"x\":0.0049,\"y\":90.0002,\"z\":359.9891},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"7234af\":{\"lock\":false,\"pos\":{\"x\":4,\"y\":1.5047,\"z\":9.5},\"rot\":{\"x\":359.9891,\"y\":0.0105,\"z\":-0.005},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"86bece\":{\"lock\":false,\"pos\":{\"x\":17.4809,\"y\":1.536,\"z\":-6.2162},\"rot\":{\"x\":0.0109,\"y\":180.0002,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"87b77c\":{\"lock\":false,\"pos\":{\"x\":6.5,\"y\":1.5064,\"z\":19.5},\"rot\":{\"x\":359.993,\"y\":29.9999,\"z\":359.9903},\"tint\":{\"a\":1,\"b\":0.604529500007629,\"g\":0.604529500007629,\"r\":0.604529500007629}},\"95872d\":{\"lock\":false,\"pos\":{\"x\":30.5,\"y\":1.6799,\"z\":-2.9971},\"rot\":{\"x\":-0.0006,\"y\":180.0001,\"z\":180.0011},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"d3f017\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.8006,\"z\":10},\"rot\":{\"x\":0,\"y\":180,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00006\":{\"lock\":false,\"pos\":{\"x\":23.5013,\"y\":1.5138,\"z\":-5.523},\"rot\":{\"x\":0.0109,\"y\":180.0108,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00007\":{\"lock\":false,\"pos\":{\"x\":-20.5,\"y\":1.7836,\"z\":4.5},\"rot\":{\"x\":0,\"y\":180.002,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00008\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.7836,\"z\":4.5},\"rot\":{\"x\":0,\"y\":180.009,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0000e\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.5146,\"z\":-6.2201},\"rot\":{\"x\":0.0109,\"y\":180.0018,\"z\":0.0049},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00014\":{\"lock\":false,\"pos\":{\"x\":14,\"y\":1.5165,\"z\":4.5},\"rot\":{\"x\":0.0109,\"y\":180.001,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00015\":{\"lock\":false,\"pos\":{\"x\":4,\"y\":1.5174,\"z\":4.5},\"rot\":{\"x\":0.0109,\"y\":180.0002,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00016\":{\"lock\":false,\"pos\":{\"x\":4,\"y\":1.5193,\"z\":14.5},\"rot\":{\"x\":0.0109,\"y\":180,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00017\":{\"lock\":false,\"pos\":{\"x\":9,\"y\":1.5208,\"z\":24.5},\"rot\":{\"x\":0.0109,\"y\":180.0014,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00018\":{\"lock\":false,\"pos\":{\"x\":-6,\"y\":1.5202,\"z\":14.5},\"rot\":{\"x\":0.0109,\"y\":180.0006,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e00019\":{\"lock\":false,\"pos\":{\"x\":-1,\"y\":1.5216,\"z\":24.5},\"rot\":{\"x\":0.0109,\"y\":179.9989,\"z\":180.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e0001c\":{\"lock\":false,\"pos\":{\"x\":12.5,\"y\":1.5152,\"z\":-3},\"rot\":{\"x\":0.0109,\"y\":180.012,\"z\":0.005},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"e1cc7e\":{\"lock\":false,\"pos\":{\"x\":-24.5,\"y\":1.8006,\"z\":10},\"rot\":{\"x\":0,\"y\":180.0001,\"z\":0},\"tint\":{\"a\":1,\"b\":0.713235259056091,\"g\":0.713235259056091,\"r\":0.713235259056091}},\"f7c30c\":{\"lock\":false,\"pos\":{\"x\":-29.5,\"y\":1.84,\"z\":7.5},\"rot\":{\"x\":0,\"y\":179.9891,\"z\":0},\"tint\":{\"a\":1,\"b\":1,\"g\":1,\"r\":1}}}}",
          "XmlUI": "",
          "ContainedObjects": [
            {
              "GUID": "296ff5",
              "Name": "Custom_PDF",
              "Transform": {
                "posX": -19.0,
                "posY": 1.48149931,
                "posZ": -5.0,
                "rotX": -2.02400287E-07,
                "rotY": 180.0,
                "rotZ": 5.87070872E-08,
                "scaleX": 1.99723673,
                "scaleY": 1.0,
                "scaleZ": 1.99723673
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomPDF": {
                "PDFUrl": "https://steamusercontent-a.akamaihd.net/ugc/11926483554651526/9B3CC3C35FA4676E033758D517A48E7D4F7A71B4/",
                "PDFPassword": "",
                "PDFPage": 0,
                "PDFPageOffset": 0
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "430829",
              "Name": "Custom_Tile",
              "Transform": {
                "posX": 2.99999928,
                "posY": 1.49197531,
                "posZ": -5.499998,
                "rotX": 0.010890265,
                "rotY": 180.0128,
                "rotZ": 0.00495085772,
                "scaleX": 1.6428808,
                "scaleY": 1.0,
                "scaleZ": 1.6428808
              },
              "Nickname": "Mise en place du Chaos Bag",
              "Description": "La Légende du Cavalier Sans Tête",
              "GMNotes": "{\"data\":\"Legende_Cavalier\",\"easy\":false,\"expert\":false,\"hard\":true,\"normal\":true,\"standalone\":false}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.8745098,
                "g": 0.8,
                "b": 0.7019608
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "CustomImage": {
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/",
                "ImageSecondaryURL": "https://steamusercontent-a.akamaihd.net/ugc/2011456161884106028/81BF2DAD34FE18B6788B56E21F16B81E6525AD99/",
                "ImageScalar": 1.0,
                "WidthScale": 0.0,
                "CustomTile": {
                  "Type": 3,
                  "Thickness": 0.1,
                  "Stackable": false,
                  "Stretch": true
                }
              },
              "LuaScript": "\r\njacqueline_guid = '42cd6e'\r\n\r\nbuttonparams = {\r\n   ['easy'] = {label = \"Facile\", click_function = 'modeEasy', z_i = -0.2},\r\n   ['normal'] = {label = \"Standard\", click_function = 'modeNormal', z_i = 0.1},\r\n   ['hard'] = {label = \"Difficile\", click_function = 'modeHard', z_i = 0.4},\r\n   ['expert'] = {label = \"Expert\", click_function = 'modeExpert', z_i = 0.7},\r\n   ['standalone'] = {label = \"Indépendant\", click_function = 'modeStandalone', z_i = 0},\r\n}\r\n\r\nfunction onLoad()\r\n\r\n    metadata = JSON.decode(self.getGMNotes())\r\n    buttontable = {}\r\n    for key, value in pairs(buttonparams) do\r\n        if metadata[key] == true then\r\n            table.insert(buttontable,value)\r\n        end\r\n        \r\n    end\r\n\r\n    for _, button in pairs(buttontable) do\r\n        local data = {\r\n            click_function = button.click_function, \r\n            function_owner = self, \r\n            label = button.label, \r\n            position = {0, 0.1, button.z_i}, \r\n            scale = {0.3, 0.5, 0.3}, \r\n            width = 1500, \r\n            height = 400, \r\n            font_size = 250, \r\n            tooltip = \"Chaos bag du mode \"..button.label,\r\n            color = {0.5647, 0.4627, 0.2353, 1}, \r\n            font_color = {0.9041, 0.8313, 0.7356, 1},\r\n            hover_color = {99/255, 85/255, 48/255},\r\n            press_color = {192/255, 152/255, 94/255} }\r\n        self.createButton(data)\r\n        \r\n    end\r\n    jacqueline = getObjectFromGUID(jacqueline_guid)\r\n    chaosdata = jacqueline.getTable('chaosdata')\r\nend\r\n\r\nfunction modeEasy()\r\n    local  params ={}\r\n     params.mode = 'easy'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeNormal()\r\n      local  params ={}\r\n       params.mode = 'normal'\r\n       params.data = metadata.data\r\n       jacqueline.call('setChaosBag', params)\r\n    \r\nend\r\n\r\nfunction modeHard()\r\n    local  params ={}\r\n     params.mode = 'hard'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeExpert()\r\n    local  params ={}\r\n     params.mode = 'expert'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend\r\n\r\nfunction modeStandalone()\r\n    local  params ={}\r\n     params.mode = 'standalone'\r\n     params.data = metadata.data\r\n     jacqueline.call('setChaosBag', params)\r\n  \r\nend",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "86bece",
              "Name": "Deck",
              "Transform": {
                "posX": 17.4808979,
                "posY": 1.52596116,
                "posZ": -6.21619844,
                "rotX": 0.0108913546,
                "rotY": 180.000183,
                "rotZ": 0.00494822534,
                "scaleX": 0.714285731,
                "scaleY": 1.0,
                "scaleZ": 0.714285731
              },
              "Nickname": "Deck Acte",
              "Description": "La Légende du Cavalier Sans Tête",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                101500,
                101400,
                101300
              ],
              "CustomDeck": {
                "1015": {
                  "FaceURL": "https://i.ibb.co/C5khvGmQ/6c190fd2f176.jpg",
                  "BackURL": "https://i.ibb.co/tT6jzq1z/85cd7f1c59f9.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "1014": {
                  "FaceURL": "https://i.ibb.co/23VqpQnM/ed197a7c731b.jpg",
                  "BackURL": "https://i.ibb.co/ksZwB2Pp/ba1ea4d0366a.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                },
                "1013": {
                  "FaceURL": "https://i.ibb.co/kVZC8k67/cc43db28904c.jpg",
                  "BackURL": "https://i.ibb.co/vCcPPmpK/f05944fa5444.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "e00011",
                  "Name": "Card",
                  "Transform": {
                    "posX": -20.49994,
                    "posY": 1.783602,
                    "posZ": 18.0000515,
                    "rotX": 3.69552254E-05,
                    "rotY": 180.000046,
                    "rotZ": -0.00013293112,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Chasser le Spectre",
                  "Description": "Acte 3",
                  "GMNotes": "{\"id\":\"28bbfe55-adfd-4b42-8664-c3de9514d1ff\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"28bbfe55-adfd-4b42-8664-c3de9514d1ff\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 101500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1015": {
                      "FaceURL": "https://i.ibb.co/C5khvGmQ/6c190fd2f176.jpg",
                      "BackURL": "https://i.ibb.co/tT6jzq1z/85cd7f1c59f9.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00010",
                  "Name": "Card",
                  "Transform": {
                    "posX": -20.5,
                    "posY": 1.8293854,
                    "posZ": 18.0,
                    "rotX": -0.000620504143,
                    "rotY": 180.0002,
                    "rotZ": -0.000159651856,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "Le Cavalier Hessois",
                  "Description": "Acte 2",
                  "GMNotes": "{\"id\":\"237d6e4c-8ae4-4b0d-81c5-f687f85adfdc\",\"type\":\"Act\",\"class\":\"Mythos\",\"TtsZoopGuid\":\"237d6e4c-8ae4-4b0d-81c5-f687f85adfdc\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 101400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1014": {
                      "FaceURL": "https://i.ibb.co/23VqpQnM/ed197a7c731b.jpg",
                      "BackURL": "https://i.ibb.co/ksZwB2Pp/ba1ea4d0366a.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0000f",
                  "Name": "Card",
                  "Transform": {
                    "posX": -20.5,
                    "posY": 1.86330664,
                    "posZ": 18.0,
                    "rotX": -0.000112388836,
                    "rotY": 180.0001,
                    "rotZ": -2.47944117E-05,
                    "scaleX": 0.714285731,
                    "scaleY": 1.0,
                    "scaleZ": 0.714285731
                  },
                  "Nickname": "L'Histoire d'Ichabod Crane",
                  "Description": "Acte 1",
                  "GMNotes": "{\"id\":\"71106a7a-4c7d-4f0c-a46f-680d8d024e40\",\"type\":\"Act\",\"class\":\"Mythos\",\"clueThresholdPerInvestigator\":3,\"TtsZoopGuid\":\"71106a7a-4c7d-4f0c-a46f-680d8d024e40\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 101300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1013": {
                      "FaceURL": "https://i.ibb.co/kVZC8k67/cc43db28904c.jpg",
                      "BackURL": "https://i.ibb.co/vCcPPmpK/f05944fa5444.jpg",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": true,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "95872d",
              "Name": "Deck",
              "Transform": {
                "posX": 30.5,
                "posY": 1.67986226,
                "posZ": -2.9971,
                "rotX": -0.000591189368,
                "rotY": 180.0001,
                "rotZ": 180.001068,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Deck Rencontre",
              "Description": "La Légende du Cavalier Sans Tête",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                105900,
                105800,
                105700,
                105600,
                105500,
                105400,
                105100,
                105000,
                104900,
                104800,
                104700,
                104600,
                104500,
                104400,
                104300,
                104200,
                104100,
                104000,
                103900,
                103800,
                103700,
                103400,
                103300,
                103200,
                103100,
                103000,
                102900,
                102800,
                102700,
                102600,
                102500,
                102400,
                102300
              ],
              "CustomDeck": {
                "1059": {
                  "FaceURL": "https://i.ibb.co/Ng6Ks6PZ/8328f6bfa43b.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1058": {
                  "FaceURL": "https://i.ibb.co/6cN6FZgJ/5ef65fd59edd.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1057": {
                  "FaceURL": "https://i.ibb.co/5gcCfBVG/f5f86801c8be.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1056": {
                  "FaceURL": "https://i.ibb.co/kVTHMVVv/ec4cd0a64648.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1055": {
                  "FaceURL": "https://i.ibb.co/8nRjmNWt/584bd0500ce2.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1054": {
                  "FaceURL": "https://i.ibb.co/zHbKJs3d/5c560caf26d5.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1051": {
                  "FaceURL": "https://i.ibb.co/6RJqds1B/1acdfafd18a6.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1050": {
                  "FaceURL": "https://i.ibb.co/qFPf8kNx/0995569ea965.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1049": {
                  "FaceURL": "https://i.ibb.co/FbVSrgSQ/51f3b09cee3d.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1048": {
                  "FaceURL": "https://i.ibb.co/dshj20zh/5b412d7a6645.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1047": {
                  "FaceURL": "https://i.ibb.co/svnkHVBN/15144e3ae058.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1046": {
                  "FaceURL": "https://i.ibb.co/Zz8WmY2x/528fbc4f9727.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1045": {
                  "FaceURL": "https://i.ibb.co/XfVwmBz6/b05d6ec3eee0.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1044": {
                  "FaceURL": "https://i.ibb.co/xdwtN8x/e6135d403e9c.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1043": {
                  "FaceURL": "https://i.ibb.co/ZC64tDj/7d4c1c0db20c.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1042": {
                  "FaceURL": "https://i.ibb.co/7xVyZ1VZ/4b1f920d91dd.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1041": {
                  "FaceURL": "https://i.ibb.co/3925wPtx/4859ec3e206d.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1040": {
                  "FaceURL": "https://i.ibb.co/PZZrGF7N/0d397cf39d5f.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1039": {
                  "FaceURL": "https://i.ibb.co/21tzmmqZ/e9715aadc538.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1038": {
                  "FaceURL": "https://i.ibb.co/Xx3jxzJV/48d875d6454e.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1037": {
                  "FaceURL": "https://i.ibb.co/ZRHQXp0V/550207bf965e.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1034": {
                  "FaceURL": "https://i.ibb.co/HDHqF8gM/835db6e07a10.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1033": {
                  "FaceURL": "https://i.ibb.co/qMXtkg45/082d041852a7.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1032": {
                  "FaceURL": "https://i.ibb.co/s9LgskXN/11f6e231481c.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1031": {
                  "FaceURL": "https://i.ibb.co/hxBQYXgM/8ee004911191.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1030": {
                  "FaceURL": "https://i.ibb.co/1SrS1RC/29dfffe22afc.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1029": {
                  "FaceURL": "https://i.ibb.co/WvpfpGVX/bb36e1f1e6ce.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1028": {
                  "FaceURL": "https://i.ibb.co/Z16p88Yw/b061e9b4b147.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1027": {
                  "FaceURL": "https://i.ibb.co/Zz2KN5nK/f9ac57786447.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1026": {
                  "FaceURL": "https://i.ibb.co/N25yVfvg/d961f71cce1c.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1025": {
                  "FaceURL": "https://i.ibb.co/nM1Kt1My/2a1879eb6f1c.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1024": {
                  "FaceURL": "https://i.ibb.co/hxmgB9T0/cf486a4920d3.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1023": {
                  "FaceURL": "https://i.ibb.co/FLzSCRsD/c8eee358f15a.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "e00041",
                  "Name": "Card",
                  "Transform": {
                    "posX": -3.99999523,
                    "posY": 1.91016936,
                    "posZ": 5.499997,
                    "rotX": 0.0103714895,
                    "rotY": 180.000031,
                    "rotZ": 180.005478,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sorcière du Vallon",
                  "Description": "Humanoïde. Sorcière.",
                  "GMNotes": "{\"id\":\"b4f5dcf7-09d5-4007-bfa5-98b8f611a5f6\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Humano�de. Sorci�re.</family>\",\"TtsZoopGuid\":\"b4f5dcf7-09d5-4007-bfa5-98b8f611a5f6\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 105900,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1059": {
                      "FaceURL": "https://i.ibb.co/Ng6Ks6PZ/8328f6bfa43b.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00040",
                  "Name": "Card",
                  "Transform": {
                    "posX": -3.99999785,
                    "posY": 1.55875468,
                    "posZ": 5.999995,
                    "rotX": 0.01592138,
                    "rotY": 180.00325,
                    "rotZ": -0.0011777645,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sorcière du Vallon",
                  "Description": "Humanoïde. Sorcière.",
                  "GMNotes": "{\"id\":\"0978a496-22a6-4b56-92c0-29a0339bb16e\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Humano�de. Sorci�re.</family>\",\"TtsZoopGuid\":\"0978a496-22a6-4b56-92c0-29a0339bb16e\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 105800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1058": {
                      "FaceURL": "https://i.ibb.co/6cN6FZgJ/5ef65fd59edd.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0003f",
                  "Name": "Card",
                  "Transform": {
                    "posX": -3.99999952,
                    "posY": 1.58286512,
                    "posZ": 6.000002,
                    "rotX": 0.008831238,
                    "rotY": 180.000885,
                    "rotZ": 0.004067519,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sorcière du Vallon",
                  "Description": "Humanoïde. Sorcière.",
                  "GMNotes": "{\"id\":\"d1ab69ec-a2b7-4e62-9c02-a9e1a3f8bd94\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Humano�de. Sorci�re.</family>\",\"TtsZoopGuid\":\"d1ab69ec-a2b7-4e62-9c02-a9e1a3f8bd94\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 105700,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1057": {
                      "FaceURL": "https://i.ibb.co/5gcCfBVG/f5f86801c8be.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0003e",
                  "Name": "Card",
                  "Transform": {
                    "posX": -3.99999952,
                    "posY": 1.59249508,
                    "posZ": 6.000002,
                    "rotX": 0.00890358,
                    "rotY": 179.997925,
                    "rotZ": 0.004100857,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Chuchotements dans le Vent",
                  "Description": "Sortilège. Terreur.",
                  "GMNotes": "{\"id\":\"c06b12b7-1e7d-4510-a69d-fc36a69d221a\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Sortil�ge. Terreur.</family>\",\"TtsZoopGuid\":\"c06b12b7-1e7d-4510-a69d-fc36a69d221a\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 105600,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1056": {
                      "FaceURL": "https://i.ibb.co/kVTHMVVv/ec4cd0a64648.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0003d",
                  "Name": "Card",
                  "Transform": {
                    "posX": -3.99999976,
                    "posY": 1.6021291,
                    "posZ": 6.000002,
                    "rotX": 0.008985262,
                    "rotY": 180.005753,
                    "rotZ": 0.00414208975,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Chuchotements dans le Vent",
                  "Description": "Sortilège. Terreur.",
                  "GMNotes": "{\"id\":\"b05c594c-5269-4704-b148-060ed02fb230\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Sortil�ge. Terreur.</family>\",\"TtsZoopGuid\":\"b05c594c-5269-4704-b148-060ed02fb230\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 105500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1055": {
                      "FaceURL": "https://i.ibb.co/8nRjmNWt/584bd0500ce2.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0003c",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.0,
                    "posY": 1.61175883,
                    "posZ": 6.000002,
                    "rotX": 0.009037105,
                    "rotY": 180.002487,
                    "rotZ": 0.00416560145,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Chuchotements dans le Vent",
                  "Description": "Sortilège. Terreur.",
                  "GMNotes": "{\"id\":\"443ace1f-fd9f-4583-b458-db6ab0c319be\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Sortil�ge. Terreur.</family>\",\"TtsZoopGuid\":\"443ace1f-fd9f-4583-b458-db6ab0c319be\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 105400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1054": {
                      "FaceURL": "https://i.ibb.co/zHbKJs3d/5c560caf26d5.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00039",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.00000048,
                    "posY": 1.64064467,
                    "posZ": 6.00000238,
                    "rotX": 0.009183136,
                    "rotY": 180.005035,
                    "rotZ": 0.004236773,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Rituel d'Accélération",
                  "Description": "Sortilège. Malédiction.",
                  "GMNotes": "{\"id\":\"165de811-ff99-424d-806a-e1ab66b0bf86\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Sortil�ge. Mal�diction.</family>\",\"TtsZoopGuid\":\"165de811-ff99-424d-806a-e1ab66b0bf86\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 105100,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1051": {
                      "FaceURL": "https://i.ibb.co/6RJqds1B/1acdfafd18a6.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00038",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.00000048,
                    "posY": 1.650275,
                    "posZ": 6.00000238,
                    "rotX": 0.009229615,
                    "rotY": 180.001328,
                    "rotZ": 0.004258242,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Rituel d'Accélération",
                  "Description": "Sortilège. Malédiction.",
                  "GMNotes": "{\"id\":\"6a99906c-976d-4391-ad07-ea34cbc60c72\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Sortil�ge. Mal�diction.</family>\",\"TtsZoopGuid\":\"6a99906c-976d-4391-ad07-ea34cbc60c72\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 105000,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1050": {
                      "FaceURL": "https://i.ibb.co/qFPf8kNx/0995569ea965.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00037",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.00000048,
                    "posY": 1.65990686,
                    "posZ": 6.00000238,
                    "rotX": 0.009274834,
                    "rotY": 180.004471,
                    "rotZ": 0.004280474,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Rituel d'Accélération",
                  "Description": "Sortilège. Malédiction.",
                  "GMNotes": "{\"id\":\"50327be7-4eac-419b-a319-e2148673c3f4\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Sortil�ge. Mal�diction.</family>\",\"TtsZoopGuid\":\"50327be7-4eac-419b-a319-e2148673c3f4\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104900,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1049": {
                      "FaceURL": "https://i.ibb.co/FbVSrgSQ/51f3b09cee3d.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00036",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.00000048,
                    "posY": 1.66953385,
                    "posZ": 6.00000238,
                    "rotX": 0.009321386,
                    "rotY": 180.003769,
                    "rotZ": 0.00429823855,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Rituel d'Accélération",
                  "Description": "Sortilège. Malédiction.",
                  "GMNotes": "{\"id\":\"61db573d-9737-4519-9344-1578300126a4\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Sortil�ge. Mal�diction.</family>\",\"TtsZoopGuid\":\"61db573d-9737-4519-9344-1578300126a4\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1048": {
                      "FaceURL": "https://i.ibb.co/dshj20zh/5b412d7a6645.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00035",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.000001,
                    "posY": 1.67916667,
                    "posZ": 6.00000238,
                    "rotX": 0.009365074,
                    "rotY": 180.014252,
                    "rotZ": 0.00432103965,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Marqué par le Cavalier",
                  "Description": "Manigance.",
                  "GMNotes": "{\"id\":\"0afdb5b7-f8b7-4bf4-8fbd-2ef61c0e79ec\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Manigance.</family>\",\"TtsZoopGuid\":\"0afdb5b7-f8b7-4bf4-8fbd-2ef61c0e79ec\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104700,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1047": {
                      "FaceURL": "https://i.ibb.co/svnkHVBN/15144e3ae058.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00034",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.000001,
                    "posY": 1.68879533,
                    "posZ": 6.00000238,
                    "rotX": 0.009405986,
                    "rotY": 180.0136,
                    "rotZ": 0.0043413,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Marqué par le Cavalier",
                  "Description": "Manigance.",
                  "GMNotes": "{\"id\":\"c4d6c830-7ff2-465f-90e1-610a1faabe93\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Manigance.</family>\",\"TtsZoopGuid\":\"c4d6c830-7ff2-465f-90e1-610a1faabe93\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104600,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1046": {
                      "FaceURL": "https://i.ibb.co/Zz8WmY2x/528fbc4f9727.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00033",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.000001,
                    "posY": 1.69842553,
                    "posZ": 6.00000238,
                    "rotX": 0.009447718,
                    "rotY": 180.007919,
                    "rotZ": 0.00435835775,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Marqué par le Cavalier",
                  "Description": "Manigance.",
                  "GMNotes": "{\"id\":\"4713ad8b-2d4a-42d0-b94b-2fc89d293ea6\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Manigance.</family>\",\"TtsZoopGuid\":\"4713ad8b-2d4a-42d0-b94b-2fc89d293ea6\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1045": {
                      "FaceURL": "https://i.ibb.co/XfVwmBz6/b05d6ec3eee0.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00032",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.00000238,
                    "posY": 1.70805526,
                    "posZ": 5.99999857,
                    "rotX": 0.0126755824,
                    "rotY": 180.000381,
                    "rotZ": 0.00290970574,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Esprit Imminent",
                  "Description": "Manigance.Malédiction.",
                  "GMNotes": "{\"id\":\"bbd219b8-fe68-4237-b954-2f51bf25b09a\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Manigance. Mal�diction.</family>\",\"TtsZoopGuid\":\"bbd219b8-fe68-4237-b954-2f51bf25b09a\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1044": {
                      "FaceURL": "https://i.ibb.co/xdwtN8x/e6135d403e9c.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00031",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.000003,
                    "posY": 1.71771944,
                    "posZ": 5.99999952,
                    "rotX": 0.0106930388,
                    "rotY": 180.012238,
                    "rotZ": 0.00382424844,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Esprit Imminent",
                  "Description": "Manigance.Malédiction.",
                  "GMNotes": "{\"id\":\"22402bca-58cc-48ee-9dc9-f0bbac3c9a38\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Manigance. Mal�diction.</family>\",\"TtsZoopGuid\":\"22402bca-58cc-48ee-9dc9-f0bbac3c9a38\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1043": {
                      "FaceURL": "https://i.ibb.co/ZC64tDj/7d4c1c0db20c.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00030",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.00000238,
                    "posY": 1.72731018,
                    "posZ": 5.99999857,
                    "rotX": 0.0125967124,
                    "rotY": 180.010818,
                    "rotZ": 0.00300211646,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Citrouille Incandescente",
                  "Description": "Manigance.",
                  "GMNotes": "{\"id\":\"7afd0715-501f-49a7-ae3f-9e56ae4f8694\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Manigance.</family>\",\"TtsZoopGuid\":\"7afd0715-501f-49a7-ae3f-9e56ae4f8694\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104200,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1042": {
                      "FaceURL": "https://i.ibb.co/7xVyZ1VZ/4b1f920d91dd.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0002f",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.000003,
                    "posY": 1.73698151,
                    "posZ": 5.99999952,
                    "rotX": 0.0107084773,
                    "rotY": 180.013748,
                    "rotZ": 0.0039043657,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Citrouille Incandescente",
                  "Description": "Manigance.",
                  "GMNotes": "{\"id\":\"34bed66b-ef6f-4f40-b54e-b5e3b5d6c347\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Manigance.</family>\",\"TtsZoopGuid\":\"34bed66b-ef6f-4f40-b54e-b5e3b5d6c347\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104100,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1041": {
                      "FaceURL": "https://i.ibb.co/3925wPtx/4859ec3e206d.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0002e",
                  "Name": "Card",
                  "Transform": {
                    "posX": -3.980522,
                    "posY": 1.75775,
                    "posZ": 5.98265076,
                    "rotX": 0.0108350422,
                    "rotY": 180.009048,
                    "rotZ": 0.00463796174,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Citrouille Incandescente",
                  "Description": "Manigance.",
                  "GMNotes": "{\"id\":\"ef950193-2bc6-4a03-9d61-0eb121f240c4\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Manigance.</family>\",\"TtsZoopGuid\":\"ef950193-2bc6-4a03-9d61-0eb121f240c4\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 104000,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1040": {
                      "FaceURL": "https://i.ibb.co/PZZrGF7N/0d397cf39d5f.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0002d",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.000003,
                    "posY": 1.75623453,
                    "posZ": 5.99999952,
                    "rotX": 0.0107229874,
                    "rotY": 180.015778,
                    "rotZ": 0.00397737324,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Spectre Hessois",
                  "Description": "Monstre. Geist.",
                  "GMNotes": "{\"id\":\"c4c007af-e292-4e13-8be0-0989bcbf1f79\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Monstre. Geist.</family>\",\"TtsZoopGuid\":\"c4c007af-e292-4e13-8be0-0989bcbf1f79\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103900,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1039": {
                      "FaceURL": "https://i.ibb.co/21tzmmqZ/e9715aadc538.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0002c",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.000003,
                    "posY": 1.76586652,
                    "posZ": 5.99999952,
                    "rotX": 0.0107310312,
                    "rotY": 179.996521,
                    "rotZ": 0.00400997372,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Spectre Hessois",
                  "Description": "Monstre. Geist.",
                  "GMNotes": "{\"id\":\"4fcc49fb-4cdb-4803-a9ca-2a27910031eb\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Monstre. Geist.</family>\",\"TtsZoopGuid\":\"4fcc49fb-4cdb-4803-a9ca-2a27910031eb\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1038": {
                      "FaceURL": "https://i.ibb.co/Xx3jxzJV/48d875d6454e.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0002b",
                  "Name": "Card",
                  "Transform": {
                    "posX": -3.98778629,
                    "posY": 1.78663731,
                    "posZ": 6.00007725,
                    "rotX": 0.01083119,
                    "rotY": 180.022964,
                    "rotZ": 0.004655582,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Spectre Hessois",
                  "Description": "Monstre. Geist.",
                  "GMNotes": "{\"id\":\"fb196269-9947-44de-835f-331460362cb9\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Monstre. Geist.</family>\",\"TtsZoopGuid\":\"fb196269-9947-44de-835f-331460362cb9\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103700,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1037": {
                      "FaceURL": "https://i.ibb.co/ZRHQXp0V/550207bf965e.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00028",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.00000143,
                    "posY": 1.80434608,
                    "posZ": 6.00000238,
                    "rotX": 0.009829711,
                    "rotY": 180.00618,
                    "rotZ": 0.00454360433,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Victime Décapitée",
                  "Description": "Monstre. Geist.",
                  "GMNotes": "{\"id\":\"c0dda437-972d-4e65-8b09-cd98827aad40\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Monstre. Geist.</family>\",\"TtsZoopGuid\":\"c0dda437-972d-4e65-8b09-cd98827aad40\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1034": {
                      "FaceURL": "https://i.ibb.co/HDHqF8gM/835db6e07a10.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00027",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.00000143,
                    "posY": 1.81397808,
                    "posZ": 6.00000238,
                    "rotX": 0.009860219,
                    "rotY": 180.002853,
                    "rotZ": 0.00455781724,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Victime Décapitée",
                  "Description": "Monstre. Geist.",
                  "GMNotes": "{\"id\":\"da2474f9-ba93-42be-b7a0-d114afffdc7f\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Monstre. Geist.</family>\",\"TtsZoopGuid\":\"da2474f9-ba93-42be-b7a0-d114afffdc7f\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1033": {
                      "FaceURL": "https://i.ibb.co/qMXtkg45/082d041852a7.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00026",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.00000143,
                    "posY": 1.82360387,
                    "posZ": 6.00000238,
                    "rotX": 0.009888466,
                    "rotY": 180.010468,
                    "rotZ": 0.00457283854,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Victime Décapitée",
                  "Description": "Monstre. Geist.",
                  "GMNotes": "{\"id\":\"44fcffe2-4472-45de-8f5b-5c04b687319c\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Monstre. Geist.</family>\",\"TtsZoopGuid\":\"44fcffe2-4472-45de-8f5b-5c04b687319c\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103200,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1032": {
                      "FaceURL": "https://i.ibb.co/s9LgskXN/11f6e231481c.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00025",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.00000143,
                    "posY": 1.83323634,
                    "posZ": 6.00000238,
                    "rotX": 0.009916995,
                    "rotY": 180.010162,
                    "rotZ": 0.004586813,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Mal Naissant",
                  "Description": "Pouvoir. Sortilège.",
                  "GMNotes": "{\"id\":\"5f9a8009-ffc9-48bb-af5f-9741dad14364\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Pouvoir. Sortil�ge.</family>\",\"TtsZoopGuid\":\"5f9a8009-ffc9-48bb-af5f-9741dad14364\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103100,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1031": {
                      "FaceURL": "https://i.ibb.co/hxBQYXgM/8ee004911191.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00024",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.00000143,
                    "posY": 1.84286308,
                    "posZ": 6.00000238,
                    "rotX": 0.009944284,
                    "rotY": 180.002823,
                    "rotZ": 0.00459809136,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Mal Naissant",
                  "Description": "Pouvoir. Sortilège.",
                  "GMNotes": "{\"id\":\"cbf69773-dead-4b66-abcd-53fb6bf5e573\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Pouvoir. Sortil�ge.</family>\",\"TtsZoopGuid\":\"cbf69773-dead-4b66-abcd-53fb6bf5e573\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103000,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1030": {
                      "FaceURL": "https://i.ibb.co/1SrS1RC/29dfffe22afc.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00023",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.00000143,
                    "posY": 1.85248768,
                    "posZ": 6.00000238,
                    "rotX": 0.009970601,
                    "rotY": 180.010345,
                    "rotZ": 0.00461191963,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Mal Naissant",
                  "Description": "Pouvoir. Sortilège.",
                  "GMNotes": "{\"id\":\"58b843f5-807f-4325-82c4-5fec7ce4e6f6\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Pouvoir. Sortil�ge.</family>\",\"TtsZoopGuid\":\"58b843f5-807f-4325-82c4-5fec7ce4e6f6\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102900,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1029": {
                      "FaceURL": "https://i.ibb.co/WvpfpGVX/bb36e1f1e6ce.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00022",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.00000143,
                    "posY": 1.86211908,
                    "posZ": 6.00000238,
                    "rotX": 0.00999689,
                    "rotY": 180.010925,
                    "rotZ": 0.0046250117,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Enchanté",
                  "Description": "Sortilège. Malédiction.",
                  "GMNotes": "{\"id\":\"d81462a9-17d2-4a92-9c5a-e38feedcf7c4\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Sortil�ge. Mal�diction.</family>\",\"TtsZoopGuid\":\"d81462a9-17d2-4a92-9c5a-e38feedcf7c4\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102800,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1028": {
                      "FaceURL": "https://i.ibb.co/Z16p88Yw/b061e9b4b147.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00021",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.00000143,
                    "posY": 1.871751,
                    "posZ": 6.00000238,
                    "rotX": 0.0100235259,
                    "rotY": 180.010818,
                    "rotZ": 0.00463522272,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Enchanté",
                  "Description": "Sortilège. Malédiction.",
                  "GMNotes": "{\"id\":\"5c7b541e-0156-453e-843f-57c3fe0d156f\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Sortil�ge. Mal�diction.</family>\",\"TtsZoopGuid\":\"5c7b541e-0156-453e-843f-57c3fe0d156f\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102700,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1027": {
                      "FaceURL": "https://i.ibb.co/Zz2KN5nK/f9ac57786447.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e00020",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.000003,
                    "posY": 1.88140059,
                    "posZ": 5.99999952,
                    "rotX": 0.0107994322,
                    "rotY": 180.005875,
                    "rotZ": 0.00434465939,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Enchanté",
                  "Description": "Sortilège. Malédiction.",
                  "GMNotes": "{\"id\":\"2b85f5e7-c016-49b8-94e7-1820cac1d20f\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Sortil�ge. Mal�diction.</family>\",\"TtsZoopGuid\":\"2b85f5e7-c016-49b8-94e7-1820cac1d20f\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102600,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1026": {
                      "FaceURL": "https://i.ibb.co/N25yVfvg/d961f71cce1c.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0001f",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.000003,
                    "posY": 1.89102876,
                    "posZ": 5.99999952,
                    "rotX": 0.010804506,
                    "rotY": 180.005844,
                    "rotZ": 0.004366749,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Enchanté",
                  "Description": "Sortilège. Malédiction.",
                  "GMNotes": "{\"id\":\"ecdacb6b-93cc-4b60-9797-0fc479dddc12\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Sortil�ge. Mal�diction.</family>\",\"TtsZoopGuid\":\"ecdacb6b-93cc-4b60-9797-0fc479dddc12\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1025": {
                      "FaceURL": "https://i.ibb.co/nM1Kt1My/2a1879eb6f1c.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0001e",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.000003,
                    "posY": 1.900662,
                    "posZ": 5.99999952,
                    "rotX": 0.010808466,
                    "rotY": 180.012878,
                    "rotZ": 0.004389543,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Vallon Maudit",
                  "Description": "Malédiction.",
                  "GMNotes": "{\"id\":\"5292251c-74e6-4bb0-9043-73e987af6f8c\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Mal�diction.</family>\",\"TtsZoopGuid\":\"5292251c-74e6-4bb0-9043-73e987af6f8c\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102400,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1024": {
                      "FaceURL": "https://i.ibb.co/hxmgB9T0/cf486a4920d3.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0001d",
                  "Name": "Card",
                  "Transform": {
                    "posX": -4.000003,
                    "posY": 1.91028833,
                    "posZ": 5.99999952,
                    "rotX": 0.0108124577,
                    "rotY": 180.0128,
                    "rotZ": 0.00440976769,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Vallon Maudit",
                  "Description": "Malédiction.",
                  "GMNotes": "{\"id\":\"0e44849d-cc76-4686-a7be-8bf1475287fc\",\"type\":\"Treachery\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Mal�diction.</family>\",\"TtsZoopGuid\":\"0e44849d-cc76-4686-a7be-8bf1475287fc\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 102300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1023": {
                      "FaceURL": "https://i.ibb.co/FLzSCRsD/c8eee358f15a.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "d3f017",
              "Name": "Deck",
              "Transform": {
                "posX": -20.4999981,
                "posY": 1.80055928,
                "posZ": 10.0,
                "rotX": -5.11371536E-06,
                "rotY": 180.000015,
                "rotZ": 1.8047119E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                103500,
                103600
              ],
              "CustomDeck": {
                "1035": {
                  "FaceURL": "https://i.ibb.co/LX3b3wNp/d1c03941cfa2.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1036": {
                  "FaceURL": "https://i.ibb.co/gFVz1LfR/025cfd836647.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "e00029",
                  "Name": "Card",
                  "Transform": {
                    "posX": -21.5,
                    "posY": 1.82924318,
                    "posZ": 9.5,
                    "rotX": 0.0172962528,
                    "rotY": 180.000122,
                    "rotZ": 179.970947,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Crâne Désincarné",
                  "Description": "Monstre. Geist.",
                  "GMNotes": "{\"id\":\"0cb6b1f9-ad04-4c9b-a4cb-f6c29ea50c7a\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Monstre. Geist.</family>\",\"TtsZoopGuid\":\"0cb6b1f9-ad04-4c9b-a4cb-f6c29ea50c7a\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103500,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1035": {
                      "FaceURL": "https://i.ibb.co/LX3b3wNp/d1c03941cfa2.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0002a",
                  "Name": "Card",
                  "Transform": {
                    "posX": -21.0000019,
                    "posY": 1.78359783,
                    "posZ": 9.499999,
                    "rotX": 7.291282E-05,
                    "rotY": 180.0001,
                    "rotZ": 180.000519,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Crâne Désincarné",
                  "Description": "Monstre. Geist.",
                  "GMNotes": "{\"id\":\"21925e44-ddbe-4ca6-98bd-03b941e9bd63\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Monstre. Geist.</family>\",\"TtsZoopGuid\":\"21925e44-ddbe-4ca6-98bd-03b941e9bd63\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 103600,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1036": {
                      "FaceURL": "https://i.ibb.co/gFVz1LfR/025cfd836647.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "e00006",
              "Name": "Card",
              "Transform": {
                "posX": 23.5013,
                "posY": 1.50380516,
                "posZ": -5.52299929,
                "rotX": 0.0108905341,
                "rotY": 180.010788,
                "rotZ": 0.00495051872,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Référence",
              "Description": "La Légende du Cavalier Sans Tête",
              "GMNotes": "{\"id\":\"ae70025d-586e-4827-8446-14b8fc358924\",\"type\":\"ScenarioReference\",\"class\":\"Mythos\",\"tokens\":{\"front\":{\"Cultist\":{\"modifier\":-999,\"description\":\"<family \\\"Arno Pro\\\">-2. S'il y a une fatalit� sur votre lieu, vous devez soit subir 1< >d�g�t, soit consid�rer que ce modificateur est de -4 � la place.</family>\"},\"Skull\":{\"modifier\":-999,\"description\":\"<family \\\"Arno Pro\\\">-X. X est le nombre de lieux avec une fatalit� dessus + 1.</family>\"},\"Tablet\":{\"modifier\":-999,\"description\":\"<family \\\"Arno Pro\\\">-2. S'il y a un ennemi <t>Geist</t> dans votre lieu, vous devez soit subir 1< >horreur, soit consid�rer que ce< >modificateur est de -4 � la place.</family>\"},\"Elder Thing\":{\"modifier\":-999,\"description\":\"<family \\\"Arno Pro\\\">-3. S'il s'agit d'un test de comp�tence qui a lieu lors d'une attaque ou d'une< >tentative d'�vasion contre le< >Cavalier Sans T�te, vous �chouez automatiquement � la place.</family>\"}},\"back\":{\"Cultist\":{\"modifier\":-999,\"description\":\"<family \\\"Arno Pro\\\">-3. S'il y a une fatalit� sur votre lieu, vous devez soit subir 1< >d�g�t, soit consid�rer que ce modificateur est de -5 � la place.</family>\"},\"Skull\":{\"modifier\":-999,\"description\":\"<family \\\"Arno Pro\\\">-X. X est le nombre de lieux avec une fatalit� dessus + 2.</family>\"},\"Tablet\":{\"modifier\":-999,\"description\":\"<family \\\"Arno Pro\\\">-3. S'il y a un ennemi <t>Geist</t> dans votre lieu, vous devez soit subir 1< >horreur, soit consid�rer que ce< >modificateur est de -5 � la place.</family>\"},\"Elder Thing\":{\"modifier\":-999,\"description\":\"<family \\\"Arno Pro\\\">-4. S'il s'agit d'un test de comp�tence qui a lieu lors d'une attaque ou d'une< >tentative d'�vasion contre le< >Cavalier Sans T�te, vous �chouez automatiquement � la place.</family>\"}}},\"TtsZoopGuid\":\"ae70025d-586e-4827-8446-14b8fc358924\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 100500,
              "SidewaysCard": false,
              "CustomDeck": {
                "1005": {
                  "FaceURL": "https://i.ibb.co/cSQqwvXB/0c2742b26d3a.jpg",
                  "BackURL": "https://i.ibb.co/rCtGSxC/b2a6f2149e85.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00007",
              "Name": "Card",
              "Transform": {
                "posX": -20.5000019,
                "posY": 1.78360593,
                "posZ": 4.49999762,
                "rotX": -5.125802E-06,
                "rotY": 180.002014,
                "rotZ": 1.6483294E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Ichabod Crane",
              "Description": "Un Homme Superstitieux",
              "GMNotes": "{\"id\":\"fb5b85d5-080a-4d48-aeb1-53999f45fc3c\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Alli�. Geist.</family>\",\"cost\":4,\"intellectIcons\":1,\"willpowerIcons\":1,\"wildIcons\":1,\"TtsZoopGuid\":\"fb5b85d5-080a-4d48-aeb1-53999f45fc3c\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 100600,
              "SidewaysCard": false,
              "CustomDeck": {
                "1006": {
                  "FaceURL": "https://i.ibb.co/xqkVj9JT/ed7d3ac02446.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00008",
              "Name": "Card",
              "Transform": {
                "posX": -24.5000038,
                "posY": 1.78360593,
                "posZ": 4.49999762,
                "rotX": -5.174769E-06,
                "rotY": 180.009018,
                "rotZ": 8.08354E-08,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Les Livres d'Ichabod",
              "Description": "Objet. Livre.",
              "GMNotes": "{\"id\":\"9bbfbd5b-592c-4926-bec6-2fb111631f7e\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Objet. Livre.</family>\",\"TtsZoopGuid\":\"9bbfbd5b-592c-4926-bec6-2fb111631f7e\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Asset",
                "PlayerCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 100700,
              "SidewaysCard": false,
              "CustomDeck": {
                "1007": {
                  "FaceURL": "https://i.ibb.co/tMtMjc3W/e9b1564ea5ca.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e0000e",
              "Name": "Card",
              "Transform": {
                "posX": 12.499999,
                "posY": 1.5046227,
                "posZ": -6.2201,
                "rotX": 0.0108915977,
                "rotY": 180.0018,
                "rotZ": 0.0049486137,
                "scaleX": 0.714285731,
                "scaleY": 1.0,
                "scaleZ": 0.714285731
              },
              "Nickname": "Sur les Ailes du Vent",
              "Description": "Intrigue 1",
              "GMNotes": "{\"id\":\"99e97688-7fe5-466b-b4b9-301f4040cdb9\",\"type\":\"Agenda\",\"class\":\"Mythos\",\"doomThreshold\":5,\"TtsZoopGuid\":\"99e97688-7fe5-466b-b4b9-301f4040cdb9\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 101200,
              "SidewaysCard": false,
              "CustomDeck": {
                "1012": {
                  "FaceURL": "https://i.ibb.co/spzg40hk/4486a277d298.jpg",
                  "BackURL": "https://i.ibb.co/Gv6LCrvZ/c4defeb72aa9.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00014",
              "Name": "Card",
              "Transform": {
                "posX": 13.999999,
                "posY": 1.506531,
                "posZ": 4.500001,
                "rotX": 0.0108914813,
                "rotY": 180.001,
                "rotZ": 180.004959,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Ferme des Van Tassel",
              "Description": "Val Dormant.",
              "GMNotes": "{\"id\":\"5f5d476d-616d-45e6-9427-87ec29600fd7\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Val Dormant.</family>\",\"locationFront\":{\"icons\":\"Square\",\"connections\":\"T\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Square\",\"connections\":\"T\"},\"TtsZoopGuid\":\"5f5d476d-616d-45e6-9427-87ec29600fd7\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 101600,
              "SidewaysCard": false,
              "CustomDeck": {
                "1016": {
                  "FaceURL": "https://i.ibb.co/CsNd5MnH/8b4af3dc0a7a.jpg",
                  "BackURL": "https://i.ibb.co/V0rrkh0C/2e0f638a8aac.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00015",
              "Name": "Card",
              "Transform": {
                "posX": 3.99999952,
                "posY": 1.50739455,
                "posZ": 4.500001,
                "rotX": 0.0108914692,
                "rotY": 180.000183,
                "rotZ": 180.004959,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "L'Arbre du Major André",
              "Description": "Val Dormant.",
              "GMNotes": "{\"id\":\"d07fa94c-b49e-4baa-8151-b64e6024a1df\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Val Dormant.</family>\",\"locationFront\":{\"icons\":\"T\",\"connections\":\"Square|DoubleSlash\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"T\",\"connections\":\"Square|DoubleSlash\"},\"TtsZoopGuid\":\"d07fa94c-b49e-4baa-8151-b64e6024a1df\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 101700,
              "SidewaysCard": false,
              "CustomDeck": {
                "1017": {
                  "FaceURL": "https://i.ibb.co/27hsmgcD/b3ab846787b9.jpg",
                  "BackURL": "https://i.ibb.co/7tPTdyBp/de8318a48d6a.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00016",
              "Name": "Card",
              "Transform": {
                "posX": 3.99999928,
                "posY": 1.50929546,
                "posZ": 14.500001,
                "rotX": 0.010891486,
                "rotY": 180.0,
                "rotZ": 180.004959,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Marais de Wiley",
              "Description": "Val Dormant.",
              "GMNotes": "{\"id\":\"f795cb12-c45d-49d7-bdd7-4a8ada8c0616\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Val Dormant.</family>\",\"locationFront\":{\"icons\":\"DoubleSlash\",\"connections\":\"T|Cross|Slash|Clover\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"DoubleSlash\",\"connections\":\"T|Cross|Slash|Clover\"},\"TtsZoopGuid\":\"f795cb12-c45d-49d7-bdd7-4a8ada8c0616\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 101800,
              "SidewaysCard": false,
              "CustomDeck": {
                "1018": {
                  "FaceURL": "https://i.ibb.co/DfNZ6dJq/b31de56f9daa.jpg",
                  "BackURL": "https://i.ibb.co/Ng9NvvPG/5ddcb9b69b06.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00017",
              "Name": "Card",
              "Transform": {
                "posX": 8.999999,
                "posY": 1.5107646,
                "posZ": 24.5000019,
                "rotX": 0.01089135,
                "rotY": 180.0014,
                "rotZ": 180.004959,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "École Abandonnée",
              "Description": "Val Dormant. ",
              "GMNotes": "{\"id\":\"a9dc142b-b2ad-4f74-923a-15a9d75aea5d\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Val Dormant.</family>\",\"locationFront\":{\"icons\":\"Slash\",\"connections\":\"DoubleSlash|Clover\",\"uses\":[{\"countPerInvestigator\":3,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Slash\",\"connections\":\"DoubleSlash|Clover\"},\"TtsZoopGuid\":\"a9dc142b-b2ad-4f74-923a-15a9d75aea5d\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 101900,
              "SidewaysCard": false,
              "CustomDeck": {
                "1019": {
                  "FaceURL": "https://i.ibb.co/qLhbyWtL/34228aa1ad59.jpg",
                  "BackURL": "https://i.ibb.co/FLRNFjFh/cea28f7e4937.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00018",
              "Name": "Card",
              "Transform": {
                "posX": -6.00000143,
                "posY": 1.51015913,
                "posZ": 14.5000019,
                "rotX": 0.0108915921,
                "rotY": 180.00058,
                "rotZ": 180.004959,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Ancienne Église Hollandaise",
              "Description": "Val Dormant. Béni.",
              "GMNotes": "{\"id\":\"4fe073e4-6903-4b38-9a32-e9371971ec92\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Val Dormant. B�ni.</family>\",\"locationFront\":{\"icons\":\"Cross\",\"connections\":\"DoubleSlash\",\"uses\":[{\"countPerInvestigator\":2,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Cross\",\"connections\":\"DoubleSlash\"},\"TtsZoopGuid\":\"4fe073e4-6903-4b38-9a32-e9371971ec92\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 102000,
              "SidewaysCard": false,
              "CustomDeck": {
                "1020": {
                  "FaceURL": "https://i.ibb.co/9mnsLNWX/3a1350a90948.jpg",
                  "BackURL": "https://i.ibb.co/sv34dB40/90ffd89f096b.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e00019",
              "Name": "Card",
              "Transform": {
                "posX": -1.000001,
                "posY": 1.51162827,
                "posZ": 24.5000019,
                "rotX": 0.0108915772,
                "rotY": 179.998917,
                "rotZ": 180.004959,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Whiteplains",
              "Description": "Val Dormant.",
              "GMNotes": "{\"id\":\"0e244321-8e77-4369-be5f-39b8e1b13657\",\"type\":\"Location\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Val Dormant.</family>\",\"locationFront\":{\"icons\":\"Clover\",\"connections\":\"DoubleSlash|Slash\",\"uses\":[{\"countPerInvestigator\":1,\"token\":\"clue\",\"type\":\"Clue\"}]},\"locationBack\":{\"icons\":\"Clover\",\"connections\":\"DoubleSlash|Slash\"},\"TtsZoopGuid\":\"0e244321-8e77-4369-be5f-39b8e1b13657\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "Location",
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": true,
              "CardID": 102100,
              "SidewaysCard": false,
              "CustomDeck": {
                "1021": {
                  "FaceURL": "https://i.ibb.co/PvsYtWWX/0bc1c4063233.jpg",
                  "BackURL": "https://i.ibb.co/kVnx1F5n/74a1daaf0ba8.jpg",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": true,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e0001c",
              "Name": "Card",
              "Transform": {
                "posX": 12.499999,
                "posY": 1.50523484,
                "posZ": -2.999999,
                "rotX": 0.010890509,
                "rotY": 180.011978,
                "rotZ": 0.00495052757,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "Cavalier Sans Tête",
              "Description": "Le Spectre de Val Dormant",
              "GMNotes": "{\"id\":\"20d0a30d-f804-4a50-aa9b-d71f69b179cc\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Monstre. Geist. �lite.</family>\",\"TtsZoopGuid\":\"20d0a30d-f804-4a50-aa9b-d71f69b179cc\"}",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": true,
              "CardID": 102200,
              "SidewaysCard": false,
              "CustomDeck": {
                "1022": {
                  "FaceURL": "https://i.ibb.co/KjMNcDtY/f9bcb0cc0218.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": ""
            },
            {
              "GUID": "e1cc7e",
              "Name": "Deck",
              "Transform": {
                "posX": -24.5000019,
                "posY": 1.80055928,
                "posZ": 9.999999,
                "rotX": -5.211975E-06,
                "rotY": 180.000122,
                "rotZ": 4.06067841E-07,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Tags": [
                "ScenarioCard"
              ],
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": true,
              "Hands": false,
              "SidewaysCard": false,
              "DeckIDs": [
                105300,
                105200
              ],
              "CustomDeck": {
                "1053": {
                  "FaceURL": "https://i.ibb.co/WvgyN7gK/4f0796f1292a.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                },
                "1052": {
                  "FaceURL": "https://i.ibb.co/MDQnnxfq/fca2e6532e26.jpg",
                  "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                  "NumWidth": 1,
                  "NumHeight": 1,
                  "BackIsHidden": true,
                  "UniqueBack": false,
                  "Type": 0
                }
              },
              "LuaScript": "",
              "LuaScriptState": "",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "e0003b",
                  "Name": "Card",
                  "Transform": {
                    "posX": -24.0,
                    "posY": 1.82935357,
                    "posZ": 10.0,
                    "rotX": 0.00347086159,
                    "rotY": 180.001175,
                    "rotZ": 179.9988,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sorcière Cachée",
                  "Description": "Humanoïde. Sorcière.",
                  "GMNotes": "{\"id\":\"0a190207-a120-429e-99a1-15ee9b4d0d72\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Humano�de. Sorci�re.</family>\",\"TtsZoopGuid\":\"0a190207-a120-429e-99a1-15ee9b4d0d72\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 105300,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1053": {
                      "FaceURL": "https://i.ibb.co/WvgyN7gK/4f0796f1292a.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                },
                {
                  "GUID": "e0003a",
                  "Name": "Card",
                  "Transform": {
                    "posX": -24.0000019,
                    "posY": 1.78359747,
                    "posZ": 9.999993,
                    "rotX": 7.764557E-05,
                    "rotY": 180.000076,
                    "rotZ": 180.000534,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "Sorcière Cachée",
                  "Description": "Humanoïde. Sorcière.",
                  "GMNotes": "{\"id\":\"9a9835c7-1d90-4ae6-af49-1aaabb04415b\",\"type\":\"Enemy\",\"class\":\"Mythos\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Humano�de. Sorci�re.</family>\",\"TtsZoopGuid\":\"9a9835c7-1d90-4ae6-af49-1aaabb04415b\"}",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "ScenarioCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": true,
                  "CardID": 105200,
                  "SidewaysCard": false,
                  "CustomDeck": {
                    "1052": {
                      "FaceURL": "https://i.ibb.co/MDQnnxfq/fca2e6532e26.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940351785/F64D8EFB75A9E15446D24343DA0A6EEF5B3E43DB/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": ""
                }
              ]
            },
            {
              "GUID": "f7c30c",
              "Name": "Custom_Model_Bag",
              "Transform": {
                "posX": -29.5000038,
                "posY": 1.84000075,
                "posZ": 7.49999666,
                "rotX": -4.99000862E-06,
                "rotY": 179.98909,
                "rotZ": 5.12819668E-07,
                "scaleX": 0.7,
                "scaleY": 0.7,
                "scaleZ": 0.7
              },
              "Nickname": "Soutiens/faiblesses d'histoire",
              "Description": "",
              "GMNotes": "",
              "AltLookAngle": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "ColorDiffuse": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
              },
              "LayoutGroupSortIndex": 0,
              "Value": 0,
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "IgnoreFoW": false,
              "MeasureMovement": false,
              "DragSelectable": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "GridProjection": false,
              "HideWhenFaceDown": false,
              "Hands": false,
              "MaterialIndex": -1,
              "MeshIndex": -1,
              "CustomMesh": {
                "MeshURL": "https://pastebin.com/raw/ALrYhQGb",
                "DiffuseURL": "https://steamusercontent-a.akamaihd.net/ugc/5077277234347423622/F89B4508C6E2782780C2B5593FB68379E0FB2DB6/",
                "NormalURL": "",
                "ColliderURL": "",
                "Convex": true,
                "MaterialIndex": 3,
                "TypeIndex": 6,
                "CustomShader": {
                  "SpecularColor": {
                    "r": 1.0,
                    "g": 1.0,
                    "b": 1.0
                  },
                  "SpecularIntensity": 0.0,
                  "SpecularSharpness": 2.0,
                  "FresnelStrength": 0.0
                },
                "CastShadows": true
              },
              "Bag": {
                "Order": 0
              },
              "LuaScript": "",
              "LuaScriptState": "{\"ml\":[]}",
              "XmlUI": "",
              "ContainedObjects": [
                {
                  "GUID": "d1f516",
                  "Name": "Deck",
                  "Transform": {
                    "posX": -32.5,
                    "posY": 1.96877587,
                    "posZ": 4.5,
                    "rotX": 0.0006329571,
                    "rotY": 180.001434,
                    "rotZ": -0.000183612254,
                    "scaleX": 1.0,
                    "scaleY": 1.0,
                    "scaleZ": 1.0
                  },
                  "Nickname": "",
                  "Description": "",
                  "GMNotes": "",
                  "AltLookAngle": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "ColorDiffuse": {
                    "r": 0.713235259,
                    "g": 0.713235259,
                    "b": 0.713235259
                  },
                  "Tags": [
                    "Asset",
                    "PlayerCard"
                  ],
                  "LayoutGroupSortIndex": 0,
                  "Value": 0,
                  "Locked": false,
                  "Grid": true,
                  "Snap": true,
                  "IgnoreFoW": false,
                  "MeasureMovement": false,
                  "DragSelectable": true,
                  "Autoraise": true,
                  "Sticky": true,
                  "Tooltip": true,
                  "GridProjection": false,
                  "HideWhenFaceDown": true,
                  "Hands": false,
                  "SidewaysCard": false,
                  "DeckIDs": [
                    101100,
                    101000,
                    100900,
                    100800
                  ],
                  "CustomDeck": {
                    "1011": {
                      "FaceURL": "https://i.ibb.co/tMZ6Pmky/2553b0d226c2.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1010": {
                      "FaceURL": "https://i.ibb.co/21xKrZdW/b405adbed3c3.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1009": {
                      "FaceURL": "https://i.ibb.co/4wM6SnKn/f25514f7ca54.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    },
                    "1008": {
                      "FaceURL": "https://i.ibb.co/TxbP1F1y/06ff21483021.jpg",
                      "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                      "NumWidth": 1,
                      "NumHeight": 1,
                      "BackIsHidden": true,
                      "UniqueBack": false,
                      "Type": 0
                    }
                  },
                  "LuaScript": "",
                  "LuaScriptState": "",
                  "XmlUI": "",
                  "ContainedObjects": [
                    {
                      "GUID": "e0000c",
                      "Name": "Card",
                      "Transform": {
                        "posX": -1.01187718,
                        "posY": 1.5224849,
                        "posZ": 28.0000477,
                        "rotX": 0.009689753,
                        "rotY": 180.001251,
                        "rotZ": 0.0166715533,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Récompense de Van Brunt",
                      "Description": "Aubaine.",
                      "GMNotes": "{\"id\":\"0cac0aa3-9387-4cfe-8641-3d846e6348e9\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Aubaine.</family>\",\"permanent\":true,\"TtsZoopGuid\":\"0cac0aa3-9387-4cfe-8641-3d846e6348e9\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Asset",
                        "PlayerCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101100,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1011": {
                          "FaceURL": "https://i.ibb.co/tMZ6Pmky/2553b0d226c2.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000b",
                      "Name": "Card",
                      "Transform": {
                        "posX": -1.00012779,
                        "posY": 1.55226707,
                        "posZ": 28.0000286,
                        "rotX": 359.938416,
                        "rotY": 179.999527,
                        "rotZ": 359.83432,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Récompense de Van Brunt",
                      "Description": "Aubaine.",
                      "GMNotes": "{\"id\":\"0f433d0b-1b69-4bd8-a68b-5f77c13a8936\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Aubaine.</family>\",\"permanent\":true,\"TtsZoopGuid\":\"0f433d0b-1b69-4bd8-a68b-5f77c13a8936\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Asset",
                        "PlayerCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 101000,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1010": {
                          "FaceURL": "https://i.ibb.co/21xKrZdW/b405adbed3c3.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e0000a",
                      "Name": "Card",
                      "Transform": {
                        "posX": -1.00000191,
                        "posY": 1.58684373,
                        "posZ": 28.0,
                        "rotX": 0.0105677722,
                        "rotY": 180.001434,
                        "rotZ": 0.00327829085,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Récompense de Van Brunt",
                      "Description": "Aubaine.",
                      "GMNotes": "{\"id\":\"0e53fa76-b7d6-48d9-9331-c211a8848abf\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Aubaine.</family>\",\"permanent\":true,\"TtsZoopGuid\":\"0e53fa76-b7d6-48d9-9331-c211a8848abf\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Asset",
                        "PlayerCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100900,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1009": {
                          "FaceURL": "https://i.ibb.co/4wM6SnKn/f25514f7ca54.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    },
                    {
                      "GUID": "e00009",
                      "Name": "Card",
                      "Transform": {
                        "posX": -1.000002,
                        "posY": 1.59646988,
                        "posZ": 28.0,
                        "rotX": 0.0105710337,
                        "rotY": 180.002914,
                        "rotZ": 0.00322621828,
                        "scaleX": 1.0,
                        "scaleY": 1.0,
                        "scaleZ": 1.0
                      },
                      "Nickname": "Récompense de Van Brunt",
                      "Description": "Aubaine.",
                      "GMNotes": "{\"id\":\"0e511369-2fbc-48ae-b149-873a1d552360\",\"type\":\"Asset\",\"class\":\"Neutral\",\"traits\":\"<family \\\"Arno Pro\\\"><size 8>Aubaine.</family>\",\"permanent\":true,\"TtsZoopGuid\":\"0e511369-2fbc-48ae-b149-873a1d552360\"}",
                      "AltLookAngle": {
                        "x": 0.0,
                        "y": 0.0,
                        "z": 0.0
                      },
                      "ColorDiffuse": {
                        "r": 0.713235259,
                        "g": 0.713235259,
                        "b": 0.713235259
                      },
                      "Tags": [
                        "Asset",
                        "PlayerCard"
                      ],
                      "LayoutGroupSortIndex": 0,
                      "Value": 0,
                      "Locked": false,
                      "Grid": true,
                      "Snap": true,
                      "IgnoreFoW": false,
                      "MeasureMovement": false,
                      "DragSelectable": true,
                      "Autoraise": true,
                      "Sticky": true,
                      "Tooltip": true,
                      "GridProjection": false,
                      "HideWhenFaceDown": true,
                      "Hands": true,
                      "CardID": 100800,
                      "SidewaysCard": false,
                      "CustomDeck": {
                        "1008": {
                          "FaceURL": "https://i.ibb.co/TxbP1F1y/06ff21483021.jpg",
                          "BackURL": "https://steamusercontent-a.akamaihd.net/ugc/2342503777940352139/A2D42E7E5C43D045D72CE5CFC907E4F886C8C690/",
                          "NumWidth": 1,
                          "NumHeight": 1,
                          "BackIsHidden": true,
                          "UniqueBack": false,
                          "Type": 0
                        }
                      },
                      "LuaScript": "",
                      "LuaScriptState": "",
                      "XmlUI": ""
                    }
                  ]
                }
              ]
            }
          ],
          "AttachedDecals": [
            {
              "Transform": {
                "posX": -0.0021877822,
                "posY": -0.08963572,
                "posZ": -0.00288731651,
                "rotX": 270.0,
                "rotY": 359.869568,
                "rotZ": 0.0,
                "scaleX": 2.00000215,
                "scaleY": 2.00000238,
                "scaleZ": 2.00000262
              },
              "CustomDecal": {
                "Name": "dunwich_back",
                "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/959719855119695911/931B9829687A20F4DEADB36DA57B7E6D76792231/",
                "Size": 7.4
              }
            }
          ]
        }
      ]
    }
  ]
}